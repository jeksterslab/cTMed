[{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/jeksterslab/cTMed/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/jeksterslab/cTMed/articles/cTMed.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"cTMed: Continuous Time Mediation","text":"Calculates standard errors confidence intervals effects continuous time mediation models.","code":""},{"path":"https://github.com/jeksterslab/cTMed/articles/cTMed.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"cTMed: Continuous Time Mediation","text":"can install development version cTMed GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/cTMed\")"},{"path":"https://github.com/jeksterslab/cTMed/articles/cTMed.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"cTMed: Continuous Time Mediation","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/articles/session.html","id":"session","dir":"Articles","previous_headings":"","what":"Session","title":"cTMed: Session","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] cTMed_1.0.1 #>  #> loaded via a namespace (and not attached): #> [1] compiler_4.4.1  tools_4.4.1     Rcpp_1.0.13     rProject_0.0.14 #> [5] knitr_1.48      xfun_0.48       evaluate_1.0.1"},{"path":"https://github.com/jeksterslab/cTMed/articles/session.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"cTMed: Session","text":"","code":"installed.packages()[, c(\"Package\", \"Version\")] #>                   Package             Version       #> askpass           \"askpass\"           \"1.2.1\"       #> cli               \"cli\"               \"3.6.3.9000\"  #> commonmark        \"commonmark\"        \"1.9.2\"       #> credentials       \"credentials\"       \"2.0.2\"       #> cTMed             \"cTMed\"             \"1.0.1\"       #> curl              \"curl\"              \"5.2.3\"       #> devtools          \"devtools\"          \"2.4.5.9000\"  #> evaluate          \"evaluate\"          \"1.0.1\"       #> gert              \"gert\"              \"2.1.4\"       #> glue              \"glue\"              \"1.8.0\"       #> httr2             \"httr2\"             \"1.0.5\"       #> jsonlite          \"jsonlite\"          \"1.8.9\"       #> openssl           \"openssl\"           \"2.2.2\"       #> pkgdown           \"pkgdown\"           \"2.1.1\"       #> profvis           \"profvis\"           \"0.4.0\"       #> ps                \"ps\"                \"1.8.0\"       #> rProject          \"rProject\"          \"0.0.14\"      #> rstudioapi        \"rstudioapi\"        \"0.17.0\"      #> sys               \"sys\"               \"3.4.3\"       #> tinytex           \"tinytex\"           \"0.53.3\"      #> V8                \"V8\"                \"6.0.0\"       #> xfun              \"xfun\"              \"0.48\"        #> abind             \"abind\"             \"1.4-5\"       #> arm               \"arm\"               \"1.14-4\"      #> arrow             \"arrow\"             \"17.0.0.1\"    #> ash               \"ash\"               \"1.0-15\"      #> AsioHeaders       \"AsioHeaders\"       \"1.22.1-2\"    #> askpass           \"askpass\"           \"1.2.0\"       #> assertthat        \"assertthat\"        \"0.2.1\"       #> backports         \"backports\"         \"1.5.0\"       #> base64enc         \"base64enc\"         \"0.1-3\"       #> betaDelta         \"betaDelta\"         \"1.0.5.9000\"  #> betaMC            \"betaMC\"            \"1.3.2.9000\"  #> betaNB            \"betaNB\"            \"1.0.4.9000\"  #> betaSandwich      \"betaSandwich\"      \"1.0.7.9000\"  #> BH                \"BH\"                \"1.84.0-0\"    #> bibtex            \"bibtex\"            \"0.5.1\"       #> BiocManager       \"BiocManager\"       \"1.30.25\"     #> bit               \"bit\"               \"4.0.5\"       #> bit64             \"bit64\"             \"4.0.5\"       #> bitops            \"bitops\"            \"1.0-8\"       #> blob              \"blob\"              \"1.2.4\"       #> brew              \"brew\"              \"1.0-10\"      #> brio              \"brio\"              \"1.1.5\"       #> broom             \"broom\"             \"1.0.6\"       #> bslib             \"bslib\"             \"0.8.0\"       #> cachem            \"cachem\"            \"1.1.0\"       #> callr             \"callr\"             \"3.7.6\"       #> car               \"car\"               \"3.1-2\"       #> caracas           \"caracas\"           \"2.1.1\"       #> carData           \"carData\"           \"3.0-5\"       #> cellranger        \"cellranger\"        \"1.1.0\"       #> cffr              \"cffr\"              \"1.1.1\"       #> checkmate         \"checkmate\"         \"2.3.2\"       #> cli               \"cli\"               \"3.6.3.9000\"  #> clipr             \"clipr\"             \"0.8.0\"       #> clock             \"clock\"             \"0.7.1\"       #> clusterGeneration \"clusterGeneration\" \"1.3.8\"       #> coda              \"coda\"              \"0.19-4.1\"    #> cOde              \"cOde\"              \"1.1.1\"       #> collections       \"collections\"       \"0.3.7\"       #> colorspace        \"colorspace\"        \"2.1-1\"       #> commonmark        \"commonmark\"        \"1.9.1\"       #> conflicted        \"conflicted\"        \"1.2.0\"       #> corpcor           \"corpcor\"           \"1.6.10\"      #> covr              \"covr\"              \"3.6.4\"       #> cowplot           \"cowplot\"           \"1.1.3\"       #> cpp11             \"cpp11\"             \"0.5.0\"       #> crayon            \"crayon\"            \"1.5.3\"       #> credentials       \"credentials\"       \"2.0.1\"       #> crosstalk         \"crosstalk\"         \"1.2.1\"       #> cTMed             \"cTMed\"             \"0.9.1\"       #> ctsem             \"ctsem\"             \"3.10.1\"      #> curl              \"curl\"              \"5.2.2\"       #> cyclocomp         \"cyclocomp\"         \"1.1.1\"       #> data.table        \"data.table\"        \"1.16.0\"      #> DBI               \"DBI\"               \"1.2.3\"       #> dbplyr            \"dbplyr\"            \"2.5.0\"       #> Deriv             \"Deriv\"             \"4.1.3\"       #> desc              \"desc\"              \"1.4.3\"       #> deSolve           \"deSolve\"           \"1.40\"        #> devtools          \"devtools\"          \"2.4.5.9000\"  #> diagram           \"diagram\"           \"1.6.5\"       #> dials             \"dials\"             \"1.3.0\"       #> DiceDesign        \"DiceDesign\"        \"1.10\"        #> diffobj           \"diffobj\"           \"0.3.5\"       #> digest            \"digest\"            \"0.6.37\"      #> distributional    \"distributional\"    \"0.4.0\"       #> distro            \"distro\"            \"0.1.0\"       #> doBy              \"doBy\"              \"4.6.22\"      #> docopt            \"docopt\"            \"0.7.1\"       #> doFuture          \"doFuture\"          \"1.0.1\"       #> downlit           \"downlit\"           \"0.4.4\"       #> dplyr             \"dplyr\"             \"1.1.4\"       #> DT                \"DT\"                \"0.33\"        #> dtplyr            \"dtplyr\"            \"1.3.1\"       #> duckdb            \"duckdb\"            \"1.0.0-2\"     #> dynr              \"dynr\"              \"0.1.16-106\"  #> dynUtils          \"dynUtils\"          \"0.9.1\"       #> ellipse           \"ellipse\"           \"0.5.0\"       #> ellipsis          \"ellipsis\"          \"0.3.2\"       #> evaluate          \"evaluate\"          \"0.24.0\"      #> expm              \"expm\"              \"1.0-0\"       #> fansi             \"fansi\"             \"1.0.6\"       #> farver            \"farver\"            \"2.1.2\"       #> fastDummies       \"fastDummies\"       \"1.7.4\"       #> fastmap           \"fastmap\"           \"1.2.0\"       #> fclust            \"fclust\"            \"2.1.1.1\"     #> fda               \"fda\"               \"6.1.8\"       #> fdrtool           \"fdrtool\"           \"1.2.18\"      #> fds               \"fds\"               \"1.8\"         #> fitCTVARMx        \"fitCTVARMx\"        \"0.0.0.9000\"  #> fitDTVARMx        \"fitDTVARMx\"        \"0.0.0.9000\"  #> FNN               \"FNN\"               \"1.1.4\"       #> fontawesome       \"fontawesome\"       \"0.5.2\"       #> forcats           \"forcats\"           \"1.0.0\"       #> foreach           \"foreach\"           \"1.5.2\"       #> Formula           \"Formula\"           \"1.2-5\"       #> fs                \"fs\"                \"1.6.4\"       #> fst               \"fst\"               \"0.9.8\"       #> fstcore           \"fstcore\"           \"0.9.18\"      #> furrr             \"furrr\"             \"0.3.1\"       #> future            \"future\"            \"1.34.0\"      #> future.apply      \"future.apply\"      \"1.11.2\"      #> gargle            \"gargle\"            \"1.5.2\"       #> generics          \"generics\"          \"0.1.3\"       #> gert              \"gert\"              \"2.1.1\"       #> ggplot2           \"ggplot2\"           \"3.5.1\"       #> ggrepel           \"ggrepel\"           \"0.9.6\"       #> gh                \"gh\"                \"1.4.1\"       #> gitcreds          \"gitcreds\"          \"0.1.2\"       #> glasso            \"glasso\"            \"1.11\"        #> glmnet            \"glmnet\"            \"4.1-8\"       #> globals           \"globals\"           \"0.16.3\"      #> glue              \"glue\"              \"1.7.0\"       #> googledrive       \"googledrive\"       \"2.1.1\"       #> googlesheets4     \"googlesheets4\"     \"1.1.1\"       #> gower             \"gower\"             \"1.0.1\"       #> GPArotation       \"GPArotation\"       \"2024.3-1\"    #> GPfit             \"GPfit\"             \"1.0-8\"       #> graphicalVAR      \"graphicalVAR\"      \"0.3.4\"       #> gridExtra         \"gridExtra\"         \"2.3\"         #> gsubfn            \"gsubfn\"            \"0.7\"         #> gtable            \"gtable\"            \"0.3.5\"       #> gtools            \"gtools\"            \"3.9.5\"       #> hardhat           \"hardhat\"           \"1.4.0\"       #> haven             \"haven\"             \"2.5.4\"       #> hdrcde            \"hdrcde\"            \"3.4\"         #> here              \"here\"              \"1.0.1\"       #> highr             \"highr\"             \"0.11\"        #> Hmisc             \"Hmisc\"             \"5.1-3\"       #> hms               \"hms\"               \"1.1.3\"       #> htmlTable         \"htmlTable\"         \"2.4.3\"       #> htmltools         \"htmltools\"         \"0.5.8.1\"     #> htmlwidgets       \"htmlwidgets\"       \"1.6.4\"       #> httpgd            \"httpgd\"            \"2.0.2\"       #> httpuv            \"httpuv\"            \"1.6.15\"      #> httr              \"httr\"              \"1.4.7\"       #> httr2             \"httr2\"             \"1.0.3\"       #> ids               \"ids\"               \"1.0.1\"       #> ifaTools          \"ifaTools\"          \"0.23\"        #> igraph            \"igraph\"            \"2.0.3\"       #> infer             \"infer\"             \"1.0.7\"       #> ini               \"ini\"               \"0.3.1\"       #> inline            \"inline\"            \"0.3.19\"      #> ipred             \"ipred\"             \"0.9-15\"      #> isoband           \"isoband\"           \"0.2.7\"       #> iterators         \"iterators\"         \"1.0.14\"      #> jomo              \"jomo\"              \"2.7-6\"       #> jpeg              \"jpeg\"              \"0.1-10\"      #> jquerylib         \"jquerylib\"         \"0.1.4\"       #> jsonlite          \"jsonlite\"          \"1.8.8\"       #> jsonvalidate      \"jsonvalidate\"      \"1.3.2\"       #> kernlab           \"kernlab\"           \"0.9-33\"      #> knitr             \"knitr\"             \"1.48\"        #> ks                \"ks\"                \"1.14.2\"      #> labeling          \"labeling\"          \"0.4.3\"       #> Lahman            \"Lahman\"            \"11.0-0\"      #> languageserver    \"languageserver\"    \"0.3.16\"      #> later             \"later\"             \"1.3.2\"       #> latex2exp         \"latex2exp\"         \"0.9.6\"       #> lava              \"lava\"              \"1.8.0\"       #> lavaan            \"lavaan\"            \"0.6-18\"      #> lazyeval          \"lazyeval\"          \"0.2.2\"       #> lhs               \"lhs\"               \"1.2.0\"       #> lifecycle         \"lifecycle\"         \"1.0.4\"       #> lintr             \"lintr\"             \"3.1.2\"       #> listenv           \"listenv\"           \"0.9.1\"       #> littler           \"littler\"           \"0.3.20\"      #> lme4              \"lme4\"              \"1.1-35.5\"    #> locfit            \"locfit\"            \"1.5-9.10\"    #> longMI            \"longMI\"            \"1.0.0\"       #> loo               \"loo\"               \"2.8.0\"       #> lubridate         \"lubridate\"         \"1.9.3\"       #> magick            \"magick\"            \"2.8.4\"       #> magrittr          \"magrittr\"          \"2.0.3\"       #> markdown          \"markdown\"          \"1.13\"        #> MatrixModels      \"MatrixModels\"      \"0.5-3\"       #> matrixStats       \"matrixStats\"       \"1.4.1\"       #> mclust            \"mclust\"            \"6.1.1\"       #> memoise           \"memoise\"           \"2.0.1\"       #> metaSEM           \"metaSEM\"           \"1.4.0\"       #> metaVAR           \"metaVAR\"           \"0.0.0.9000\"  #> mice              \"mice\"              \"3.16.0\"      #> microbenchmark    \"microbenchmark\"    \"1.5.0\"       #> mime              \"mime\"              \"0.12\"        #> miniUI            \"miniUI\"            \"0.1.1.1\"     #> minqa             \"minqa\"             \"1.2.8\"       #> mitml             \"mitml\"             \"0.4-5\"       #> mize              \"mize\"              \"0.2.4\"       #> mlVAR             \"mlVAR\"             \"0.5.2\"       #> mnormt            \"mnormt\"            \"2.1.1\"       #> modeldata         \"modeldata\"         \"1.4.0\"       #> modelenv          \"modelenv\"          \"0.1.1\"       #> modelr            \"modelr\"            \"0.1.11\"      #> MplusAutomation   \"MplusAutomation\"   \"1.1.1\"       #> multicool         \"multicool\"         \"1.0.1\"       #> munsell           \"munsell\"           \"0.5.1\"       #> mvtnorm           \"mvtnorm\"           \"1.3-1\"       #> nloptr            \"nloptr\"            \"2.1.1\"       #> numDeriv          \"numDeriv\"          \"2016.8-1.1\"  #> nycflights13      \"nycflights13\"      \"1.0.2\"       #> OpenMx            \"OpenMx\"            \"2.21.12\"     #> openssl           \"openssl\"           \"2.2.1\"       #> ordinal           \"ordinal\"           \"2023.12-4.1\" #> pan               \"pan\"               \"1.9\"         #> pander            \"pander\"            \"0.6.5\"       #> parallelly        \"parallelly\"        \"1.38.0\"      #> parsnip           \"parsnip\"           \"1.2.1\"       #> patchwork         \"patchwork\"         \"1.2.0\"       #> pbapply           \"pbapply\"           \"1.7-2\"       #> pbivnorm          \"pbivnorm\"          \"0.6.0\"       #> pbkrtest          \"pbkrtest\"          \"0.5.3\"       #> pcaPP             \"pcaPP\"             \"2.0-5\"       #> pdftools          \"pdftools\"          \"3.4.0\"       #> pillar            \"pillar\"            \"1.9.0\"       #> pkgbuild          \"pkgbuild\"          \"1.4.4\"       #> pkgconfig         \"pkgconfig\"         \"2.0.3\"       #> pkgdown           \"pkgdown\"           \"2.1.0\"       #> pkgload           \"pkgload\"           \"1.4.0\"       #> plogr             \"plogr\"             \"0.2.0\"       #> plyr              \"plyr\"              \"1.8.9\"       #> png               \"png\"               \"0.1-8\"       #> posterior         \"posterior\"         \"1.6.0\"       #> pracma            \"pracma\"            \"2.4.4\"       #> praise            \"praise\"            \"1.0.0\"       #> prettyunits       \"prettyunits\"       \"1.2.0\"       #> printr            \"printr\"            \"0.3\"         #> processx          \"processx\"          \"3.8.4\"       #> prodlim           \"prodlim\"           \"2024.06.25\"  #> profvis           \"profvis\"           \"0.3.8\"       #> progress          \"progress\"          \"1.2.3\"       #> progressr         \"progressr\"         \"0.14.0\"      #> promises          \"promises\"          \"1.3.0\"       #> proto             \"proto\"             \"1.0.0\"       #> ps                \"ps\"                \"1.7.7\"       #> psych             \"psych\"             \"2.4.6.26\"    #> purrr             \"purrr\"             \"1.0.2\"       #> qgraph            \"qgraph\"            \"1.9.8\"       #> qpdf              \"qpdf\"              \"1.3.3\"       #> quadprog          \"quadprog\"          \"1.5-8\"       #> quantreg          \"quantreg\"          \"5.98\"        #> quarto            \"quarto\"            \"1.4.4\"       #> QuickJSR          \"QuickJSR\"          \"1.3.1\"       #> R.cache           \"R.cache\"           \"0.16.0\"      #> R.methodsS3       \"R.methodsS3\"       \"1.8.2\"       #> R.oo              \"R.oo\"              \"1.26.0\"      #> R.utils           \"R.utils\"           \"2.12.3\"      #> R6                \"R6\"                \"2.5.1\"       #> ragg              \"ragg\"              \"1.3.3\"       #> rainbow           \"rainbow\"           \"3.8\"         #> rappdirs          \"rappdirs\"          \"0.3.3\"       #> rbibutils         \"rbibutils\"         \"2.2.16\"      #> rcmdcheck         \"rcmdcheck\"         \"1.4.0\"       #> RColorBrewer      \"RColorBrewer\"      \"1.1-3\"       #> Rcpp              \"Rcpp\"              \"1.0.13\"      #> RcppArmadillo     \"RcppArmadillo\"     \"14.0.0-1\"    #> RcppEigen         \"RcppEigen\"         \"0.3.4.0.2\"   #> RcppGSL           \"RcppGSL\"           \"0.3.13\"      #> RcppParallel      \"RcppParallel\"      \"5.1.9\"       #> RcppTOML          \"RcppTOML\"          \"0.2.2\"       #> RCurl             \"RCurl\"             \"1.98-1.16\"   #> Rdpack            \"Rdpack\"            \"2.6.1\"       #> readr             \"readr\"             \"2.1.5\"       #> readxl            \"readxl\"            \"1.4.3\"       #> recipes           \"recipes\"           \"1.1.0\"       #> RefManageR        \"RefManageR\"        \"1.4.0\"       #> rematch           \"rematch\"           \"2.0.0\"       #> rematch2          \"rematch2\"          \"2.1.2\"       #> remotes           \"remotes\"           \"2.5.0\"       #> reprex            \"reprex\"            \"2.1.1\"       #> reshape2          \"reshape2\"          \"1.4.4\"       #> reticulate        \"reticulate\"        \"1.39.0\"      #> rex               \"rex\"               \"1.2.1\"       #> rhub              \"rhub\"              \"2.0.0\"       #> rjags             \"rjags\"             \"4-16\"        #> rlang             \"rlang\"             \"1.1.4\"       #> RMariaDB          \"RMariaDB\"          \"1.3.2\"       #> rmarkdown         \"rmarkdown\"         \"2.28\"        #> roxygen2          \"roxygen2\"          \"7.3.2\"       #> rpf               \"rpf\"               \"1.0.14\"      #> RPostgres         \"RPostgres\"         \"1.4.7\"       #> rProject          \"rProject\"          \"0.0.14\"      #> rprojroot         \"rprojroot\"         \"2.0.4\"       #> rsample           \"rsample\"           \"1.2.1\"       #> RSQLite           \"RSQLite\"           \"2.3.7\"       #> rstan             \"rstan\"             \"2.32.6\"      #> rstantools        \"rstantools\"        \"2.4.0\"       #> rstudioapi        \"rstudioapi\"        \"0.16.0\"      #> rversions         \"rversions\"         \"2.1.2\"       #> rvest             \"rvest\"             \"1.0.4\"       #> Ryacas            \"Ryacas\"            \"1.1.5\"       #> sass              \"sass\"              \"0.4.9\"       #> scales            \"scales\"            \"1.3.0\"       #> selectr           \"selectr\"           \"0.4-2\"       #> semlbci           \"semlbci\"           \"0.11.2\"      #> semmcci           \"semmcci\"           \"1.1.4.9000\"  #> sessioninfo       \"sessioninfo\"       \"1.2.2\"       #> sfd               \"sfd\"               \"0.1.0\"       #> shape             \"shape\"             \"1.4.6.1\"     #> shiny             \"shiny\"             \"1.9.1\"       #> simStateSpace     \"simStateSpace\"     \"1.2.2.9000\"  #> slider            \"slider\"            \"0.3.1\"       #> snow              \"snow\"              \"0.4-4\"       #> snowfall          \"snowfall\"          \"1.84-6.3\"    #> sourcetools       \"sourcetools\"       \"0.1.7-1\"     #> SparseM           \"SparseM\"           \"1.84-2\"      #> SQUAREM           \"SQUAREM\"           \"2021.1\"      #> StanHeaders       \"StanHeaders\"       \"2.32.10\"     #> statmod           \"statmod\"           \"1.5.0\"       #> stringi           \"stringi\"           \"1.8.4\"       #> stringr           \"stringr\"           \"1.5.1\"       #> styler            \"styler\"            \"1.10.3\"      #> symSEM            \"symSEM\"            \"0.4\"         #> sys               \"sys\"               \"3.4.2\"       #> systemfonts       \"systemfonts\"       \"1.1.0\"       #> tensorA           \"tensorA\"           \"0.36.2.1\"    #> testthat          \"testthat\"          \"3.2.1.9000\"  #> texreg            \"texreg\"            \"1.39.4\"      #> textshaping       \"textshaping\"       \"0.4.0\"       #> tibble            \"tibble\"            \"3.2.1\"       #> tidymodels        \"tidymodels\"        \"1.2.0\"       #> tidyr             \"tidyr\"             \"1.3.1\"       #> tidyselect        \"tidyselect\"        \"1.2.1\"       #> tidyverse         \"tidyverse\"         \"2.0.0\"       #> timechange        \"timechange\"        \"0.3.0\"       #> timeDate          \"timeDate\"          \"4032.109\"    #> tinytex           \"tinytex\"           \"0.52.2\"      #> tune              \"tune\"              \"1.2.1\"       #> tzdb              \"tzdb\"              \"0.4.0\"       #> ucminf            \"ucminf\"            \"1.2.2\"       #> unigd             \"unigd\"             \"0.1.2\"       #> urlchecker        \"urlchecker\"        \"1.0.1\"       #> usethis           \"usethis\"           \"3.0.0\"       #> utf8              \"utf8\"              \"1.2.4\"       #> uuid              \"uuid\"              \"1.2-1\"       #> V8                \"V8\"                \"5.0.0\"       #> vctrs             \"vctrs\"             \"0.6.5\"       #> viridis           \"viridis\"           \"0.6.5\"       #> viridisLite       \"viridisLite\"       \"0.4.2\"       #> vroom             \"vroom\"             \"1.6.5\"       #> waldo             \"waldo\"             \"0.5.3\"       #> warp              \"warp\"              \"0.2.1\"       #> whisker           \"whisker\"           \"0.4.1\"       #> whoami            \"whoami\"            \"1.3.0\"       #> withr             \"withr\"             \"3.0.1\"       #> workflows         \"workflows\"         \"1.1.4\"       #> workflowsets      \"workflowsets\"      \"1.1.0\"       #> xfun              \"xfun\"              \"0.47\"        #> xml2              \"xml2\"              \"1.3.6\"       #> xmlparsedata      \"xmlparsedata\"      \"1.0.5\"       #> xopen             \"xopen\"             \"1.0.1\"       #> xtable            \"xtable\"            \"1.8-4\"       #> yaml              \"yaml\"              \"2.3.10\"      #> yardstick         \"yardstick\"         \"1.3.1\"       #> zip               \"zip\"               \"2.3.1\"       #> base              \"base\"              \"4.4.1\"       #> boot              \"boot\"              \"1.3-30\"      #> class             \"class\"             \"7.3-22\"      #> cluster           \"cluster\"           \"2.1.6\"       #> codetools         \"codetools\"         \"0.2-20\"      #> compiler          \"compiler\"          \"4.4.1\"       #> datasets          \"datasets\"          \"4.4.1\"       #> foreign           \"foreign\"           \"0.8-86\"      #> graphics          \"graphics\"          \"4.4.1\"       #> grDevices         \"grDevices\"         \"4.4.1\"       #> grid              \"grid\"              \"4.4.1\"       #> KernSmooth        \"KernSmooth\"        \"2.23-24\"     #> lattice           \"lattice\"           \"0.22-6\"      #> MASS              \"MASS\"              \"7.3-60.2\"    #> Matrix            \"Matrix\"            \"1.7-0\"       #> methods           \"methods\"           \"4.4.1\"       #> mgcv              \"mgcv\"              \"1.9-1\"       #> nlme              \"nlme\"              \"3.1-164\"     #> nnet              \"nnet\"              \"7.3-19\"      #> parallel          \"parallel\"          \"4.4.1\"       #> rpart             \"rpart\"             \"4.1.23\"      #> spatial           \"spatial\"           \"7.3-17\"      #> splines           \"splines\"           \"4.4.1\"       #> stats             \"stats\"             \"4.4.1\"       #> stats4            \"stats4\"            \"4.4.1\"       #> survival          \"survival\"          \"3.6-4\"       #> tcltk             \"tcltk\"             \"4.4.1\"       #> tools             \"tools\"             \"4.4.1\"       #> utils             \"utils\"             \"4.4.1\""},{"path":"https://github.com/jeksterslab/cTMed/articles/session.html","id":"cpu","dir":"Articles","previous_headings":"","what":"CPU","title":"cTMed: Session","text":"","code":"#> Architecture:                       x86_64 #> CPU op-mode(s):                     32-bit, 64-bit #> Address sizes:                      46 bits physical, 48 bits virtual #> Byte Order:                         Little Endian #> CPU(s):                             8 #> On-line CPU(s) list:                0-7 #> Vendor ID:                          GenuineIntel #> Model name:                         Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz #> CPU family:                         6 #> Model:                              62 #> Thread(s) per core:                 2 #> Core(s) per socket:                 4 #> Socket(s):                          1 #> Stepping:                           4 #> CPU max MHz:                        3900.0000 #> CPU min MHz:                        1200.0000 #> BogoMIPS:                           7382.52 #> Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm cpuid_fault epb pti ssbd ibrs ibpb stibp tpr_shadow flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts vnmi md_clear flush_l1d #> Virtualization:                     VT-x #> L1d cache:                          128 KiB (4 instances) #> L1i cache:                          128 KiB (4 instances) #> L2 cache:                           1 MiB (4 instances) #> L3 cache:                           10 MiB (1 instance) #> NUMA node(s):                       1 #> NUMA node0 CPU(s):                  0-7 #> Vulnerability Gather data sampling: Not affected #> Vulnerability Itlb multihit:        KVM: Mitigation: VMX disabled #> Vulnerability L1tf:                 Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable #> Vulnerability Mds:                  Mitigation; Clear CPU buffers; SMT vulnerable #> Vulnerability Meltdown:             Mitigation; PTI #> Vulnerability Mmio stale data:      Unknown: No mitigations #> Vulnerability Retbleed:             Not affected #> Vulnerability Spec rstack overflow: Not affected #> Vulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl #> Vulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization #> Vulnerability Spectre v2:           Mitigation; Retpolines, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling, PBRSB-eIBRS Not affected #> Vulnerability Srbds:                Not affected #> Vulnerability Tsx async abort:      Not affected"},{"path":"https://github.com/jeksterslab/cTMed/articles/session.html","id":"memory","dir":"Articles","previous_headings":"","what":"Memory","title":"cTMed: Session","text":"","code":"#>                total        used        free      shared  buff/cache   available #> Mem:            11Gi       8.3Gi       1.1Gi       154Mi       2.1Gi       2.7Gi #> Swap:          7.8Gi       1.8Gi       6.0Gi #> Total:          19Gi        10Gi       7.1Gi"},{"path":"https://github.com/jeksterslab/cTMed/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/jeksterslab/cTMed/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . (2024). cTMed: Continuous Time Mediation. R package version 1.0.1. https://github.com/jeksterslab/cTMed","code":"@Manual{,   author = {Ivan Jacob Agaloos Pesigan},   title = {cTMed: Continuous Time Mediation},   year = {2024},   note = {R package version 1.0.1}, }"},{"path":"https://github.com/jeksterslab/cTMed/index.html","id":"ctmed","dir":"","previous_headings":"","what":"Continuous Time Mediation","title":"Continuous Time Mediation","text":"Ivan Jacob Agaloos Pesigan 2024-10-18","code":""},{"path":"https://github.com/jeksterslab/cTMed/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Continuous Time Mediation","text":"Calculates standard errors confidence intervals effects continuous time mediation models.","code":""},{"path":"https://github.com/jeksterslab/cTMed/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Continuous Time Mediation","text":"can install development version cTMed GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/cTMed\")"},{"path":"https://github.com/jeksterslab/cTMed/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Continuous Time Mediation","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"function computes delta method sampling variance-covariance matrix elements matrix lagged coefficients \\(\\boldsymbol{\\beta}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"","code":"DeltaBeta(phi, vcov_phi_vec, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores length delta_t long.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"Returns object class ctmeddelta list following elements: call Function call. args Function arguments. fun Function used (\"DeltaBeta\"). output list length equal length delta_t. element output list following elements: delta_t Time interval. jacobian Jacobian matrix. est Estimated elements matrix lagged coefficients. vcov Sampling variance-covariance matrix estimated elements matrix lagged coefficients.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"See Total().","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"delta-method","dir":"Reference","previous_headings":"","what":"Delta Method","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). multivariate central limit theory, function \\(\\mathbf{g}\\) using \\(\\hat{\\boldsymbol{\\theta}}\\) input can expressed : $$   \t\\sqrt{n}   \t\\left(   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t-   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t\\right)   \t\\xrightarrow[]{   \t\t\\mathrm{D}   \t}   \t\\mathcal{N}   \t\\left(   \t0,   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ \\(\\mathbf{J}\\) matrix first-order derivatives function \\(\\mathbf{g}\\) respect elements \\(\\boldsymbol{\\theta}\\) \\(\\boldsymbol{\\Gamma}\\) asymptotic variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\). former, can derive distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) follows: $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \tn^{-1}   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ uncertainty associated estimator \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , therefore, given \\(n^{-1} \\mathbf{J} \\boldsymbol{\\Gamma} \\mathbf{J}^{\\prime}\\) . \\(\\boldsymbol{\\Gamma}\\) unknown, substitution, can use estimated sampling variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\), , \\(\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) \\(n^{-1} \\boldsymbol{\\Gamma}\\). Therefore, sampling variance-covariance matrix \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) given $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \t\\mathbf{J}   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\mathbf{J}^{\\prime}   \t\\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method Sampling Variance-Covariance Matrix for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — DeltaBeta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- DeltaBeta(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1 ) #>  #> Elements of the matrix of lagged coefficients #>  #> $`1` #>             interval     est     se       z      p    2.5%   97.5% #> from x to x        1  0.6998 0.0293 23.8660 0.0000  0.6423  0.7572 #> from x to m        1  0.5000 0.0313 15.9563 0.0000  0.4386  0.5615 #> from x to y        1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> from m to x        1  0.0000 0.0233  0.0000 1.0000 -0.0456  0.0456 #> from m to m        1  0.5999 0.0248 24.1514 0.0000  0.5512  0.6486 #> from m to y        1  0.3998 0.0262 15.2762 0.0000  0.3485  0.4511 #> from y to x        1  0.0000 0.0270  0.0000 1.0000 -0.0529  0.0529 #> from y to m        1  0.0000 0.0289  0.0000 1.0000 -0.0566  0.0566 #> from y to y        1  0.5001 0.0304 16.4383 0.0000  0.4404  0.5597 #>   # Range of time intervals --------------------------------------------------- delta <- DeltaBeta(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5 ) plot(delta)           # Methods ------------------------------------------------------------------- # DeltaBeta has a number of methods including # print, summary, confint, and plot print(delta) #>  #> Elements of the matrix of lagged coefficients #>  #> $`1` #>             interval     est     se       z      p    2.5%   97.5% #> from x to x        1  0.6998 0.0293 23.8660 0.0000  0.6423  0.7572 #> from x to m        1  0.5000 0.0313 15.9563 0.0000  0.4386  0.5615 #> from x to y        1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> from m to x        1  0.0000 0.0233  0.0000 1.0000 -0.0456  0.0456 #> from m to m        1  0.5999 0.0248 24.1514 0.0000  0.5512  0.6486 #> from m to y        1  0.3998 0.0262 15.2762 0.0000  0.3485  0.4511 #> from y to x        1  0.0000 0.0270  0.0000 1.0000 -0.0529  0.0529 #> from y to m        1  0.0000 0.0289  0.0000 1.0000 -0.0566  0.0566 #> from y to y        1  0.5001 0.0304 16.4383 0.0000  0.4404  0.5597 #>  #> $`2` #>             interval    est     se       z      p    2.5%  97.5% #> from x to x        2 0.4897 0.0379 12.9296 0.0000  0.4155 0.5639 #> from x to m        2 0.6499 0.0392 16.5919 0.0000  0.5731 0.7266 #> from x to y        2 0.0799 0.0370  2.1603 0.0307  0.0074 0.1524 #> from m to x        2 0.0000 0.0264  0.0000 1.0000 -0.0516 0.0516 #> from m to m        2 0.3599 0.0275 13.1088 0.0000  0.3061 0.4137 #> from m to y        2 0.4398 0.0256 17.1867 0.0000  0.3897 0.4900 #> from y to x        2 0.0000 0.0324  0.0000 1.0000 -0.0634 0.0634 #> from y to m        2 0.0000 0.0333  0.0000 1.0000 -0.0652 0.0652 #> from y to y        2 0.2501 0.0311  8.0429 0.0000  0.1891 0.3110 #>  #> $`3` #>             interval    est     se       z p    2.5%  97.5% #> from x to x        3 0.3427 0.0389  8.8130 0  0.2665 0.4189 #> from x to m        3 0.6347 0.0436 14.5697 0  0.5493 0.7201 #> from x to y        3 0.2508 0.0366  6.8606 0  0.1792 0.3225 #> from m to x        3 0.0000 0.0257  0.0000 1 -0.0503 0.0503 #> from m to m        3 0.2159 0.0298  7.2403 0  0.1574 0.2743 #> from m to y        3 0.3638 0.0248 14.6987 0  0.3153 0.4123 #> from y to x        3 0.0000 0.0294  0.0000 1 -0.0576 0.0576 #> from y to m        3 0.0000 0.0340  0.0000 1 -0.0666 0.0666 #> from y to y        3 0.1251 0.0270  4.6294 0  0.0721 0.1780 #>  #> $`4` #>             interval    est     se       z      p    2.5%  97.5% #> from x to x        4 0.2398 0.0364  6.5874 0.0000  0.1684 0.3111 #> from x to m        4 0.5521 0.0458 12.0555 0.0000  0.4623 0.6419 #> from x to y        4 0.3449 0.0350  9.8570 0.0000  0.2763 0.4135 #> from m to x        4 0.0000 0.0242  0.0000 1.0000 -0.0475 0.0475 #> from m to m        4 0.1295 0.0312  4.1542 0.0000  0.0684 0.1906 #> from m to y        4 0.2683 0.0241 11.1113 0.0000  0.2209 0.3156 #> from y to x        4 0.0000 0.0239  0.0000 1.0000 -0.0469 0.0469 #> from y to m        4 0.0000 0.0335  0.0000 1.0000 -0.0656 0.0656 #> from y to y        4 0.0625 0.0234  2.6676 0.0076  0.0166 0.1085 #>  #> $`5` #>             interval    est     se       z      p    2.5%  97.5% #> from x to x        5 0.1678 0.0330  5.0896 0.0000  0.1032 0.2324 #> from x to m        5 0.4511 0.0460  9.8011 0.0000  0.3609 0.5413 #> from x to y        5 0.3693 0.0342 10.8008 0.0000  0.3022 0.4363 #> from m to x        5 0.0000 0.0221  0.0000 1.0000 -0.0433 0.0433 #> from m to m        5 0.0777 0.0308  2.5220 0.0117  0.0173 0.1381 #> from m to y        5 0.1859 0.0233  7.9748 0.0000  0.1402 0.2316 #> from y to x        5 0.0000 0.0184  0.0000 1.0000 -0.0361 0.0361 #> from y to m        5 0.0000 0.0312  0.0000 1.0000 -0.0612 0.0612 #> from y to y        5 0.0313 0.0216  1.4462 0.1481 -0.0111 0.0737 #>  summary(delta) #>         effect interval         est         se         z             p #> 1  from x to x        1  0.69977250 0.02932095 23.865954 6.916112e-126 #> 2  from x to m        1  0.50003412 0.03133764 15.956341  2.573862e-57 #> 3  from x to y        1 -0.10003837 0.03288098 -3.042439  2.346691e-03 #> 4  from m to x        1  0.00000000 0.02326280  0.000000  1.000000e+00 #> 5  from m to m        1  0.59989538 0.02483899 24.151356 7.225712e-129 #> 6  from m to y        1  0.39983562 0.02617378 15.276188  1.102009e-52 #> 7  from y to x        1  0.00000000 0.02697603  0.000000  1.000000e+00 #> 8  from y to m        1  0.00000000 0.02887417  0.000000  1.000000e+00 #> 9  from y to y        1  0.50007360 0.03042133 16.438255  1.018079e-60 #> 10 from x to x        2  0.48968155 0.03787288 12.929610  3.063702e-38 #> 11 from x to m        2  0.64987829 0.03916829 16.591949  7.969198e-62 #> 12 from x to y        2  0.07990080 0.03698524  2.160343  3.074615e-02 #> 13 from m to x        2  0.00000000 0.02635003  0.000000  1.000000e+00 #> 14 from m to m        2  0.35987447 0.02745299 13.108752  2.933880e-39 #> 15 from m to y        2  0.43980678 0.02558996 17.186694  3.340452e-66 #> 16 from y to x        2  0.00000000 0.03236708  0.000000  1.000000e+00 #> 17 from y to m        2  0.00000000 0.03326775  0.000000  1.000000e+00 #> 18 from y to y        2  0.25007360 0.03109233  8.042934  8.771243e-16 #> 19 from x to x        3  0.34266568 0.03888194  8.812977  1.218654e-18 #> 20 from x to m        3  0.63471647 0.04356400 14.569747  4.375085e-48 #> 21 from x to y        3  0.25081383 0.03655859  6.860599  6.857257e-12 #> 22 from m to x        3  0.00000000 0.02565100  0.000000  1.000000e+00 #> 23 from m to m        3  0.21588703 0.02981760  7.240256  4.478385e-13 #> 24 from m to y        3  0.36382639 0.02475232 14.698681  6.572757e-49 #> 25 from y to x        3  0.00000000 0.02939559  0.000000  1.000000e+00 #> 26 from y to m        3  0.00000000 0.03398055  0.000000  1.000000e+00 #> 27 from y to y        3  0.12505520 0.02701350  4.629360  3.667973e-06 #> 28 from x to x        4  0.23978802 0.03640121  6.587364  4.477039e-11 #> 29 from x to m        4  0.55210801 0.04579726 12.055481  1.814692e-33 #> 30 from x to y        4  0.34492791 0.03499303  9.857046  6.390162e-23 #> 31 from m to x        4  0.00000000 0.02424459  0.000000  1.000000e+00 #> 32 from m to m        4  0.12950963 0.03117525  4.154245  3.263634e-05 #> 33 from m to y        4  0.26825930 0.02414284 11.111340  1.104887e-28 #> 34 from y to x        4  0.00000000 0.02394372  0.000000  1.000000e+00 #> 35 from y to m        4  0.00000000 0.03347365  0.000000  1.000000e+00 #> 36 from y to y        4  0.06253681 0.02344338  2.667568  7.640252e-03 #> 37 from x to x        5  0.16779706 0.03296857  5.089607  3.588063e-07 #> 38 from x to m        5  0.45110924 0.04602662  9.801051  1.114205e-22 #> 39 from x to y        5  0.36925379 0.03418778 10.800755  3.413856e-27 #> 40 from m to x        5  0.00000000 0.02207234  0.000000  1.000000e+00 #> 41 from m to m        5  0.07769223 0.03080579  2.522001  1.166895e-02 #> 42 from m to y        5  0.18593196 0.02331499  7.974782  1.526503e-15 #> 43 from y to x        5  0.00000000 0.01844215  0.000000  1.000000e+00 #> 44 from y to m        5  0.00000000 0.03121602  0.000000  1.000000e+00 #> 45 from y to y        5  0.03127301 0.02162373  1.446235  1.481112e-01 #>            2.5%       97.5% #> 1   0.642304487  0.75724051 #> 2   0.438613471  0.56145478 #> 3  -0.164483903 -0.03559285 #> 4  -0.045594252  0.04559425 #> 5   0.551211849  0.64857892 #> 6   0.348535952  0.45113529 #> 7  -0.052872045  0.05287205 #> 8  -0.056592324  0.05659232 #> 9   0.440448884  0.55969831 #> 10  0.415452069  0.56391103 #> 11  0.573109850  0.72664673 #> 12  0.007411056  0.15239055 #> 13 -0.051645106  0.05164511 #> 14  0.306067593  0.41368135 #> 15  0.389651385  0.48996218 #> 16 -0.063438317  0.06343832 #> 17 -0.065203598  0.06520360 #> 18  0.189133745  0.31101346 #> 19  0.266458471  0.41887289 #> 20  0.549332598  0.72010034 #> 21  0.179160303  0.32246735 #> 22 -0.050275040  0.05027504 #> 23  0.157445618  0.27432845 #> 24  0.315312744  0.41234004 #> 25 -0.057614292  0.05761429 #> 26 -0.066600663  0.06660066 #> 27  0.072109725  0.17800069 #> 28  0.168442958  0.31113308 #> 29  0.462347034  0.64186899 #> 30  0.276342831  0.41351299 #> 31 -0.047518518  0.04751852 #> 32  0.068407263  0.19061201 #> 33  0.220940203  0.31557839 #> 34 -0.046928822  0.04692882 #> 35 -0.065607146  0.06560715 #> 36  0.016588622  0.10848499 #> 37  0.103179853  0.23241427 #> 38  0.360898723  0.54131976 #> 39  0.302246977  0.43626060 #> 40 -0.043260992  0.04326099 #> 41  0.017313986  0.13807048 #> 42  0.140235417  0.23162850 #> 43 -0.036145948  0.03614595 #> 44 -0.061182278  0.06118228 #> 45 -0.011108734  0.07365475 confint(delta, level = 0.95) #>         effect interval        2.5 %      97.5 % #> 1  from x to x        1  0.642304487  0.75724051 #> 2  from x to m        1  0.438613471  0.56145478 #> 3  from x to y        1 -0.164483903 -0.03559285 #> 4  from m to x        1 -0.045594252  0.04559425 #> 5  from m to m        1  0.551211849  0.64857892 #> 6  from m to y        1  0.348535952  0.45113529 #> 7  from y to x        1 -0.052872045  0.05287205 #> 8  from y to m        1 -0.056592324  0.05659232 #> 9  from y to y        1  0.440448884  0.55969831 #> 10 from x to x        2  0.415452069  0.56391103 #> 11 from x to m        2  0.573109850  0.72664673 #> 12 from x to y        2  0.007411056  0.15239055 #> 13 from m to x        2 -0.051645106  0.05164511 #> 14 from m to m        2  0.306067593  0.41368135 #> 15 from m to y        2  0.389651385  0.48996218 #> 16 from y to x        2 -0.063438317  0.06343832 #> 17 from y to m        2 -0.065203598  0.06520360 #> 18 from y to y        2  0.189133745  0.31101346 #> 19 from x to x        3  0.266458471  0.41887289 #> 20 from x to m        3  0.549332598  0.72010034 #> 21 from x to y        3  0.179160303  0.32246735 #> 22 from m to x        3 -0.050275040  0.05027504 #> 23 from m to m        3  0.157445618  0.27432845 #> 24 from m to y        3  0.315312744  0.41234004 #> 25 from y to x        3 -0.057614292  0.05761429 #> 26 from y to m        3 -0.066600663  0.06660066 #> 27 from y to y        3  0.072109725  0.17800069 #> 28 from x to x        4  0.168442958  0.31113308 #> 29 from x to m        4  0.462347034  0.64186899 #> 30 from x to y        4  0.276342831  0.41351299 #> 31 from m to x        4 -0.047518518  0.04751852 #> 32 from m to m        4  0.068407263  0.19061201 #> 33 from m to y        4  0.220940203  0.31557839 #> 34 from y to x        4 -0.046928822  0.04692882 #> 35 from y to m        4 -0.065607146  0.06560715 #> 36 from y to y        4  0.016588622  0.10848499 #> 37 from x to x        5  0.103179853  0.23241427 #> 38 from x to m        5  0.360898723  0.54131976 #> 39 from x to y        5  0.302246977  0.43626060 #> 40 from m to x        5 -0.043260992  0.04326099 #> 41 from m to m        5  0.017313986  0.13807048 #> 42 from m to y        5  0.140235417  0.23162850 #> 43 from y to x        5 -0.036145948  0.03614595 #> 44 from y to m        5 -0.061182278  0.06118228 #> 45 from y to y        5 -0.011108734  0.07365475 plot(delta)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"function computes delta method sampling variance-covariance matrix indirect effect centrality specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"","code":"DeltaIndirectCentral(phi, vcov_phi_vec, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores length delta_t long.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"Returns object class ctmeddelta list following elements: call Function call. args Function arguments. fun Function used (\"DeltaIndirectCentral\"). output list length equal length delta_t. element output list following elements: delta_t Time interval. jacobian Jacobian matrix. est Estimated indirect effect centrality. vcov Sampling variance-covariance matrix estimated indirect effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"See IndirectCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"delta-method","dir":"Reference","previous_headings":"","what":"Delta Method","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). multivariate central limit theory, function \\(\\mathbf{g}\\) using \\(\\hat{\\boldsymbol{\\theta}}\\) input can expressed : $$   \t\\sqrt{n}   \t\\left(   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t-   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t\\right)   \t\\xrightarrow[]{   \t\t\\mathrm{D}   \t}   \t\\mathcal{N}   \t\\left(   \t0,   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ \\(\\mathbf{J}\\) matrix first-order derivatives function \\(\\mathbf{g}\\) respect elements \\(\\boldsymbol{\\theta}\\) \\(\\boldsymbol{\\Gamma}\\) asymptotic variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\). former, can derive distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) follows: $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \tn^{-1}   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ uncertainty associated estimator \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , therefore, given \\(n^{-1} \\mathbf{J} \\boldsymbol{\\Gamma} \\mathbf{J}^{\\prime}\\) . \\(\\boldsymbol{\\Gamma}\\) unknown, substitution, can use estimated sampling variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\), , \\(\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) \\(n^{-1} \\boldsymbol{\\Gamma}\\). Therefore, sampling variance-covariance matrix \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) given $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \t\\mathbf{J}   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\mathbf{J}^{\\prime}   \t\\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaIndirectCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method Sampling Variance-Covariance Matrix for the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaIndirectCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- DeltaIndirectCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1 ) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se      z p    2.5%  97.5% #> x        1 0.0000 0.0123 0.0000 1 -0.0242 0.0242 #> m        1 0.1674 0.0194 8.6167 0  0.1293 0.2055 #> y        1 0.0000 0.0114 0.0000 1 -0.0223 0.0223 #>   # Range of time intervals --------------------------------------------------- delta <- DeltaIndirectCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5 ) plot(delta)     # Methods ------------------------------------------------------------------- # DeltaIndirectCentral has a number of methods including # print, summary, confint, and plot print(delta) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se      z p    2.5%  97.5% #> x        1 0.0000 0.0123 0.0000 1 -0.0242 0.0242 #> m        1 0.1674 0.0194 8.6167 0  0.1293 0.2055 #> y        1 0.0000 0.0114 0.0000 1 -0.0223 0.0223 #>  #> $`2` #>   interval    est     se       z p    2.5%  97.5% #> x        2 0.0000 0.0245  0.0000 1 -0.0479 0.0479 #> m        2 0.4008 0.0389 10.3027 0  0.3246 0.4771 #> y        2 0.0000 0.0219  0.0000 1 -0.0430 0.0430 #>  #> $`3` #>   interval    est     se       z p    2.5%  97.5% #> x        3 0.0000 0.0298  0.0000 1 -0.0585 0.0585 #> m        3 0.5423 0.0493 11.0007 0  0.4456 0.6389 #> y        3 0.0000 0.0284  0.0000 1 -0.0557 0.0557 #>  #> $`4` #>   interval    est     se       z p    2.5%  97.5% #> x        4 0.0000 0.0323  0.0000 1 -0.0634 0.0634 #> m        4 0.5823 0.0548 10.6249 0  0.4749 0.6897 #> y        4 0.0000 0.0359  0.0000 1 -0.0704 0.0704 #>  #> $`5` #>   interval    est     se      z p    2.5%  97.5% #> x        5 0.0000 0.0339 0.0000 1 -0.0664 0.0664 #> m        5 0.5521 0.0571 9.6771 0  0.4403 0.6639 #> y        5 0.0000 0.0440 0.0000 1 -0.0862 0.0862 #>  summary(delta) #>    variable interval           est         se             z            p #> 1         x        1  0.000000e+00 0.01232312  0.000000e+00 1.000000e+00 #> 2         m        1  1.674155e-01 0.01942918  8.616704e+00 6.890881e-18 #> 3         y        1  0.000000e+00 0.01138285  0.000000e+00 1.000000e+00 #> 4         x        2  0.000000e+00 0.02445046  0.000000e+00 1.000000e+00 #> 5         m        2  4.008043e-01 0.03890291  1.030268e+01 6.852356e-25 #> 6         y        2  0.000000e+00 0.02194571  0.000000e+00 1.000000e+00 #> 7         x        3  0.000000e+00 0.02983956  0.000000e+00 1.000000e+00 #> 8         m        3  5.422564e-01 0.04929290  1.100070e+01 3.791795e-28 #> 9         y        3 -3.330669e-16 0.02842516 -1.171733e-14 1.000000e+00 #> 10        x        4  0.000000e+00 0.03232705  0.000000e+00 1.000000e+00 #> 11        m        4  5.823179e-01 0.05480696  1.062489e+01 2.282791e-26 #> 12        y        4  0.000000e+00 0.03591407  0.000000e+00 1.000000e+00 #> 13        x        5  0.000000e+00 0.03388315  0.000000e+00 1.000000e+00 #> 14        m        5  5.520985e-01 0.05705207  9.677098e+00 3.772724e-22 #> 15        y        5  0.000000e+00 0.04399892  0.000000e+00 1.000000e+00 #>           2.5%      97.5% #> 1  -0.02415288 0.02415288 #> 2   0.12933502 0.20549601 #> 3  -0.02230998 0.02230998 #> 4  -0.04792202 0.04792202 #> 5   0.32455600 0.47705260 #> 6  -0.04301280 0.04301280 #> 7  -0.05848447 0.05848447 #> 8   0.44564411 0.63886875 #> 9  -0.05571230 0.05571230 #> 10 -0.06335985 0.06335985 #> 11  0.47489827 0.68973759 #> 12 -0.07039028 0.07039028 #> 13 -0.06640976 0.06640976 #> 14  0.44027850 0.66391851 #> 15 -0.08623631 0.08623631 confint(delta, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1 -0.02415288 0.02415288 #> 2         m        1  0.12933502 0.20549601 #> 3         y        1 -0.02230998 0.02230998 #> 4         x        2 -0.04792202 0.04792202 #> 5         m        2  0.32455600 0.47705260 #> 6         y        2 -0.04301280 0.04301280 #> 7         x        3 -0.05848447 0.05848447 #> 8         m        3  0.44564411 0.63886875 #> 9         y        3 -0.05571230 0.05571230 #> 10        x        4 -0.06335985 0.06335985 #> 11        m        4  0.47489827 0.68973759 #> 12        y        4 -0.07039028 0.07039028 #> 13        x        5 -0.06640976 0.06640976 #> 14        m        5  0.44027850 0.66391851 #> 15        y        5 -0.08623631 0.08623631 plot(delta)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"function computes delta method sampling variance-covariance matrix total, direct, indirect effects independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"","code":"DeltaMed(phi, vcov_phi_vec, delta_t, from, to, med, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores length delta_t long.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"Returns object class ctmeddelta list following elements: call Function call. args Function arguments. fun Function used (\"DeltaMed\"). output list length equal length delta_t. element output list following elements: delta_t Time interval. jacobian Jacobian matrix. est Estimated total, direct, indirect effects. vcov Sampling variance-covariance matrix estimated total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"See Total(), Direct(), Indirect() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"delta-method","dir":"Reference","previous_headings":"","what":"Delta Method","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). multivariate central limit theory, function \\(\\mathbf{g}\\) using \\(\\hat{\\boldsymbol{\\theta}}\\) input can expressed : $$   \t\\sqrt{n}   \t\\left(   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t-   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t\\right)   \t\\xrightarrow[]{   \t\t\\mathrm{D}   \t}   \t\\mathcal{N}   \t\\left(   \t0,   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ \\(\\mathbf{J}\\) matrix first-order derivatives function \\(\\mathbf{g}\\) respect elements \\(\\boldsymbol{\\theta}\\) \\(\\boldsymbol{\\Gamma}\\) asymptotic variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\). former, can derive distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) follows: $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \tn^{-1}   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ uncertainty associated estimator \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , therefore, given \\(n^{-1} \\mathbf{J} \\boldsymbol{\\Gamma} \\mathbf{J}^{\\prime}\\) . \\(\\boldsymbol{\\Gamma}\\) unknown, substitution, can use estimated sampling variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\), , \\(\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) \\(n^{-1} \\boldsymbol{\\Gamma}\\). Therefore, sampling variance-covariance matrix \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) given $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \t\\mathbf{J}   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\mathbf{J}^{\\prime}   \t\\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaMed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method Sampling Variance-Covariance Matrix for the Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — DeltaMed","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se       z      p    2.5%   97.5% #> total           1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> direct          1 -0.2675 0.0436 -6.1280 0.0000 -0.3530 -0.1819 #> indirect        1  0.1674 0.0194  8.6167 0.0000  0.1293  0.2055 #>   # Range of time intervals --------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) plot(delta)     # Methods ------------------------------------------------------------------- # DeltaMed has a number of methods including # print, summary, confint, and plot print(delta) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se       z      p    2.5%   97.5% #> total           1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> direct          1 -0.2675 0.0436 -6.1280 0.0000 -0.3530 -0.1819 #> indirect        1  0.1674 0.0194  8.6167 0.0000  0.1293  0.2055 #>  #> $`2` #>          interval     est     se       z      p    2.5%   97.5% #> total           2  0.0799 0.0370  2.1603 0.0307  0.0074  0.1524 #> direct          2 -0.3209 0.0512 -6.2642 0.0000 -0.4213 -0.2205 #> indirect        2  0.4008 0.0389 10.3027 0.0000  0.3246  0.4771 #>  #> $`3` #>          interval     est     se       z p    2.5%   97.5% #> total           3  0.2508 0.0366  6.8606 0  0.1792  0.3225 #> direct          3 -0.2914 0.0485 -6.0055 0 -0.3866 -0.1963 #> indirect        3  0.5423 0.0493 11.0007 0  0.4456  0.6389 #>  #> $`4` #>          interval     est     se       z p    2.5%   97.5% #> total           4  0.3449 0.0350  9.8570 0  0.2763  0.4135 #> direct          4 -0.2374 0.0433 -5.4828 0 -0.3223 -0.1525 #> indirect        4  0.5823 0.0548 10.6249 0  0.4749  0.6897 #>  #> $`5` #>          interval     est     se       z p    2.5%   97.5% #> total           5  0.3693 0.0342 10.8008 0  0.3022  0.4363 #> direct          5 -0.1828 0.0376 -4.8614 0 -0.2566 -0.1091 #> indirect        5  0.5521 0.0571  9.6771 0  0.4403  0.6639 #>  summary(delta) #>      effect interval        est         se         z            p         2.5% #> 1     total        1 -0.1000384 0.03288098 -3.042439 2.346691e-03 -0.164483903 #> 2    direct        1 -0.2674539 0.04364490 -6.127952 8.901719e-10 -0.352996324 #> 3  indirect        1  0.1674155 0.01942918  8.616704 6.890881e-18  0.129335016 #> 4     total        2  0.0799008 0.03698524  2.160343 3.074615e-02  0.007411056 #> 5    direct        2 -0.3209035 0.05122836 -6.264177 3.747993e-10 -0.421309236 #> 6  indirect        2  0.4008043 0.03890291 10.302682 6.852356e-25  0.324556004 #> 7     total        3  0.2508138 0.03655859  6.860599 6.857257e-12  0.179160303 #> 8    direct        3 -0.2914426 0.04852944 -6.005480 1.907663e-09 -0.386558557 #> 9  indirect        3  0.5422564 0.04929290 11.000699 3.791795e-28  0.445644109 #> 10    total        4  0.3449279 0.03499303  9.857046 6.390162e-23  0.276342831 #> 11   direct        4 -0.2373900 0.04329747 -5.482768 4.187214e-08 -0.322251508 #> 12 indirect        4  0.5823179 0.05480696 10.624891 2.282791e-26  0.474898266 #> 13    total        5  0.3692538 0.03418778 10.800755 3.413856e-27  0.302246977 #> 14   direct        5 -0.1828447 0.03761138 -4.861420 1.165464e-06 -0.256561662 #> 15 indirect        5  0.5520985 0.05705207  9.677098 3.772724e-22  0.440278497 #>          97.5% #> 1  -0.03559285 #> 2  -0.18191145 #> 3   0.20549601 #> 4   0.15239055 #> 5  -0.22049777 #> 6   0.47705260 #> 7   0.32246735 #> 8  -0.19632665 #> 9   0.63886875 #> 10  0.41351299 #> 11 -0.15252853 #> 12  0.68973759 #> 13  0.43626060 #> 14 -0.10912777 #> 15  0.66391851 confint(delta, level = 0.95) #>      effect interval        2.5 %      97.5 % #> 1     total        1 -0.164483903 -0.03559285 #> 2    direct        1 -0.352996324 -0.18191145 #> 3  indirect        1  0.129335016  0.20549601 #> 4     total        2  0.007411056  0.15239055 #> 5    direct        2 -0.421309236 -0.22049777 #> 6  indirect        2  0.324556004  0.47705260 #> 7     total        3  0.179160303  0.32246735 #> 8    direct        3 -0.386558557 -0.19632665 #> 9  indirect        3  0.445644109  0.63886875 #> 10    total        4  0.276342831  0.41351299 #> 11   direct        4 -0.322251508 -0.15252853 #> 12 indirect        4  0.474898266  0.68973759 #> 13    total        5  0.302246977  0.43626060 #> 14   direct        5 -0.256561662 -0.10912777 #> 15 indirect        5  0.440278497  0.66391851 plot(delta)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"function computes delta method sampling variance-covariance matrix total effect centrality specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"","code":"DeltaTotalCentral(phi, vcov_phi_vec, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores length delta_t long.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"Returns object class ctmeddelta list following elements: call Function call. args Function arguments. fun Function used (\"DeltaTotalCentral\"). output list length equal length delta_t. element output list following elements: delta_t Time interval. jacobian Jacobian matrix. est Estimated total effect centrality. vcov Sampling variance-covariance matrix estimated total effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"See TotalCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"delta-method","dir":"Reference","previous_headings":"","what":"Delta Method","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). multivariate central limit theory, function \\(\\mathbf{g}\\) using \\(\\hat{\\boldsymbol{\\theta}}\\) input can expressed : $$   \t\\sqrt{n}   \t\\left(   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t-   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t\\right)   \t\\xrightarrow[]{   \t\t\\mathrm{D}   \t}   \t\\mathcal{N}   \t\\left(   \t0,   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ \\(\\mathbf{J}\\) matrix first-order derivatives function \\(\\mathbf{g}\\) respect elements \\(\\boldsymbol{\\theta}\\) \\(\\boldsymbol{\\Gamma}\\) asymptotic variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\). former, can derive distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) follows: $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \tn^{-1}   \t\\mathbf{J}   \t\\boldsymbol{\\Gamma}   \t\\mathbf{J}^{\\prime}   \t\\right)   $$ uncertainty associated estimator \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , therefore, given \\(n^{-1} \\mathbf{J} \\boldsymbol{\\Gamma} \\mathbf{J}^{\\prime}\\) . \\(\\boldsymbol{\\Gamma}\\) unknown, substitution, can use estimated sampling variance-covariance matrix \\(\\hat{\\boldsymbol{\\theta}}\\), , \\(\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) \\(n^{-1} \\boldsymbol{\\Gamma}\\). Therefore, sampling variance-covariance matrix \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) given $$   \t\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\approx   \t\\mathcal{N}   \t\\left(   \t\\mathbf{g} \\left( \\boldsymbol{\\theta} \\right)   \t,   \t\\mathbf{J}   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\mathbf{J}^{\\prime}   \t\\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/DeltaTotalCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method Sampling Variance-Covariance Matrix for the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — DeltaTotalCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- DeltaTotalCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1 ) #>  #> Total Effect Centrality #>  #> $`1` #>   interval    est     se       z p    2.5%  97.5% #> x        1 0.4000 0.0420  9.5182 0  0.3176 0.4824 #> m        1 0.3998 0.0347 11.5099 0  0.3317 0.4679 #> y        1 0.0000 0.0375  0.0000 1 -0.0736 0.0736 #>   # Range of time intervals --------------------------------------------------- delta <- DeltaTotalCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5 ) plot(delta)     # Methods ------------------------------------------------------------------- # DeltaTotalCentral has a number of methods including # print, summary, confint, and plot print(delta) #>  #> Total Effect Centrality #>  #> $`1` #>   interval    est     se       z p    2.5%  97.5% #> x        1 0.4000 0.0420  9.5182 0  0.3176 0.4824 #> m        1 0.3998 0.0347 11.5099 0  0.3317 0.4679 #> y        1 0.0000 0.0375  0.0000 1 -0.0736 0.0736 #>  #> $`2` #>   interval    est     se       z p    2.5%  97.5% #> x        2 0.7298 0.0573 12.7412 0  0.6175 0.8420 #> m        2 0.4398 0.0341 12.9077 0  0.3730 0.5066 #> y        2 0.0000 0.0532  0.0000 1 -0.1042 0.1042 #>  #> $`3` #>   interval    est     se       z p    2.5%  97.5% #> x        3 0.8855 0.0649 13.6530 0  0.7584 1.0127 #> m        3 0.3638 0.0345 10.5512 0  0.2962 0.4314 #> y        3 0.0000 0.0574  0.0000 1 -0.1125 0.1125 #>  #> $`4` #>   interval    est     se       z p    2.5%  97.5% #> x        4 0.8970 0.0693 12.9474 0  0.7612 1.0328 #> m        4 0.2683 0.0352  7.6109 0  0.1992 0.3373 #> y        4 0.0000 0.0548  0.0000 1 -0.1074 0.1074 #>  #> $`5` #>   interval    est     se       z p    2.5%  97.5% #> x        5 0.8204 0.0717 11.4401 0  0.6798 0.9609 #> m        5 0.1859 0.0350  5.3070 0  0.1173 0.2546 #> y        5 0.0000 0.0485  0.0000 1 -0.0951 0.0951 #>  summary(delta) #>    variable interval       est         se         z            p        2.5% #> 1         x        1 0.3999957 0.04202409  9.518249 1.761221e-21  0.31763004 #> 2         m        1 0.3998356 0.03473852 11.509863 1.176653e-30  0.33174937 #> 3         y        1 0.0000000 0.03753392  0.000000 1.000000e+00 -0.07356512 #> 4         x        2 0.7297791 0.05727689 12.741250 3.487638e-37  0.61751846 #> 5         m        2 0.4398068 0.03407320 12.907705 4.072614e-38  0.37302454 #> 6         y        2 0.0000000 0.05316134  0.000000 1.000000e+00 -0.10419431 #> 7         x        3 0.8855303 0.06485969 13.653015 1.936951e-42  0.75840765 #> 8         m        3 0.3638264 0.03448184 10.551247 5.012715e-26  0.29624323 #> 9         y        3 0.0000000 0.05739938  0.000000 1.000000e+00 -0.11250071 #> 10        x        4 0.8970359 0.06928292 12.947432 2.429445e-38  0.76124390 #> 11        m        4 0.2682593 0.03524695  7.610851 2.722966e-14  0.19917654 #> 12        y        4 0.0000000 0.05481047  0.000000 1.000000e+00 -0.10742655 #> 13        x        5 0.8203630 0.07170967 11.440061 2.636988e-30  0.67981466 #> 14        m        5 0.1859320 0.03503504  5.307029 1.114264e-07  0.11726455 #> 15        y        5 0.0000000 0.04852949  0.000000 1.000000e+00 -0.09511604 #>         97.5% #> 1  0.48236146 #> 2  0.46792187 #> 3  0.07356512 #> 4  0.84203973 #> 5  0.50658902 #> 6  0.10419431 #> 7  1.01265295 #> 8  0.43140955 #> 9  0.11250071 #> 10 1.03282795 #> 11 0.33734205 #> 12 0.10742655 #> 13 0.96091140 #> 14 0.25459937 #> 15 0.09511604 confint(delta, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1  0.31763004 0.48236146 #> 2         m        1  0.33174937 0.46792187 #> 3         y        1 -0.07356512 0.07356512 #> 4         x        2  0.61751846 0.84203973 #> 5         m        2  0.37302454 0.50658902 #> 6         y        2 -0.10419431 0.10419431 #> 7         x        3  0.75840765 1.01265295 #> 8         m        3  0.29624323 0.43140955 #> 9         y        3 -0.11250071 0.11250071 #> 10        x        4  0.76124390 1.03282795 #> 11        m        4  0.19917654 0.33734205 #> 12        y        4 -0.10742655 0.10742655 #> 13        x        5  0.67981466 0.96091140 #> 14        m        5  0.11726455 0.25459937 #> 15        y        5 -0.09511604 0.09511604 plot(delta)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Direct Effect of X on Y Over a Specific Time Interval — Direct","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"function computes direct effect independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"","code":"Direct(phi, delta_t, from, to, med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"Returns object class ctmedeffect list following elements: call Function call. args Function arguments. fun Function used (\"Direct\"). output direct effect.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"direct effect independent variable \\(X\\) dependent variable \\(Y\\) relative mediator variables \\(\\mathbf{m}\\) given $$     \\mathrm{Direct}_{{\\Delta t}_{, j, \\mathrm{\\mathbf{m}}}}     =     \\exp     \\left(       \\Delta t       \\mathbf{D}       \\boldsymbol{\\Phi}       \\mathbf{D}     \\right)_{, j}   $$ \\(\\boldsymbol{\\Phi}\\) denotes drift matrix, \\(\\mathbf{D}\\) diagonal matrix diagonal elements corresponding mediator variables \\(\\mathbf{m}\\) set zero rest one, \\(\\) row index \\(Y\\) \\(\\boldsymbol{\\Phi}\\), \\(j\\) column index \\(X\\) \\(\\boldsymbol{\\Phi}\\), \\(\\Delta t\\) time interval.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"linear-stochastic-differential-equation-model","dir":"Reference","previous_headings":"","what":"Linear Stochastic Differential Equation Model","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\iota}\\) term unobserved constant time, \\(\\boldsymbol{\\Phi}\\) drift matrix represents rate change solution absence random fluctuations, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Direct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direct Effect of X on Y Over a Specific Time Interval — Direct","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") delta_t <- 1 Direct(   phi = phi,   delta_t = delta_t,   from = \"x\",   to = \"y\",   med = \"m\" ) #> [1] -0.2675 phi <- matrix(   data = c(     -6, 5.5, 0, 0,     1.25, -2.5, 5.9, -7.3,     0, 0, -6, 2.5,     5, 0, 0, -6   ),   nrow = 4 ) colnames(phi) <- rownames(phi) <- paste0(\"y\", 1:4) Direct(   phi = phi,   delta_t = delta_t,   from = \"y2\",   to = \"y4\",   med = c(\"y1\", \"y3\") ) #> [1] -0.166"},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":null,"dir":"Reference","previous_headings":"","what":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"function computes indirect effect independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"","code":"Indirect(phi, delta_t, from, to, med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"Returns object class ctmedeffect list following elements: call Function call. args Function arguments. fun Function used (\"Indirect\"). output indirect effect.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"indirect effect independent variable \\(X\\) dependent variable \\(Y\\) relative mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) given $$     \\mathrm{Indirect}_{\\Delta t}     =     \\exp     \\left(       \\Delta t       \\boldsymbol{\\Phi}     \\right)_{, j} -     \\exp     \\left(       \\Delta t       \\mathbf{D}_{\\mathbf{m}}       \\boldsymbol{\\Phi}       \\mathbf{D}_{\\mathbf{m}}     \\right)_{, j}   $$ \\(\\boldsymbol{\\Phi}\\) denotes drift matrix, \\(\\mathbf{D}_{\\mathbf{m}}\\) matrix diagonal elements zeros diagonal elements zero index/indices mediator variables \\(\\mathbf{m}\\) one otherwise, \\(\\) row index \\(Y\\) \\(\\boldsymbol{\\Phi}\\), \\(j\\) column index \\(X\\) \\(\\boldsymbol{\\Phi}\\), \\(\\Delta t\\) time interval.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"linear-stochastic-differential-equation-model","dir":"Reference","previous_headings":"","what":"Linear Stochastic Differential Equation Model","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\iota}\\) term unobserved constant time, \\(\\boldsymbol{\\Phi}\\) drift matrix represents rate change solution absence random fluctuations, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Indirect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indirect Effect of X on Y Through M Over a Specific Time Interval — Indirect","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") delta_t <- 1 Indirect(   phi = phi,   delta_t = delta_t,   from = \"x\",   to = \"y\",   med = \"m\" ) #> [1] 0.1674 phi <- matrix(   data = c(     -6, 5.5, 0, 0,     1.25, -2.5, 5.9, -7.3,     0, 0, -6, 2.5,     5, 0, 0, -6   ),   nrow = 4 ) colnames(phi) <- rownames(phi) <- paste0(\"y\", 1:4) Indirect(   phi = phi,   delta_t = delta_t,   from = \"y2\",   to = \"y4\",   med = c(\"y1\", \"y3\") ) #> [1] 0.2427"},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Indirect Effect Centrality — IndirectCentral","title":"Indirect Effect Centrality — IndirectCentral","text":"Indirect Effect Centrality","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indirect Effect Centrality — IndirectCentral","text":"","code":"IndirectCentral(phi, delta_t)"},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indirect Effect Centrality — IndirectCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indirect Effect Centrality — IndirectCentral","text":"Returns object class ctmedmed list following elements: call Function call. args Function arguments. fun Function used (\"IndirectCentral\"). output matrix indirect effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indirect Effect Centrality — IndirectCentral","text":"Indirect effect centrality sum possible indirect effects different pairs variables specific variable serves mediator.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Indirect Effect Centrality — IndirectCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Indirect Effect Centrality — IndirectCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/IndirectCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indirect Effect Centrality — IndirectCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Specific time interval ---------------------------------------------------- IndirectCentral(   phi = phi,   delta_t = 1 ) #>  #> Indirect Effect Centrality #>  #>      interval x      m y #> [1,]        1 0 0.1674 0  # Range of time intervals --------------------------------------------------- indirect_central <- IndirectCentral(   phi = phi,   delta_t = 1:30 ) plot(indirect_central)   # Methods ------------------------------------------------------------------- # IndirectCentral has a number of methods including # print, summary, and plot indirect_central <- IndirectCentral(   phi = phi,   delta_t = 1:5 ) print(indirect_central) #>  #> Indirect Effect Centrality #>  #>      interval x      m y #> [1,]        1 0 0.1674 0 #> [2,]        2 0 0.4008 0 #> [3,]        3 0 0.5423 0 #> [4,]        4 0 0.5823 0 #> [5,]        5 0 0.5521 0 summary(indirect_central) #>      interval x      m y #> [1,]        1 0 0.1674 0 #> [2,]        2 0 0.4008 0 #> [3,]        3 0 0.5423 0 #> [4,]        4 0 0.5823 0 #> [5,]        5 0 0.5521 0 plot(indirect_central)"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"function generates Monte Carlo method sampling distribution elements matrix lagged coefficients \\(\\boldsymbol{\\beta}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"","code":"MCBeta(   phi,   vcov_phi_vec,   delta_t,   R,   test_phi = TRUE,   ncores = NULL,   seed = NULL )"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Numeric. Time interval (\\(\\Delta t\\)). R Positive integer. Number replications. test_phi Logical. test_phi = TRUE, function tests stability generated drift matrix \\(\\boldsymbol{\\Phi}\\). test returns FALSE, function generates new drift matrix \\(\\boldsymbol{\\Phi}\\) runs test recursively test returns TRUE. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value. seed Random seed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"MCBeta\"). output list length equal length delta_t. element output list following elements: est vector total, direct, indirect effects. thetahatstar matrix Monte Carlo total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"See Total().","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"monte-carlo-method","dir":"Reference","previous_headings":"","what":"Monte Carlo Method","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). Based asymptotic properties maximum likelihood estimators, can assume estimators normally distributed around population parameters. $$   \t\\hat{\\boldsymbol{\\theta}}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\boldsymbol{\\theta},   \t\\mathbb{V} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right)   $$ Using distributional assumption, sampling distribution \\(\\hat{\\boldsymbol{\\theta}}\\) refer \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) can generated replacing population parameters sample estimates, , $$   \t\\hat{\\boldsymbol{\\theta}}^{\\ast}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\hat{\\boldsymbol{\\theta}},   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right) .   $$ Let \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) parameter function estimated parameters. sampling distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , refer \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}}^{\\ast} \\right)\\) , can generated using simulated estimates calculate \\(\\mathbf{g}\\). standard deviations simulated estimates standard errors. Percentiles corresponding \\(100 \\left( 1 - \\alpha \\right) \\%\\) confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — MCBeta","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- MCBeta(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   R = 100L # use a large value for R in actual research ) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>             interval     est     se   R    2.5%   97.5% #> from x to x        1  0.6998 0.0243 100  0.6454  0.7396 #> from x to m        1  0.5000 0.0326 100  0.4429  0.5685 #> from x to y        1 -0.1000 0.0342 100 -0.1666 -0.0440 #> from m to x        1  0.0000 0.0238 100 -0.0432  0.0497 #> from m to m        1  0.5999 0.0249 100  0.5503  0.6438 #> from m to y        1  0.3998 0.0287 100  0.3381  0.4388 #> from y to x        1  0.0000 0.0282 100 -0.0597  0.0540 #> from y to m        1  0.0000 0.0264 100 -0.0448  0.0560 #> from y to y        1  0.5001 0.0343 100  0.4404  0.5758 #>   # Range of time intervals --------------------------------------------------- mc <- MCBeta(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   R = 100L # use a large value for R in actual research ) plot(mc)           # Methods ------------------------------------------------------------------- # MCBeta has a number of methods including # print, summary, confint, and plot print(mc) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>             interval     est     se   R    2.5%   97.5% #> from x to x        1  0.6998 0.0298 100  0.6519  0.7631 #> from x to m        1  0.5000 0.0296 100  0.4424  0.5529 #> from x to y        1 -0.1000 0.0340 100 -0.1648 -0.0320 #> from m to x        1  0.0000 0.0212 100 -0.0445  0.0355 #> from m to m        1  0.5999 0.0259 100  0.5520  0.6485 #> from m to y        1  0.3998 0.0269 100  0.3375  0.4385 #> from y to x        1  0.0000 0.0232 100 -0.0423  0.0434 #> from y to m        1  0.0000 0.0290 100 -0.0523  0.0603 #> from y to y        1  0.5001 0.0279 100  0.4601  0.5604 #>  #> $`2` #>             interval    est     se   R    2.5%  97.5% #> from x to x        2 0.4897 0.0391 100  0.4339 0.5782 #> from x to m        2 0.6499 0.0385 100  0.5643 0.7187 #> from x to y        2 0.0799 0.0352 100  0.0110 0.1542 #> from m to x        2 0.0000 0.0252 100 -0.0505 0.0421 #> from m to m        2 0.3599 0.0292 100  0.3052 0.4144 #> from m to y        2 0.4398 0.0238 100  0.3923 0.4778 #> from y to x        2 0.0000 0.0278 100 -0.0526 0.0527 #> from y to m        2 0.0000 0.0343 100 -0.0578 0.0724 #> from y to y        2 0.2501 0.0287 100  0.2131 0.3086 #>  #> $`3` #>             interval    est     se   R    2.5%  97.5% #> from x to x        3 0.3427 0.0405 100  0.2886 0.4369 #> from x to m        3 0.6347 0.0445 100  0.5488 0.7374 #> from x to y        3 0.2508 0.0337 100  0.1884 0.3100 #> from m to x        3 0.0000 0.0253 100 -0.0502 0.0449 #> from m to m        3 0.2159 0.0310 100  0.1587 0.2809 #> from m to y        3 0.3638 0.0213 100  0.3269 0.4010 #> from y to x        3 0.0000 0.0253 100 -0.0474 0.0477 #> from y to m        3 0.0000 0.0344 100 -0.0597 0.0687 #> from y to y        3 0.1251 0.0255 100  0.0928 0.1836 #>  #> $`4` #>             interval    est     se   R    2.5%  97.5% #> from x to x        4 0.2398 0.0383 100  0.1923 0.3245 #> from x to m        4 0.5521 0.0480 100  0.4786 0.6840 #> from x to y        4 0.3449 0.0324 100  0.2823 0.3989 #> from m to x        4 0.0000 0.0241 100 -0.0472 0.0459 #> from m to m        4 0.1295 0.0325 100  0.0824 0.2003 #> from m to y        4 0.2683 0.0213 100  0.2247 0.3098 #> from y to x        4 0.0000 0.0207 100 -0.0396 0.0383 #> from y to m        4 0.0000 0.0327 100 -0.0577 0.0580 #> from y to y        4 0.0625 0.0230 100  0.0306 0.1126 #>  #> $`5` #>             interval    est     se   R    2.5%  97.5% #> from x to x        5 0.1678 0.0351 100  0.1186 0.2492 #> from x to m        5 0.4511 0.0490 100  0.3896 0.5892 #> from x to y        5 0.3693 0.0325 100  0.3091 0.4402 #> from m to x        5 0.0000 0.0219 100 -0.0435 0.0409 #> from m to m        5 0.0777 0.0327 100  0.0331 0.1456 #> from m to y        5 0.1859 0.0218 100  0.1439 0.2318 #> from y to x        5 0.0000 0.0161 100 -0.0319 0.0292 #> from y to m        5 0.0000 0.0296 100 -0.0545 0.0522 #> from y to y        5 0.0313 0.0217 100 -0.0007 0.0789 #>  summary(mc) #>         effect interval         est         se   R          2.5%       97.5% #> 1  from x to x        1  0.69977250 0.02980826 100  0.6519089361  0.76308341 #> 2  from x to m        1  0.50003412 0.02955790 100  0.4424164796  0.55293851 #> 3  from x to y        1 -0.10003837 0.03395899 100 -0.1647602454 -0.03201140 #> 4  from m to x        1  0.00000000 0.02116540 100 -0.0445105255  0.03554314 #> 5  from m to m        1  0.59989538 0.02590145 100  0.5519528919  0.64852598 #> 6  from m to y        1  0.39983562 0.02687401 100  0.3375341851  0.43852590 #> 7  from y to x        1  0.00000000 0.02321007 100 -0.0423011851  0.04340206 #> 8  from y to m        1  0.00000000 0.02898845 100 -0.0522890151  0.06027192 #> 9  from y to y        1  0.50007360 0.02791353 100  0.4601312759  0.56043960 #> 10 from x to x        2  0.48968155 0.03909233 100  0.4339277880  0.57819460 #> 11 from x to m        2  0.64987829 0.03852373 100  0.5643192200  0.71868543 #> 12 from x to y        2  0.07990080 0.03520320 100  0.0109855302  0.15418817 #> 13 from m to x        2  0.00000000 0.02517642 100 -0.0505302788  0.04207739 #> 14 from m to m        2  0.35987447 0.02916848 100  0.3052168085  0.41440661 #> 15 from m to y        2  0.43980678 0.02376322 100  0.3922748242  0.47778214 #> 16 from y to x        2  0.00000000 0.02779738 100 -0.0525523091  0.05271509 #> 17 from y to m        2  0.00000000 0.03434984 100 -0.0578289424  0.07244160 #> 18 from y to y        2  0.25007360 0.02865081 100  0.2130910857  0.30860499 #> 19 from x to x        3  0.34266568 0.04046888 100  0.2885803756  0.43690017 #> 20 from x to m        3  0.63471647 0.04452277 100  0.5488364319  0.73736494 #> 21 from x to y        3  0.25081383 0.03368900 100  0.1884127019  0.30996604 #> 22 from m to x        3  0.00000000 0.02532159 100 -0.0502065919  0.04493872 #> 23 from m to m        3  0.21588703 0.03100542 100  0.1587437678  0.28092696 #> 24 from m to y        3  0.36382639 0.02128633 100  0.3269109590  0.40099688 #> 25 from y to x        3  0.00000000 0.02530164 100 -0.0474396030  0.04765315 #> 26 from y to m        3  0.00000000 0.03443535 100 -0.0596835927  0.06873263 #> 27 from y to y        3  0.12505520 0.02550570 100  0.0928153083  0.18357438 #> 28 from x to x        4  0.23978802 0.03830707 100  0.1923279310  0.32454807 #> 29 from x to m        4  0.55210801 0.04802959 100  0.4785767147  0.68396195 #> 30 from x to y        4  0.34492791 0.03244313 100  0.2823113255  0.39892318 #> 31 from m to x        4  0.00000000 0.02411064 100 -0.0472476804  0.04586710 #> 32 from m to m        4  0.12950963 0.03249516 100  0.0824132762  0.20031758 #> 33 from m to y        4  0.26825930 0.02131083 100  0.2246893999  0.30976851 #> 34 from y to x        4  0.00000000 0.02073839 100 -0.0396294143  0.03832011 #> 35 from y to m        4  0.00000000 0.03269581 100 -0.0577104870  0.05801271 #> 36 from y to y        4  0.06253681 0.02303081 100  0.0305756803  0.11255550 #> 37 from x to x        5  0.16779706 0.03507880 100  0.1185697450  0.24921620 #> 38 from x to m        5  0.45110924 0.04904705 100  0.3895881356  0.58917524 #> 39 from x to y        5  0.36925379 0.03254938 100  0.3090792018  0.44018601 #> 40 from m to x        5  0.00000000 0.02187122 100 -0.0435016847  0.04092365 #> 41 from m to m        5  0.07769223 0.03269351 100  0.0331218619  0.14559614 #> 42 from m to y        5  0.18593196 0.02180899 100  0.1439155809  0.23177020 #> 43 from y to x        5  0.00000000 0.01614603 100 -0.0318640119  0.02916216 #> 44 from y to m        5  0.00000000 0.02960860 100 -0.0544915034  0.05219216 #> 45 from y to y        5  0.03127301 0.02165316 100 -0.0007099821  0.07892221 confint(mc, level = 0.95) #>         effect interval       2.5 %     97.5 % #> 1  from x to x        1  0.65190894  0.7630834 #> 2  from x to m        1  0.44241648  0.5529385 #> 3  from x to y        1 -0.16476025 -0.0320114 #> 4  from x to x        2  0.43392779  0.5781946 #> 5  from x to m        2  0.56431922  0.7186854 #> 6  from x to y        2  0.01098553  0.1541882 #> 7  from x to x        3  0.28858038  0.4369002 #> 8  from x to m        3  0.54883643  0.7373649 #> 9  from x to y        3  0.18841270  0.3099660 #> 10 from x to x        4  0.19232793  0.3245481 #> 11 from x to m        4  0.47857671  0.6839619 #> 12 from x to y        4  0.28231133  0.3989232 #> 13 from x to x        5  0.11856975  0.2492162 #> 14 from x to m        5  0.38958814  0.5891752 #> 15 from x to y        5  0.30907920  0.4401860 plot(mc)"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"function generates Monte Carlo method sampling distribution indirect effect centrality particular time interval \\(\\Delta t\\) using first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"","code":"MCIndirectCentral(   phi,   vcov_phi_vec,   delta_t,   R,   test_phi = TRUE,   ncores = NULL,   seed = NULL )"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Numeric. Time interval (\\(\\Delta t\\)). R Positive integer. Number replications. test_phi Logical. test_phi = TRUE, function tests stability generated drift matrix \\(\\boldsymbol{\\Phi}\\). test returns FALSE, function generates new drift matrix \\(\\boldsymbol{\\Phi}\\) runs test recursively test returns TRUE. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value. seed Random seed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"MCIndirectCentral\"). output list length equal length delta_t. element output list following elements: est vector indirect effect centrality. thetahatstar matrix Monte Carlo indirect effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"See IndirectCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"monte-carlo-method","dir":"Reference","previous_headings":"","what":"Monte Carlo Method","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). Based asymptotic properties maximum likelihood estimators, can assume estimators normally distributed around population parameters. $$   \t\\hat{\\boldsymbol{\\theta}}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\boldsymbol{\\theta},   \t\\mathbb{V} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right)   $$ Using distributional assumption, sampling distribution \\(\\hat{\\boldsymbol{\\theta}}\\) refer \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) can generated replacing population parameters sample estimates, , $$   \t\\hat{\\boldsymbol{\\theta}}^{\\ast}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\hat{\\boldsymbol{\\theta}},   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right) .   $$ Let \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) parameter function estimated parameters. sampling distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , refer \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}}^{\\ast} \\right)\\) , can generated using simulated estimates calculate \\(\\mathbf{g}\\). standard deviations simulated estimates standard errors. Percentiles corresponding \\(100 \\left( 1 - \\alpha \\right) \\%\\) confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCIndirectCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Sampling Distribution of Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCIndirectCentral","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- MCIndirectCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   R = 100L # use a large value for R in actual research ) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se   R    2.5%  97.5% #> x        1 0.0000 0.0129 100 -0.0283 0.0230 #> m        1 0.1674 0.0200 100  0.1277 0.2001 #> y        1 0.0000 0.0116 100 -0.0192 0.0243 #>   # Range of time intervals --------------------------------------------------- mc <- MCIndirectCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   R = 100L # use a large value for R in actual research ) plot(mc)     # Methods ------------------------------------------------------------------- # MCIndirectCentral has a number of methods including # print, summary, confint, and plot print(mc) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se   R    2.5%  97.5% #> x        1 0.0000 0.0105 100 -0.0195 0.0204 #> m        1 0.1674 0.0200 100  0.1239 0.1993 #> y        1 0.0000 0.0096 100 -0.0175 0.0174 #>  #> $`2` #>   interval    est     se   R    2.5%  97.5% #> x        2 0.0000 0.0208 100 -0.0383 0.0401 #> m        2 0.4008 0.0411 100  0.3091 0.4667 #> y        2 0.0000 0.0189 100 -0.0345 0.0337 #>  #> $`3` #>   interval    est     se   R    2.5%  97.5% #> x        3 0.0000 0.0259 100 -0.0462 0.0499 #> m        3 0.5423 0.0522 100  0.4356 0.6286 #> y        3 0.0000 0.0261 100 -0.0469 0.0489 #>  #> $`4` #>   interval    est     se   R    2.5%  97.5% #> x        4 0.0000 0.0287 100 -0.0500 0.0569 #> m        4 0.5823 0.0574 100  0.4657 0.6885 #> y        4 0.0000 0.0348 100 -0.0598 0.0614 #>  #> $`5` #>   interval    est     se   R    2.5%  97.5% #> x        5 0.0000 0.0308 100 -0.0558 0.0618 #> m        5 0.5521 0.0595 100  0.4406 0.6662 #> y        5 0.0000 0.0435 100 -0.0737 0.0752 #>  summary(mc) #>    variable interval           est          se   R        2.5%      97.5% #> 1         x        1  0.000000e+00 0.010488048 100 -0.01945724 0.02036598 #> 2         m        1  1.674155e-01 0.020029011 100  0.12393999 0.19929957 #> 3         y        1  0.000000e+00 0.009642906 100 -0.01749498 0.01742023 #> 4         x        2  0.000000e+00 0.020833467 100 -0.03826460 0.04008505 #> 5         m        2  4.008043e-01 0.041083511 100  0.30905795 0.46665886 #> 6         y        2  0.000000e+00 0.018853593 100 -0.03451810 0.03366545 #> 7         x        3  0.000000e+00 0.025852025 100 -0.04623497 0.04986494 #> 8         m        3  5.422564e-01 0.052168884 100  0.43556642 0.62860175 #> 9         y        3 -3.330669e-16 0.026088495 100 -0.04685600 0.04885874 #> 10        x        4  0.000000e+00 0.028727769 100 -0.05004759 0.05693784 #> 11        m        4  5.823179e-01 0.057429611 100  0.46567310 0.68846611 #> 12        y        4  0.000000e+00 0.034803457 100 -0.05977013 0.06135999 #> 13        x        5  0.000000e+00 0.030835069 100 -0.05577598 0.06183490 #> 14        m        5  5.520985e-01 0.059511667 100  0.44063183 0.66624186 #> 15        y        5  0.000000e+00 0.043504913 100 -0.07366080 0.07515086 confint(mc, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1 -0.01945724 0.02036598 #> 2         m        1  0.12393999 0.19929957 #> 3         y        1 -0.01749498 0.01742023 #> 4         x        2 -0.03826460 0.04008505 #> 5         m        2  0.30905795 0.46665886 #> 6         y        2 -0.03451810 0.03366545 #> 7         x        3 -0.04623497 0.04986494 #> 8         m        3  0.43556642 0.62860175 #> 9         y        3 -0.04685600 0.04885874 #> 10        x        4 -0.05004759 0.05693784 #> 11        m        4  0.46567310 0.68846611 #> 12        y        4 -0.05977013 0.06135999 #> 13        x        5 -0.05577598 0.06183490 #> 14        m        5  0.44063183 0.66624186 #> 15        y        5 -0.07366080 0.07515086 plot(mc)"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"function generates Monte Carlo method sampling distribution total, direct indirect effects independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"","code":"MCMed(   phi,   vcov_phi_vec,   delta_t,   from,   to,   med,   R,   test_phi = TRUE,   ncores = NULL,   seed = NULL )"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Numeric. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi. R Positive integer. Number replications. test_phi Logical. test_phi = TRUE, function tests stability generated drift matrix \\(\\boldsymbol{\\Phi}\\). test returns FALSE, function generates new drift matrix \\(\\boldsymbol{\\Phi}\\) runs test recursively test returns TRUE. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value. seed Random seed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"MCMed\"). output list length length(delta_t). element output list following elements: est vector total, direct, indirect effects. thetahatstar matrix Monte Carlo total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"See Total(), Direct(), Indirect() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"monte-carlo-method","dir":"Reference","previous_headings":"","what":"Monte Carlo Method","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). Based asymptotic properties maximum likelihood estimators, can assume estimators normally distributed around population parameters. $$   \t\\hat{\\boldsymbol{\\theta}}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\boldsymbol{\\theta},   \t\\mathbb{V} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right)   $$ Using distributional assumption, sampling distribution \\(\\hat{\\boldsymbol{\\theta}}\\) refer \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) can generated replacing population parameters sample estimates, , $$   \t\\hat{\\boldsymbol{\\theta}}^{\\ast}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\hat{\\boldsymbol{\\theta}},   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right) .   $$ Let \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) parameter function estimated parameters. sampling distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , refer \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}}^{\\ast} \\right)\\) , can generated using simulated estimates calculate \\(\\mathbf{g}\\). standard deviations simulated estimates standard errors. Percentiles corresponding \\(100 \\left( 1 - \\alpha \\right) \\%\\) confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCMed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Sampling Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — MCMed","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se   R    2.5%   97.5% #> total           1 -0.1000 0.0342 100 -0.1666 -0.0440 #> direct          1 -0.2675 0.0440 100 -0.3567 -0.1863 #> indirect        1  0.1674 0.0201 100  0.1273  0.2006 #>   # Range of time intervals --------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) plot(mc)     # Methods ------------------------------------------------------------------- # MCMed has a number of methods including # print, summary, confint, and plot print(mc) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se   R    2.5%   97.5% #> total           1 -0.1000 0.0340 100 -0.1648 -0.0320 #> direct          1 -0.2675 0.0471 100 -0.3397 -0.1738 #> indirect        1  0.1674 0.0201 100  0.1239  0.1982 #>  #> $`2` #>          interval     est     se   R    2.5%   97.5% #> total           2  0.0799 0.0352 100  0.0110  0.1542 #> direct          2 -0.3209 0.0555 100 -0.4178 -0.2099 #> indirect        2  0.4008 0.0413 100  0.3090  0.4663 #>  #> $`3` #>          interval     est     se   R    2.5%   97.5% #> total           3  0.2508 0.0337 100  0.1884  0.3100 #> direct          3 -0.2914 0.0524 100 -0.3863 -0.1918 #> indirect        3  0.5423 0.0523 100  0.4351  0.6286 #>  #> $`4` #>          interval     est     se   R    2.5%   97.5% #> total           4  0.3449 0.0324 100  0.2823  0.3989 #> direct          4 -0.2374 0.0464 100 -0.3272 -0.1538 #> indirect        4  0.5823 0.0575 100  0.4668  0.6888 #>  #> $`5` #>          interval     est     se   R    2.5%   97.5% #> total           5  0.3693 0.0325 100  0.3091  0.4402 #> direct          5 -0.1828 0.0402 100 -0.2636 -0.1132 #> indirect        5  0.5521 0.0594 100  0.4404  0.6682 #>  summary(mc) #>      effect interval        est         se   R        2.5%      97.5% #> 1     total        1 -0.1000384 0.03395899 100 -0.16476025 -0.0320114 #> 2    direct        1 -0.2674539 0.04709743 100 -0.33969758 -0.1737522 #> 3  indirect        1  0.1674155 0.02007626 100  0.12388402  0.1982442 #> 4     total        2  0.0799008 0.03520320 100  0.01098553  0.1541882 #> 5    direct        2 -0.3209035 0.05552653 100 -0.41779752 -0.2098965 #> 6  indirect        2  0.4008043 0.04125368 100  0.30898862  0.4662702 #> 7     total        3  0.2508138 0.03368900 100  0.18841270  0.3099660 #> 8    direct        3 -0.2914426 0.05239901 100 -0.38632534 -0.1918376 #> 9  indirect        3  0.5422564 0.05233930 100  0.43511469  0.6285914 #> 10    total        4  0.3449279 0.03244313 100  0.28231133  0.3989232 #> 11   direct        4 -0.2373900 0.04644744 100 -0.32719487 -0.1538166 #> 12 indirect        4  0.5823179 0.05746986 100  0.46682812  0.6888180 #> 13    total        5  0.3692538 0.03254938 100  0.30907920  0.4401860 #> 14   direct        5 -0.1828447 0.04019984 100 -0.26357998 -0.1131929 #> 15 indirect        5  0.5520985 0.05939646 100  0.44035670  0.6682153 confint(mc, level = 0.95) #>      effect interval       2.5 %     97.5 % #> 1     total        1 -0.16476025 -0.0320114 #> 2    direct        1 -0.33969758 -0.1737522 #> 3  indirect        1  0.12388402  0.1982442 #> 4     total        2  0.01098553  0.1541882 #> 5    direct        2 -0.41779752 -0.2098965 #> 6  indirect        2  0.30898862  0.4662702 #> 7     total        3  0.18841270  0.3099660 #> 8    direct        3 -0.38632534 -0.1918376 #> 9  indirect        3  0.43511469  0.6285914 #> 10    total        4  0.28231133  0.3989232 #> 11   direct        4 -0.32719487 -0.1538166 #> 12 indirect        4  0.46682812  0.6888180 #> 13    total        5  0.30907920  0.4401860 #> 14   direct        5 -0.26357998 -0.1131929 #> 15 indirect        5  0.44035670  0.6682153"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"function generates random drift matrices \\(\\boldsymbol{\\Phi}\\) using Monte Carlo method.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"","code":"MCPhi(phi, vcov_phi_vec, R, test_phi = TRUE, ncores = NULL, seed = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). R Positive integer. Number replications. test_phi Logical. test_phi = TRUE, function tests stability generated drift matrix \\(\\boldsymbol{\\Phi}\\). test returns FALSE, function generates new drift matrix \\(\\boldsymbol{\\Phi}\\) runs test recursively test returns TRUE. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value. seed Random seed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"MCPhi\"). output list simulated drift matrices.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"monte-carlo-method","dir":"Reference","previous_headings":"","what":"Monte Carlo Method","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). Based asymptotic properties maximum likelihood estimators, can assume estimators normally distributed around population parameters. $$   \t\\hat{\\boldsymbol{\\theta}}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\boldsymbol{\\theta},   \t\\mathbb{V} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right)   $$ Using distributional assumption, sampling distribution \\(\\hat{\\boldsymbol{\\theta}}\\) refer \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) can generated replacing population parameters sample estimates, , $$   \t\\hat{\\boldsymbol{\\theta}}^{\\ast}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\hat{\\boldsymbol{\\theta}},   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right) .   $$","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCPhi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Drift Matrices Using the Monte Carlo Method — MCPhi","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") MCPhi(   phi = phi,   vcov_phi_vec = 0.1 * diag(9),   R = 100L # use a large value for R in actual research ) #> [[1]] #>         x       m       y #> x -0.3295  0.2220 -0.2679 #> m  0.7555 -0.8565  0.0091 #> y -0.4690  1.5626 -0.7618 #>  #> [[2]] #>         x       m       y #> x -0.3830  0.0943 -0.4144 #> m  0.9453 -0.4066 -0.3812 #> y -0.1887  0.7553 -0.8437 #>  #> [[3]] #>         x       m      y #> x -0.1077 -0.0344  0.001 #> m  0.4363 -0.7873 -0.033 #> y -0.9239  0.9293 -0.606 #>  #> [[4]] #>         x       m       y #> x -0.7750  0.1073 -0.1698 #> m  1.2028 -0.5626 -0.0798 #> y  0.0148  0.6496 -0.5988 #>  #> [[5]] #>         x       m       y #> x -1.0155  0.2169 -0.4148 #> m  0.8304 -0.3326 -0.1625 #> y -0.0059  0.3293 -0.4056 #>  #> [[6]] #>         x       m       y #> x -0.5023 -0.3002  0.2227 #> m  0.5239 -0.0857  0.3440 #> y -0.0757  0.5680 -0.9511 #>  #> [[7]] #>         x       m       y #> x -0.1279 -0.4010 -0.1586 #> m  0.7976 -0.4652 -0.6030 #> y -0.3153  0.3125 -0.7378 #>  #> [[8]] #>         x       m       y #> x -0.6284  0.2739 -0.1972 #> m  0.4140 -0.7338  0.1835 #> y -0.1817  0.6000 -0.6670 #>  #> [[9]] #>         x       m       y #> x -0.3203 -0.4097 -0.1738 #> m  1.0749 -0.4948  0.2990 #> y -0.4625  0.9025 -0.8753 #>  #> [[10]] #>         x       m       y #> x -0.4946 -0.6680  0.8914 #> m  0.4559 -0.7414 -0.3237 #> y  0.0138  0.7617 -0.7599 #>  #> [[11]] #>         x       m       y #> x -0.3574 -0.3296 -0.3109 #> m  0.9960 -1.0598  0.0318 #> y -0.6253  0.8023 -0.3250 #>  #> [[12]] #>         x       m       y #> x -0.2388  0.1046  0.1173 #> m  0.5637 -0.5110 -0.0937 #> y -0.4943  0.3738 -0.8324 #>  #> [[13]] #>         x       m       y #> x -0.4017 -0.1042 -0.1136 #> m  0.4225 -1.0385 -0.7173 #> y -0.2042  0.4482 -0.7084 #>  #> [[14]] #>         x       m       y #> x -0.5168 -0.1229  0.2009 #> m  0.4649 -0.5269  0.1268 #> y -0.4530  0.6824 -1.1855 #>  #> [[15]] #>         x       m       y #> x -0.4401  0.1808 -0.1407 #> m  0.5675 -0.7721 -0.0552 #> y  0.0013 -0.1627 -0.8033 #>  #> [[16]] #>         x      m       y #> x -0.7018 -0.287 -0.4060 #> m  0.4014 -0.926 -0.6191 #> y -0.4522  1.042 -0.9174 #>  #> [[17]] #>         x       m       y #> x -0.2428 -0.1850  0.3692 #> m  0.1528 -0.5686 -0.1734 #> y -0.1697  0.4695 -0.5461 #>  #> [[18]] #>         x       m       y #> x -0.8570 -0.0544 -0.0911 #> m  1.4080 -0.4738 -1.0594 #> y  0.0874  0.8196 -0.4478 #>  #> [[19]] #>         x       m       y #> x -0.4047 -0.2895  0.1201 #> m  0.7085 -0.7802  0.3837 #> y  0.3360  0.2906 -0.3345 #>  #> [[20]] #>         x       m       y #> x -0.1396 -0.0238 -0.1357 #> m  0.3961 -0.4810  0.0038 #> y  0.1203  0.4805 -0.1099 #>  #> [[21]] #>         x       m       y #> x -0.5919  0.0691 -0.0411 #> m  0.7065 -0.8078 -0.0403 #> y -0.7677  0.9824 -0.9226 #>  #> [[22]] #>         x       m       y #> x -0.3922 -0.0144 -0.1370 #> m  0.5602 -0.4864 -0.6544 #> y -0.7721  0.4842 -0.0734 #>  #> [[23]] #>         x       m       y #> x -0.0552 -0.2630 -0.2973 #> m  1.6914 -0.6528 -0.0127 #> y -0.4832  0.2784 -0.6221 #>  #> [[24]] #>         x       m       y #> x -0.4761 -0.1023  0.0572 #> m  1.0788 -0.6270 -0.1512 #> y -1.0433  0.8290 -1.1084 #>  #> [[25]] #>         x       m       y #> x -0.5386  0.3221  0.0621 #> m  0.4560 -0.7578  0.2615 #> y -0.5445 -0.2587 -0.8716 #>  #> [[26]] #>         x       m       y #> x -0.8226 -0.0375  0.1275 #> m  0.9053 -0.3728 -0.0042 #> y -0.1520  0.6408 -0.3339 #>  #> [[27]] #>         x       m       y #> x -0.3714 -0.2501  0.0273 #> m  0.3441 -0.5902  0.4339 #> y -0.1173  0.6587 -0.6179 #>  #> [[28]] #>         x       m       y #> x -0.2288  0.1370  0.0740 #> m  0.6924 -0.8384 -0.6592 #> y -0.6282  0.4929 -0.9160 #>  #> [[29]] #>         x       m       y #> x -0.9407  0.4237  0.1673 #> m  1.0778 -0.5615 -0.1271 #> y -0.1173  0.1810 -0.3245 #>  #> [[30]] #>         x       m       y #> x -0.4081  0.0028  0.0232 #> m  0.4974 -0.4713 -0.4130 #> y -0.4946  0.2607 -0.5754 #>  #> [[31]] #>         x       m       y #> x -0.1392 -0.4151  0.1329 #> m  0.4121 -0.3814 -0.0712 #> y -0.8051  0.4695 -0.5703 #>  #> [[32]] #>         x       m       y #> x -1.0668 -0.3412 -0.0488 #> m  1.5288 -0.5792 -0.6432 #> y -0.0236  0.6782 -0.9510 #>  #> [[33]] #>         x       m       y #> x -0.6313  0.1458  0.5649 #> m  1.0035 -1.0179 -0.0652 #> y -0.7079  0.5710 -0.9275 #>  #> [[34]] #>         x       m       y #> x -0.5981  0.5447  0.2370 #> m  0.5518 -0.8220  0.1444 #> y -0.2837  0.7441 -0.8026 #>  #> [[35]] #>         x       m       y #> x -0.3760 -0.6159 -0.1619 #> m  0.7455 -0.4486  0.3184 #> y -0.5399  0.8208 -0.9259 #>  #> [[36]] #>         x       m       y #> x -0.8211  0.3333  0.5403 #> m  0.4818 -0.6742  0.1147 #> y -0.4575  1.0438 -0.6069 #>  #> [[37]] #>         x       m       y #> x -0.0438 -0.1913 -0.2189 #> m  1.0121 -1.0879  0.4560 #> y -0.7420  0.9661 -0.4182 #>  #> [[38]] #>         x       m       y #> x -0.6305  0.0519 -0.3075 #> m  0.2891 -0.8919 -0.1079 #> y -0.5822  0.8868 -0.8725 #>  #> [[39]] #>         x       m       y #> x -0.9969  0.6508 -0.2677 #> m  0.4777 -0.5442 -0.0148 #> y -0.8395  0.8875 -1.0651 #>  #> [[40]] #>         x       m       y #> x -0.4153 -0.3777  0.0552 #> m  0.6768 -0.7006 -0.3646 #> y -0.5796  0.6035 -0.3262 #>  #> [[41]] #>         x       m       y #> x -0.4109 -0.2373 -0.0544 #> m  0.5736 -0.9596 -0.2123 #> y -0.3284  1.0132 -0.3790 #>  #> [[42]] #>         x       m       y #> x -0.1467 -0.3364 -0.4359 #> m  0.2769 -0.4348  0.0457 #> y -0.5458  0.6445 -0.6675 #>  #> [[43]] #>         x       m       y #> x -0.3225  0.0097  0.4471 #> m  0.2850 -0.5174  0.2141 #> y -1.0253  1.4949 -0.8394 #>  #> [[44]] #>         x       m       y #> x -0.7559 -0.1536  0.4511 #> m  0.9942 -0.9598  0.5648 #> y -0.4914  0.5642 -1.0631 #>  #> [[45]] #>         x       m       y #> x -0.1769  0.0374 -0.4160 #> m  0.9637 -0.4728 -0.2756 #> y -0.6885  0.3754 -0.5568 #>  #> [[46]] #>         x       m       y #> x -0.3169 -0.1641  0.0323 #> m  1.2726 -0.4854  0.2306 #> y -0.9982  0.6590 -0.7262 #>  #> [[47]] #>         x       m       y #> x -0.5678  0.2690  0.0708 #> m  0.4662 -0.5777  0.0837 #> y -0.5875  0.0619 -0.9957 #>  #> [[48]] #>         x       m       y #> x -0.9053 -0.4573 -0.0542 #> m  0.6444 -0.5776 -0.2122 #> y -0.0040  0.9637 -0.3440 #>  #> [[49]] #>         x       m       y #> x -0.3641  0.2027  0.0351 #> m  0.7360 -0.7475 -0.3221 #> y -0.4191  0.3433 -1.0359 #>  #> [[50]] #>         x       m       y #> x -0.1074 -0.1336 -0.3040 #> m  1.0164 -0.4057 -0.1125 #> y -0.5545  1.0478 -1.0712 #>  #> [[51]] #>         x       m       y #> x -0.3634 -0.0708 -0.3003 #> m  0.9753 -0.7200  1.1534 #> y -0.4025  0.9655 -0.8761 #>  #> [[52]] #>         x       m       y #> x -0.4116  0.1819  0.0896 #> m  0.2703 -0.4336  0.1018 #> y -0.5597  0.6048 -0.6692 #>  #> [[53]] #>         x       m       y #> x -0.9718 -0.1154 -0.1710 #> m  1.2792 -0.6169 -0.1020 #> y -0.5817  0.8355 -0.3922 #>  #> [[54]] #>         x       m       y #> x -0.3671 -0.0507  0.2011 #> m  0.4971 -0.9741 -0.2671 #> y -0.3027  1.1691 -0.6000 #>  #> [[55]] #>         x       m       y #> x -0.9081 -0.2732 -0.1377 #> m  0.7826 -0.2509  0.0539 #> y -0.4285  0.7691 -0.6318 #>  #> [[56]] #>         x       m       y #> x -0.6330 -0.1352  0.4032 #> m  1.3981 -0.4071 -0.4848 #> y -0.0628  0.8709 -0.6484 #>  #> [[57]] #>         x       m       y #> x -0.5716 -0.2904 -0.9815 #> m  0.6002 -0.5104  0.3351 #> y -0.5145  0.9666 -0.5926 #>  #> [[58]] #>         x       m       y #> x -0.0853 -0.1908  0.5859 #> m -0.0739 -0.7610 -0.2784 #> y -1.0674  0.6428 -0.8445 #>  #> [[59]] #>         x       m       y #> x -0.3777  0.0656  0.1128 #> m  0.8989 -0.5156 -0.4871 #> y -0.4501  0.3930 -0.4726 #>  #> [[60]] #>         x       m       y #> x -1.1444  0.2666 -0.0877 #> m  0.2862 -0.3202 -0.2117 #> y -0.5150  1.3012 -0.5467 #>  #> [[61]] #>         x       m       y #> x -0.5269  0.0676 -0.0710 #> m  0.7264 -1.0256  0.0231 #> y -0.0178  0.4719 -0.4232 #>  #> [[62]] #>         x       m       y #> x -0.2998 -0.1015  0.1827 #> m  0.4915 -0.6801  0.3549 #> y -0.0945  0.9665 -0.9195 #>  #> [[63]] #>         x       m       y #> x -0.0936 -0.1392  0.3097 #> m  1.0521 -0.4798 -0.4324 #> y -0.5027  0.6471 -0.7498 #>  #> [[64]] #>         x       m       y #> x -0.6689 -0.0929 -0.2490 #> m  1.0424 -0.1300  0.1806 #> y -0.9117  1.0659 -1.1202 #>  #> [[65]] #>         x       m       y #> x -0.4898 -0.1196  0.4541 #> m  0.6970 -0.1351 -0.3419 #> y -0.3528  0.1951 -0.7034 #>  #> [[66]] #>         x       m       y #> x -0.2360 -0.0164 -0.3757 #> m  0.9830 -0.6066 -0.2857 #> y -0.1591  0.7775 -1.0288 #>  #> [[67]] #>         x       m       y #> x -0.6339  0.0342  0.0401 #> m  0.8270 -1.0489  0.4998 #> y  0.0652  0.5969 -0.5418 #>  #> [[68]] #>         x       m       y #> x -0.5422 -0.0616  0.0014 #> m  0.6718 -0.3817  0.4155 #> y -0.7427  0.3234 -0.9757 #>  #> [[69]] #>         x       m       y #> x -0.0403 -0.0506 -0.5266 #> m  0.7176 -0.8780 -0.1823 #> y -0.4755  1.0920 -0.7177 #>  #> [[70]] #>         x       m       y #> x -0.4184  0.0873  0.2936 #> m  0.5819 -0.5672 -0.2931 #> y -0.5228  0.6846 -1.1257 #>  #> [[71]] #>         x       m       y #> x -0.6265  0.2090 -0.1042 #> m  0.7528 -0.9778  0.0057 #> y -0.5539  0.7630 -0.0298 #>  #> [[72]] #>         x       m       y #> x -0.3142 -0.4175 -0.3436 #> m  0.6047 -0.6731  0.4674 #> y -0.0897  0.5923 -1.0471 #>  #> [[73]] #>         x       m       y #> x -0.7625 -0.1079 -0.1096 #> m  0.5141 -0.8554  0.3487 #> y -0.6520  0.6899 -1.4064 #>  #> [[74]] #>         x       m       y #> x -0.3623 -0.2808 -0.0804 #> m  0.8808 -0.4030  0.1781 #> y -0.6301  0.8759 -1.0519 #>  #> [[75]] #>         x       m       y #> x -0.5995 -0.4198 -0.5094 #> m  0.6576 -0.2874  0.3968 #> y -0.2405  0.7774 -0.6126 #>  #> [[76]] #>         x       m       y #> x -0.2502  0.0400 -0.2393 #> m  1.0703 -0.0552 -0.2317 #> y -0.2040  0.5293 -0.4795 #>  #> [[77]] #>         x       m       y #> x -0.3583  0.4105 -0.3260 #> m  0.4468 -0.7572 -0.4285 #> y  0.0135  0.4630 -0.4630 #>  #> [[78]] #>         x       m       y #> x -0.6778  0.0109 -0.5704 #> m  0.8244 -0.3219 -0.1490 #> y -0.5195  0.4863 -1.0459 #>  #> [[79]] #>         x       m       y #> x -0.1261 -0.2689  0.1719 #> m  1.2347 -0.8141 -0.5353 #> y -0.5857  1.1799 -0.7561 #>  #> [[80]] #>         x       m       y #> x -0.2520 -0.4989  0.4904 #> m  0.5242 -0.4786 -0.2059 #> y -0.3187  0.9093 -0.7219 #>  #> [[81]] #>         x       m       y #> x -0.4483  0.5324 -0.0998 #> m  0.1837 -0.3331  0.2339 #> y -0.3454  0.9350 -1.0312 #>  #> [[82]] #>         x       m       y #> x -0.4740  0.4396 -0.0832 #> m  0.6544 -0.7612  0.3754 #> y -0.2096  0.5643 -0.9836 #>  #> [[83]] #>         x       m       y #> x -0.8703 -0.2334  0.4392 #> m  1.4877 -0.6639 -0.1450 #> y -0.2625  0.8243 -0.8017 #>  #> [[84]] #>         x       m       y #> x -0.1962 -0.3202  0.0654 #> m  1.3910 -0.3775 -0.3593 #> y -0.5640  0.3310 -0.3806 #>  #> [[85]] #>         x       m       y #> x -0.3905 -0.2777 -0.3170 #> m  0.3367 -0.6976  0.0301 #> y  0.6498  0.8609 -0.6813 #>  #> [[86]] #>         x       m       y #> x -0.6248 -0.4520  0.2134 #> m  0.8028 -0.2845  0.0879 #> y -0.9383  0.9861 -0.6502 #>  #> [[87]] #>         x       m       y #> x -0.1593 -0.5304 -0.0042 #> m  0.9188 -0.6926 -0.0764 #> y -0.2094  0.5743 -0.4895 #>  #> [[88]] #>         x       m       y #> x -0.4309 -0.1042 -0.0629 #> m  0.7116 -0.6306  0.1055 #> y -0.4704  0.3523 -0.9833 #>  #> [[89]] #>         x       m       y #> x -0.1073  0.0902  0.3519 #> m  0.0455 -0.5125  0.2619 #> y -0.4501  0.8671 -0.6955 #>  #> [[90]] #>         x       m       y #> x -0.1855 -0.1612 -0.1172 #> m  0.9788 -0.8409 -0.3104 #> y -0.5546  0.6565 -0.6502 #>  #> [[91]] #>         x       m       y #> x -0.2742 -0.0278 -0.0435 #> m  0.3944 -0.2534 -0.2422 #> y  0.6082  0.6999 -0.5411 #>  #> [[92]] #>         x       m       y #> x -0.8169  0.2507  0.1256 #> m  0.2168 -0.8083  0.4825 #> y  0.0757  0.5949 -0.5242 #>  #> [[93]] #>         x       m       y #> x -0.3167  0.0613 -0.1022 #> m  0.6812 -0.6474 -0.5121 #> y -0.3802  0.8593 -0.4606 #>  #> [[94]] #>         x       m       y #> x -0.4927  0.0970  0.1964 #> m  0.6259 -0.5075  0.2843 #> y -0.2871  0.1613 -1.0010 #>  #> [[95]] #>         x       m       y #> x -0.2908 -0.0831 -0.3284 #> m  0.7124 -0.3808  0.0491 #> y -0.4735  0.7616 -0.4224 #>  #> [[96]] #>         x       m       y #> x -0.2382 -0.0210  0.2435 #> m  0.8107 -0.9013  0.0443 #> y -0.5787  0.8863 -1.0013 #>  #> [[97]] #>         x       m       y #> x -0.3714 -0.2303 -0.3200 #> m  1.2856 -0.9282  0.2868 #> y -0.1415  1.1378 -0.8186 #>  #> [[98]] #>         x       m       y #> x -0.2475 -0.4155  0.3497 #> m  0.6953 -0.4973  0.1498 #> y -0.3532  0.7291 -0.4281 #>  #> [[99]] #>         x       m       y #> x -0.2293 -0.2961  0.2112 #> m  0.6084 -0.7606  0.1396 #> y -0.7304  0.3160 -0.4800 #>  #> [[100]] #>         x       m       y #> x -0.5496 -0.0348  0.0700 #> m  0.9226 -0.5533 -0.0088 #> y -0.5031  0.8429 -0.5873 #>  phi <- matrix(   data = c(     -6, 5.5, 0, 0,     1.25, -2.5, 5.9, -7.3,     0, 0, -6, 2.5,     5, 0, 0, -6   ),   nrow = 4 ) colnames(phi) <- rownames(phi) <- paste0(\"y\", 1:4) MCPhi(   phi = phi,   vcov_phi_vec = 0.1 * diag(16),   R = 100L, # use a large value for R in actual research   test_phi = FALSE ) #> [[1]] #>         y1      y2      y3      y4 #> y1 -5.7668  0.9230  0.2233  4.2634 #> y2  5.6636 -2.6310  0.5893  0.1656 #> y3  0.1348  5.7811 -6.3375 -0.0939 #> y4  0.3147 -7.4983  2.6865 -6.3097 #>  #> [[2]] #>         y1      y2      y3      y4 #> y1 -5.6895  1.3958 -0.1064  4.9329 #> y2  5.6879 -2.2832 -0.0758 -0.3114 #> y3 -0.5317  5.7714 -5.9755 -0.0333 #> y4 -0.2057 -7.3658  2.2075 -5.4863 #>  #> [[3]] #>         y1      y2      y3      y4 #> y1 -5.9580  1.5836  0.3723  4.6407 #> y2  5.5283 -2.0794  0.2199  0.0805 #> y3 -0.5804  5.7189 -6.2748  0.1087 #> y4 -0.1854 -7.1197  2.6285 -6.3340 #>  #> [[4]] #>         y1      y2      y3      y4 #> y1 -5.6135  1.3059 -0.1520  3.7929 #> y2  6.2636 -3.0146  0.5791 -0.4636 #> y3  0.1067  5.7501 -5.8046 -0.4455 #> y4  0.3517 -7.0425  2.5319 -5.9514 #>  #> [[5]] #>         y1      y2      y3      y4 #> y1 -6.1717  1.0766 -0.3349  4.7839 #> y2  5.3780 -2.5961 -0.5326 -0.2039 #> y3 -0.3308  6.3404 -6.2413  0.6843 #> y4  0.1681 -7.0827  2.7400 -6.0146 #>  #> [[6]] #>         y1      y2      y3      y4 #> y1 -5.3812  1.2558  0.6623  5.2363 #> y2  5.0359 -3.1022  0.0187 -0.0110 #> y3  0.4751  6.0529 -6.0927 -0.3454 #> y4  0.3612 -7.0734  2.4150 -6.4608 #>  #> [[7]] #>         y1      y2      y3      y4 #> y1 -6.0145  0.9127 -0.1050  5.0986 #> y2  5.7418 -2.8818 -0.3098  0.1868 #> y3  0.0207  5.8365 -5.9757 -0.1299 #> y4  0.2673 -7.3022  2.9458 -6.2110 #>  #> [[8]] #>         y1      y2      y3      y4 #> y1 -5.8044  1.0844  0.1378  4.9405 #> y2  5.5657 -2.3141 -0.4056 -0.3457 #> y3  0.2661  5.9458 -5.6681 -0.1354 #> y4 -0.5021 -7.0220  2.6626 -5.6208 #>  #> [[9]] #>         y1      y2      y3      y4 #> y1 -6.5522  1.3479  0.3668  4.7705 #> y2  5.4461 -2.9554 -0.1138  0.2969 #> y3 -0.2456  5.4209 -5.9634 -0.1664 #> y4  0.2009 -6.9219  2.9102 -6.1279 #>  #> [[10]] #>         y1      y2      y3      y4 #> y1 -5.9269  1.3184  0.0610  4.7207 #> y2  5.7802 -2.7238 -0.0001 -0.1507 #> y3  0.6121  5.6427 -6.2988 -0.3708 #> y4 -0.2834 -7.9467  2.7768 -5.6733 #>  #> [[11]] #>         y1      y2      y3      y4 #> y1 -6.0108  1.6800 -0.2495  4.5300 #> y2  5.3815 -2.8865 -0.1977  0.1310 #> y3  0.3771  5.5380 -5.5998  0.0828 #> y4 -0.2887 -6.5693  2.5902 -6.1295 #>  #> [[12]] #>         y1      y2      y3      y4 #> y1 -5.8948  2.1404  0.5304  4.8120 #> y2  5.2657 -2.7172  0.2243  0.2726 #> y3  0.3392  6.2523 -6.4579  0.5665 #> y4 -0.0974 -7.1006  3.0208 -5.9235 #>  #> [[13]] #>         y1      y2      y3      y4 #> y1 -6.3194  1.2196  0.2219  4.5833 #> y2  5.6737 -2.2696  0.5674 -0.1532 #> y3 -0.6263  5.6929 -6.1867  0.5924 #> y4  0.5117 -6.6057  2.8267 -5.7002 #>  #> [[14]] #>         y1      y2      y3      y4 #> y1 -5.4823  1.1359 -0.5189  4.7700 #> y2  6.0158 -2.4379  0.1708 -0.3368 #> y3  0.2634  6.1350 -6.1545 -0.1257 #> y4  0.2983 -7.1599  2.4814 -5.8683 #>  #> [[15]] #>         y1      y2      y3      y4 #> y1 -6.6469  1.6101  0.0410  4.7742 #> y2  5.3425 -2.5490  0.2587 -0.0487 #> y3 -0.0882  6.2703 -5.8678  0.1974 #> y4  0.3573 -7.0197  2.0987 -5.7518 #>  #> [[16]] #>         y1      y2      y3      y4 #> y1 -6.1222  1.2925 -0.0562  4.6711 #> y2  5.6139 -2.3581 -0.0177 -0.3112 #> y3  0.0130  5.6994 -6.3263  0.4808 #> y4  0.3061 -7.7456  2.2897 -6.1503 #>  #> [[17]] #>         y1      y2      y3      y4 #> y1 -5.9608  1.4888  0.0045  5.1459 #> y2  5.5950 -1.9211 -0.1746 -0.2890 #> y3  0.0078  5.8701 -5.8714 -0.1302 #> y4 -0.4365 -7.1767  2.8803 -5.8976 #>  #> [[18]] #>         y1      y2      y3      y4 #> y1 -5.8132  1.1155 -0.2077  4.7644 #> y2  5.5631 -2.8843 -0.0421 -0.3663 #> y3  0.5158  5.6960 -6.5660 -0.7380 #> y4 -0.0856 -7.5594  2.2929 -6.0541 #>  #> [[19]] #>         y1      y2      y3      y4 #> y1 -5.8361  1.6981 -0.2099  5.1071 #> y2  5.8118 -2.6273  0.1838  0.2969 #> y3  0.2353  6.0135 -6.2679  0.1417 #> y4  0.2306 -6.8748  2.5869 -5.7116 #>  #> [[20]] #>         y1      y2      y3      y4 #> y1 -6.1133  1.2747  0.2049  4.9287 #> y2  5.3474 -2.4081  0.1822 -0.0050 #> y3  0.0505  6.2017 -5.5979  0.1538 #> y4  0.6316 -7.7229  2.5705 -5.7057 #>  #> [[21]] #>         y1      y2      y3      y4 #> y1 -6.3539  1.4517 -0.0312  5.0953 #> y2  5.1892 -2.3262 -0.4178  0.0068 #> y3 -0.3209  5.9855 -6.0231  0.0657 #> y4  0.0838 -7.5616  2.6139 -5.8151 #>  #> [[22]] #>         y1      y2      y3      y4 #> y1 -5.3427  1.6514  0.3106  4.5388 #> y2  5.6862 -2.8037 -0.0708 -0.7003 #> y3  0.0372  5.6301 -6.3433  0.0265 #> y4  0.1000 -7.7933  2.7021 -6.1851 #>  #> [[23]] #>         y1      y2      y3      y4 #> y1 -5.6847  1.0275  0.5207  4.9294 #> y2  5.9071 -2.4629 -0.2393  0.4546 #> y3  0.5209  5.9664 -5.9180 -0.1018 #> y4  0.1192 -8.2784  2.4460 -5.6730 #>  #> [[24]] #>         y1      y2      y3      y4 #> y1 -6.0209  1.0396 -0.1932  4.5331 #> y2  5.1288 -2.1827 -0.0835  0.2775 #> y3  0.0706  6.0495 -6.0031 -0.1035 #> y4 -0.3772 -7.1062  2.0684 -6.1947 #>  #> [[25]] #>         y1      y2      y3      y4 #> y1 -5.7677  1.2751  0.1769  5.0236 #> y2  5.6191 -1.9918  0.0119  0.4368 #> y3 -0.2083  5.3403 -6.4606  0.2666 #> y4 -0.4714 -7.6268  2.8729 -6.0815 #>  #> [[26]] #>         y1      y2      y3      y4 #> y1 -6.1515  1.4525  0.2027  4.6271 #> y2  5.4472 -2.8296  0.0494 -0.0455 #> y3 -0.4805  5.5610 -6.6059 -0.7099 #> y4  0.5108 -7.5901  2.7159 -5.6216 #>  #> [[27]] #>         y1      y2      y3      y4 #> y1 -6.0670  1.3287 -0.0973  5.0208 #> y2  6.2865 -2.8627 -0.1693 -0.5216 #> y3 -0.0158  5.6777 -5.7077  0.2599 #> y4  0.0596 -6.6147  3.0623 -5.9546 #>  #> [[28]] #>         y1      y2      y3      y4 #> y1 -5.2771  1.3007  0.3736  4.5974 #> y2  5.7214 -3.1083  0.4978 -0.1548 #> y3  0.2311  5.4551 -5.7353 -0.0374 #> y4  0.2129 -7.3875  2.9406 -6.6204 #>  #> [[29]] #>         y1      y2      y3      y4 #> y1 -6.3433  0.8689  0.0856  5.2539 #> y2  5.4734 -2.3393  0.2726  0.2675 #> y3 -0.0526  5.7604 -6.0303 -0.0223 #> y4 -0.2449 -6.5926  2.7770 -6.1566 #>  #> [[30]] #>         y1      y2      y3      y4 #> y1 -5.7536  1.3618  0.3328  4.9249 #> y2  5.3979 -2.3363 -0.0817  0.4274 #> y3  0.0238  5.7449 -5.6317 -0.1724 #> y4 -0.1627 -7.4029  2.1575 -6.6403 #>  #> [[31]] #>         y1      y2      y3      y4 #> y1 -6.2718  1.3489  0.3620  4.9804 #> y2  6.0443 -2.5327 -0.1802 -0.5506 #> y3  0.0275  6.1188 -6.0708 -0.0636 #> y4 -0.3418 -7.5190  2.5217 -6.1727 #>  #> [[32]] #>         y1      y2      y3      y4 #> y1 -6.2242  1.4407 -0.0388  4.9602 #> y2  5.8011 -2.4977 -0.1438  0.0753 #> y3 -0.4079  6.0727 -6.0324 -0.3399 #> y4 -0.5544 -7.0974  2.2145 -5.9584 #>  #> [[33]] #>         y1      y2      y3      y4 #> y1 -6.3039  0.8956 -0.1184  5.5026 #> y2  5.4044 -2.6264 -0.2561  0.0758 #> y3  0.0288  5.4258 -6.5411 -0.0384 #> y4 -0.0572 -7.4542  2.8864 -5.9262 #>  #> [[34]] #>         y1      y2      y3      y4 #> y1 -5.9672  1.1480 -0.0393  4.6688 #> y2  5.8418 -2.6531 -0.0048  0.4096 #> y3  0.3215  5.8236 -5.6790 -0.2734 #> y4  0.2377 -7.5154  2.2944 -6.6422 #>  #> [[35]] #>         y1      y2      y3      y4 #> y1 -5.7728  1.5450 -0.0139  5.5630 #> y2  5.7372 -2.1377  0.2431 -0.2941 #> y3 -0.2750  6.4422 -6.5744 -0.3441 #> y4 -0.3499 -7.4563  2.3695 -5.8145 #>  #> [[36]] #>         y1      y2      y3      y4 #> y1 -6.1589  1.1369 -0.1308  5.0856 #> y2  5.7150 -2.2752 -0.0253  0.8980 #> y3 -0.0521  6.1190 -5.9389 -0.0729 #> y4  0.3482 -6.6299  2.1511 -5.9658 #>  #> [[37]] #>         y1      y2      y3      y4 #> y1 -5.8945  0.9853  0.6941  4.9666 #> y2  5.1616 -3.0345  0.0107 -0.0917 #> y3  0.0343  5.8754 -5.5661  0.3381 #> y4  0.4594 -6.6046  2.0610 -5.9833 #>  #> [[38]] #>         y1      y2      y3      y4 #> y1 -6.0137  1.4075 -0.2587  4.7113 #> y2  5.1521 -2.3546 -0.1579  0.0894 #> y3 -0.0882  5.7019 -6.4509 -0.1253 #> y4 -0.4616 -7.0690  2.6749 -5.9659 #>  #> [[39]] #>         y1      y2      y3      y4 #> y1 -5.2570  1.5659  0.1064  4.6079 #> y2  5.4045 -2.2201 -0.2555 -0.0682 #> y3 -0.0509  5.8983 -6.4767  0.3584 #> y4 -0.3301 -7.8675  2.8030 -6.2076 #>  #> [[40]] #>         y1      y2      y3      y4 #> y1 -5.9080  1.3928 -0.1253  5.3514 #> y2  5.3735 -2.3501 -0.2915  0.0394 #> y3 -0.0680  5.8674 -6.0316 -0.0848 #> y4 -0.0270 -7.7892  2.2404 -6.3040 #>  #> [[41]] #>         y1      y2      y3      y4 #> y1 -6.4446  1.3247 -0.2761  4.5362 #> y2  5.7358 -2.1600 -0.5047 -0.6031 #> y3 -0.6084  5.5772 -5.6569  0.6039 #> y4  0.8787 -7.6333  2.4308 -5.5574 #>  #> [[42]] #>         y1      y2      y3      y4 #> y1 -5.8593  1.2839 -0.0032  4.7804 #> y2  5.8267 -2.5814 -0.0681  0.4127 #> y3  0.6440  5.9321 -5.8832 -0.1229 #> y4  0.1774 -6.8543  3.1020 -6.5602 #>  #> [[43]] #>         y1      y2      y3      y4 #> y1 -6.0673  0.8908  0.2522  5.3146 #> y2  5.5606 -2.4939  0.3249  0.3578 #> y3 -0.1531  5.7704 -5.2237  0.3980 #> y4  0.4033 -7.0085  2.2838 -6.7198 #>  #> [[44]] #>         y1      y2      y3      y4 #> y1 -5.8124  1.4435  0.0103  4.2477 #> y2  5.6099 -2.7047 -0.6513  0.4689 #> y3  0.0544  5.4757 -5.8748  0.2879 #> y4 -0.0655 -7.3180  3.0642 -5.7631 #>  #> [[45]] #>         y1      y2      y3      y4 #> y1 -5.9015  1.1435 -0.1690  4.9738 #> y2  4.9948 -2.8262  0.2239  0.0506 #> y3 -0.3837  6.4569 -6.3387  0.3022 #> y4  0.1928 -7.3322  2.5901 -6.3325 #>  #> [[46]] #>         y1      y2      y3      y4 #> y1 -6.0980  1.2951 -0.3674  4.6936 #> y2  5.5459 -3.1702  0.4847 -0.3380 #> y3 -0.1205  5.2876 -6.0921 -0.2235 #> y4 -0.1159 -7.3589  2.1731 -5.7440 #>  #> [[47]] #>         y1      y2      y3      y4 #> y1 -5.3795  0.6644  0.2127  4.3846 #> y2  5.3361 -2.5810  0.0289  0.3402 #> y3 -0.2481  5.8775 -4.8334  0.2223 #> y4 -0.4489 -7.3971  1.9999 -5.7160 #>  #> [[48]] #>         y1      y2      y3      y4 #> y1 -6.5926  1.3679 -0.0816  5.4116 #> y2  5.7363 -2.3326 -0.0569 -0.0734 #> y3 -0.5427  5.6793 -5.9737  0.0655 #> y4 -0.7339 -7.1181  2.5202 -5.7012 #>  #> [[49]] #>         y1      y2      y3      y4 #> y1 -5.7572  1.9445 -0.1988  4.9842 #> y2  5.6896 -2.7707  0.1606  0.0311 #> y3  0.3578  5.9488 -6.1304 -0.7058 #> y4 -0.0977 -7.0141  2.5897 -5.4540 #>  #> [[50]] #>         y1      y2      y3      y4 #> y1 -6.2746  1.0570  0.1394  4.9125 #> y2  5.6567 -2.6995  0.1489 -0.0157 #> y3  0.2149  6.1102 -6.1968  0.8091 #> y4  0.1977 -6.8883  2.3872 -5.8547 #>  #> [[51]] #>         y1      y2      y3      y4 #> y1 -5.9523  1.4773  0.4845  5.3901 #> y2  5.4737 -2.3223  0.4638 -0.0051 #> y3  0.1663  5.7208 -5.7078 -0.2873 #> y4 -0.2619 -7.5732  2.6116 -5.6516 #>  #> [[52]] #>         y1      y2      y3      y4 #> y1 -5.9569  1.1484  0.1413  4.9625 #> y2  5.4961 -1.9196 -0.2147  0.0860 #> y3  0.0434  5.1711 -6.0091 -0.4300 #> y4  0.0989 -6.9923  2.4675 -6.2801 #>  #> [[53]] #>         y1      y2      y3      y4 #> y1 -5.9964  1.5948  0.1424  4.8919 #> y2  4.9500 -2.3143 -0.2004  0.0746 #> y3  0.0413  6.1239 -6.1581  0.5520 #> y4 -0.1606 -6.6052  3.0729 -5.6252 #>  #> [[54]] #>         y1      y2      y3      y4 #> y1 -6.0056  0.5813  0.2066  4.1852 #> y2  5.6146 -2.5315 -0.2098  0.5014 #> y3 -0.0282  6.0132 -5.9744 -0.2524 #> y4  0.1977 -7.1909  2.0617 -5.5994 #>  #> [[55]] #>         y1      y2      y3      y4 #> y1 -6.2481  1.2533  0.0911  4.8759 #> y2  5.3307 -2.3027 -0.1617  0.5334 #> y3  0.1470  5.6411 -5.5382 -0.0052 #> y4  0.2635 -7.2861  2.4187 -6.3106 #>  #> [[56]] #>         y1      y2      y3      y4 #> y1 -5.9427  1.2370 -0.4303  4.2867 #> y2  5.4646 -2.7914  0.7996 -0.1051 #> y3  0.1021  6.0495 -5.6497 -0.1754 #> y4  0.2555 -7.3638  2.6484 -6.1278 #>  #> [[57]] #>         y1      y2      y3      y4 #> y1 -5.8707  1.4799  0.4191  5.0782 #> y2  5.6182 -2.4580 -0.0108 -0.2805 #> y3 -0.7355  5.7616 -6.2561 -0.4730 #> y4  0.0598 -7.7258  2.6587 -5.9206 #>  #> [[58]] #>         y1      y2      y3      y4 #> y1 -5.8946  1.0787 -0.4839  5.0753 #> y2  5.6657 -2.6659 -0.3270  0.1845 #> y3 -0.1998  5.6498 -5.6949  0.2662 #> y4 -0.2045 -7.1635  2.2299 -5.7683 #>  #> [[59]] #>         y1      y2      y3      y4 #> y1 -6.4531  0.9740  0.0054  4.9008 #> y2  5.8377 -2.9909 -0.2070 -0.4158 #> y3 -0.2417  5.5451 -5.8743  0.2004 #> y4 -0.5901 -7.1767  2.3551 -5.7033 #>  #> [[60]] #>         y1      y2      y3      y4 #> y1 -5.4631  1.0113  0.0522  5.1682 #> y2  4.9342 -2.6603 -0.3605  0.2755 #> y3 -0.4089  6.0702 -5.9465 -0.1638 #> y4 -0.2940 -7.0916  2.4145 -5.0471 #>  #> [[61]] #>         y1      y2      y3      y4 #> y1 -5.9779  1.0796  0.0267  4.8381 #> y2  5.4393 -2.5748  0.3063 -0.0395 #> y3 -0.2208  6.2879 -6.1863 -0.2941 #> y4  0.1071 -7.5201  1.8880 -6.3136 #>  #> [[62]] #>         y1      y2      y3      y4 #> y1 -5.6482  1.3129 -0.1826  4.8776 #> y2  6.0977 -1.9955 -0.5990  0.3349 #> y3 -0.3539  6.5941 -6.0968 -0.2040 #> y4  0.3579 -7.3144  2.8496 -5.5229 #>  #> [[63]] #>         y1      y2      y3      y4 #> y1 -5.6285  0.8844  0.2849  4.8488 #> y2  5.2297 -2.4012  0.0733  0.2061 #> y3  0.1713  5.3912 -6.4161  0.1879 #> y4  0.1810 -7.3348  2.8551 -6.0188 #>  #> [[64]] #>         y1      y2      y3      y4 #> y1 -5.5283  0.8311  0.1781  4.4061 #> y2  4.9419 -2.6348 -0.7101 -0.2532 #> y3 -0.0070  5.5456 -6.0511  0.0560 #> y4  0.5372 -8.1754  2.2046 -6.1299 #>  #> [[65]] #>         y1      y2      y3      y4 #> y1 -6.6001  1.6824 -0.0380  5.2231 #> y2  5.4676 -2.1973  0.5336  0.0204 #> y3  0.6301  5.1240 -5.9167  0.0347 #> y4 -0.0134 -7.2489  2.4992 -5.5505 #>  #> [[66]] #>         y1      y2      y3      y4 #> y1 -5.7521  0.7159 -0.2507  4.9922 #> y2  5.8027 -1.9508  0.5002  0.0441 #> y3  0.0835  6.1362 -5.8951 -0.1631 #> y4 -0.6097 -7.3279  2.7955 -6.1510 #>  #> [[67]] #>         y1      y2      y3      y4 #> y1 -6.6907  1.1029 -0.2930  5.1709 #> y2  4.9118 -2.5787 -0.0594  0.8663 #> y3  0.2808  6.0329 -6.1878  0.7187 #> y4 -0.0158 -7.4357  2.5586 -6.2412 #>  #> [[68]] #>         y1      y2      y3      y4 #> y1 -5.7003  1.5561  0.0553  5.6792 #> y2  5.4253 -2.8970  0.0461 -0.1316 #> y3 -1.0162  6.0995 -5.8691  0.1358 #> y4  0.5630 -7.3931  2.1565 -5.9070 #>  #> [[69]] #>         y1      y2      y3      y4 #> y1 -5.6939  1.5281  0.1444  4.8940 #> y2  5.6035 -2.9275  0.0641 -0.6012 #> y3 -0.0134  6.0038 -6.3259 -0.1658 #> y4  0.2364 -7.3385  2.3606 -5.9478 #>  #> [[70]] #>         y1      y2      y3      y4 #> y1 -5.9643  1.3434 -0.1344  5.0722 #> y2  5.1277 -2.5828 -0.1238  0.1204 #> y3  0.0389  5.8466 -6.0228  0.2002 #> y4  0.0429 -6.9442  2.5921 -6.1923 #>  #> [[71]] #>         y1      y2      y3      y4 #> y1 -5.9243  0.8865  0.0999  4.8679 #> y2  5.2796 -2.5638 -0.2983  0.1686 #> y3  0.0906  6.0471 -6.3269 -0.2134 #> y4 -0.5054 -7.1232  2.6130 -5.6755 #>  #> [[72]] #>         y1      y2      y3      y4 #> y1 -5.9200  1.2293 -0.0611  5.4255 #> y2  5.9229 -2.6953  0.1815  0.0032 #> y3 -0.2596  5.8636 -5.5987 -0.0868 #> y4  0.1786 -7.3480  2.7143 -5.7337 #>  #> [[73]] #>         y1      y2      y3      y4 #> y1 -6.4274  0.4931  0.2368  4.5700 #> y2  5.4101 -2.5940  0.3928  0.0951 #> y3  0.3073  5.5423 -6.2832  0.0019 #> y4 -0.6478 -7.5113  2.2986 -6.1988 #>  #> [[74]] #>         y1      y2      y3      y4 #> y1 -5.9378  1.2743 -0.1804  4.5888 #> y2  5.4514 -2.3675 -0.1271  0.2928 #> y3 -0.4136  5.6969 -5.6865  0.2059 #> y4  0.0874 -7.0510  2.6019 -6.0188 #>  #> [[75]] #>         y1      y2      y3      y4 #> y1 -6.5136  1.5369  0.0256  4.9086 #> y2  5.5642 -2.3868 -0.3224  0.1919 #> y3  0.1486  5.7668 -5.8998  0.1100 #> y4 -0.2103 -7.1476  2.6062 -5.8118 #>  #> [[76]] #>         y1      y2      y3      y4 #> y1 -6.7212  0.6250  0.0904  5.0172 #> y2  5.5723 -2.5360  0.1952  0.3232 #> y3 -0.3055  5.5932 -5.8743 -0.4162 #> y4  0.0984 -6.7820  2.4282 -5.8759 #>  #> [[77]] #>         y1      y2      y3      y4 #> y1 -6.2910  1.2902 -0.2498  5.4488 #> y2  5.1756 -2.4222  0.1451  0.1266 #> y3 -0.2061  5.6235 -6.2612  0.0346 #> y4 -0.3544 -6.9230  2.5766 -6.5837 #>  #> [[78]] #>         y1      y2      y3      y4 #> y1 -6.0322  0.9669 -0.3262  4.9366 #> y2  5.2301 -2.4229 -0.2520 -0.0096 #> y3  0.0000  5.7709 -6.3113 -0.2493 #> y4  0.0267 -7.0330  2.7660 -5.3736 #>  #> [[79]] #>         y1      y2      y3      y4 #> y1 -5.6171  1.3802  0.3513  5.4468 #> y2  5.5958 -2.1119 -0.3488  0.0908 #> y3  0.2067  5.6944 -5.7429  0.1289 #> y4 -0.1186 -7.4404  2.6279 -6.0663 #>  #> [[80]] #>         y1      y2      y3      y4 #> y1 -5.8217  1.6960 -0.1393  4.8420 #> y2  5.1737 -2.6817 -0.1878 -0.4379 #> y3 -0.0756  5.6943 -5.8635  0.0060 #> y4 -0.0536 -7.0538  3.0298 -5.6860 #>  #> [[81]] #>         y1      y2      y3      y4 #> y1 -5.9432  1.9662  0.1804  4.8325 #> y2  5.4171 -2.0434 -0.2288  0.0017 #> y3 -0.2531  6.1313 -5.6265  0.1767 #> y4  0.4081 -7.4475  2.6137 -5.4631 #>  #> [[82]] #>         y1      y2      y3      y4 #> y1 -6.1795  1.2062 -0.7283  4.5316 #> y2  6.0215 -2.4095 -0.5060  0.2728 #> y3 -0.0582  5.9522 -5.6993  0.7224 #> y4  0.1006 -7.1613  2.6657 -5.4758 #>  #> [[83]] #>         y1      y2      y3      y4 #> y1 -5.8417  1.2243  0.6788  5.1682 #> y2  5.4315 -2.4744 -0.2423  0.0133 #> y3 -0.3892  6.0071 -5.9319  0.2591 #> y4 -0.4600 -6.9390  2.4152 -5.9745 #>  #> [[84]] #>         y1      y2      y3      y4 #> y1 -6.2975  1.2838  0.2249  4.9901 #> y2  5.5440 -2.2441 -0.3645  0.2449 #> y3  0.1365  5.8487 -5.8212 -0.2674 #> y4 -0.0015 -7.1486  2.5200 -5.7578 #>  #> [[85]] #>         y1      y2      y3      y4 #> y1 -5.6978  1.4122  0.1484  4.5891 #> y2  5.4030 -2.3363  0.2806 -0.3610 #> y3 -0.1147  6.0320 -6.1666 -0.0848 #> y4 -0.1262 -7.8710  2.7927 -6.3336 #>  #> [[86]] #>         y1      y2      y3      y4 #> y1 -5.8476  0.9337  0.4785  5.2861 #> y2  5.3785 -3.1134  0.0101 -0.4904 #> y3 -0.6114  5.9998 -5.9727 -0.4166 #> y4  0.1387 -7.1715  2.9339 -5.7481 #>  #> [[87]] #>         y1      y2      y3      y4 #> y1 -5.8597  1.8850 -0.4586  4.9502 #> y2  5.4700 -2.7928  0.2341 -0.4140 #> y3  0.3105  5.9415 -6.0601 -0.5847 #> y4 -0.1970 -7.9899  2.2574 -6.3043 #>  #> [[88]] #>         y1      y2      y3      y4 #> y1 -6.3161  1.2327  0.0271  5.3631 #> y2  5.6828 -2.7258 -0.2832 -0.0979 #> y3 -0.2076  6.2184 -5.7706  0.4866 #> y4  0.3190 -7.3725  2.5438 -6.2305 #>  #> [[89]] #>         y1      y2      y3      y4 #> y1 -6.0877  1.2029  0.0267  5.0569 #> y2  5.2536 -2.4098  0.2891 -0.3400 #> y3 -0.0267  5.9468 -5.7560 -0.1364 #> y4 -0.4393 -7.5338  2.6983 -5.8723 #>  #> [[90]] #>         y1      y2      y3      y4 #> y1 -6.0322  1.4432 -0.0431  4.9221 #> y2  5.4464 -3.0324 -0.0247  0.0904 #> y3  0.3685  6.4214 -6.1455  0.2421 #> y4 -0.6743 -7.0642  2.5569 -5.7589 #>  #> [[91]] #>         y1      y2      y3      y4 #> y1 -6.0988  0.9930 -0.3469  4.7260 #> y2  5.3874 -3.0435  0.1365  0.5614 #> y3  0.1051  6.4381 -6.1544 -0.0754 #> y4  0.1931 -6.9494  1.8696 -6.0270 #>  #> [[92]] #>         y1      y2      y3      y4 #> y1 -5.5037  1.4817 -0.1673  4.8613 #> y2  5.2454 -1.6787  0.3387  0.1379 #> y3 -0.1108  5.8373 -6.0303 -0.0616 #> y4  0.2594 -7.3990  2.2196 -5.9596 #>  #> [[93]] #>         y1      y2      y3      y4 #> y1 -6.1597  0.9582  0.2737  5.4425 #> y2  5.6030 -2.1250 -0.4149  0.7565 #> y3 -0.3107  6.0609 -6.5682 -0.5186 #> y4  0.3355 -7.2279  2.7876 -5.9105 #>  #> [[94]] #>         y1      y2      y3      y4 #> y1 -5.8317  1.7254  0.3621  5.2930 #> y2  5.3161 -3.1388  0.0509  0.3506 #> y3 -0.1596  5.9242 -6.1536  0.3438 #> y4  0.0367 -6.7521  2.0423 -5.5868 #>  #> [[95]] #>         y1      y2      y3      y4 #> y1 -6.3414  1.2384  0.2634  5.4223 #> y2  5.2255 -2.3949 -0.5253  0.3888 #> y3 -0.1683  6.2406 -5.7544  0.2706 #> y4 -0.6913 -7.2530  2.0293 -5.5734 #>  #> [[96]] #>         y1      y2      y3      y4 #> y1 -5.5362  1.4831  0.1228  4.8351 #> y2  5.2138 -2.0728  0.5201 -0.0191 #> y3  0.0749  5.9327 -6.1675  0.2317 #> y4 -0.0376 -7.4086  2.4437 -5.9435 #>  #> [[97]] #>         y1      y2      y3      y4 #> y1 -5.5899  1.5127 -0.1531  5.1957 #> y2  5.2358 -1.6921  0.1887  0.1824 #> y3  0.3952  5.7920 -6.2844 -0.1212 #> y4 -0.3621 -6.9405  2.5557 -5.7922 #>  #> [[98]] #>         y1      y2      y3      y4 #> y1 -6.2095  1.4307 -0.0805  4.8610 #> y2  4.8708 -2.7822  0.1615 -0.0977 #> y3  0.1431  5.2626 -5.4246  0.3084 #> y4 -0.2285 -7.5144  2.0456 -5.5210 #>  #> [[99]] #>         y1      y2      y3      y4 #> y1 -5.7127  1.1469  0.1237  4.6626 #> y2  4.8916 -2.1677 -0.3059  0.2355 #> y3  0.0269  5.7291 -6.4156 -0.1528 #> y4  0.1273 -7.3281  1.8487 -5.8212 #>  #> [[100]] #>         y1      y2      y3      y4 #> y1 -5.4156  1.6693 -0.5459  5.0552 #> y2  5.5648 -2.6804 -0.7217 -0.1677 #> y3 -0.1679  5.6439 -5.7622 -0.8209 #> y4  0.0468 -7.1060  2.5218 -5.8344 #>"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"function generates Monte Carlo method sampling distribution total effect centrality particular time interval \\(\\Delta t\\) using first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"","code":"MCTotalCentral(   phi,   vcov_phi_vec,   delta_t,   R,   test_phi = TRUE,   ncores = NULL,   seed = NULL )"},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. vcov_phi_vec Numeric matrix. sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\). delta_t Numeric. Time interval (\\(\\Delta t\\)). R Positive integer. Number replications. test_phi Logical. test_phi = TRUE, function tests stability generated drift matrix \\(\\boldsymbol{\\Phi}\\). test returns FALSE, function generates new drift matrix \\(\\boldsymbol{\\Phi}\\) runs test recursively test returns TRUE. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value. seed Random seed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"MCTotalCentral\"). output list length equal length delta_t. element output list following elements: est vector total effect centrality. thetahatstar matrix Monte Carlo total effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"See TotalCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"monte-carlo-method","dir":"Reference","previous_headings":"","what":"Monte Carlo Method","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"Let \\(\\boldsymbol{\\theta}\\) \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\), , elements \\(\\boldsymbol{\\Phi}\\) matrix vector form sorted column-wise. Let \\(\\hat{\\boldsymbol{\\theta}}\\) \\(\\mathrm{vec} \\left( \\hat{\\boldsymbol{\\Phi}} \\right)\\). Based asymptotic properties maximum likelihood estimators, can assume estimators normally distributed around population parameters. $$   \t\\hat{\\boldsymbol{\\theta}}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\boldsymbol{\\theta},   \t\\mathbb{V} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right)   $$ Using distributional assumption, sampling distribution \\(\\hat{\\boldsymbol{\\theta}}\\) refer \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) can generated replacing population parameters sample estimates, , $$   \t\\hat{\\boldsymbol{\\theta}}^{\\ast}   \t\\sim   \t\\mathcal{N}   \t\\left(   \t\\hat{\\boldsymbol{\\theta}},   \t\\hat{\\mathbb{V}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)   \t\\right) .   $$ Let \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) parameter function estimated parameters. sampling distribution \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) , refer \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}}^{\\ast} \\right)\\) , can generated using simulated estimates calculate \\(\\mathbf{g}\\). standard deviations simulated estimates standard errors. Percentiles corresponding \\(100 \\left( 1 - \\alpha \\right) \\%\\) confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/MCTotalCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Sampling Distribution of Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — MCTotalCentral","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- MCTotalCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   R = 100L # use a large value for R in actual research ) #>  #> Total Effect Centrality #>  #> $`1` #>   interval    est     se   R    2.5%  97.5% #> x        1 0.4000 0.0460 100  0.3107 0.4886 #> m        1 0.3998 0.0336 100  0.3295 0.4655 #> y        1 0.0000 0.0368 100 -0.0705 0.0692 #>   # Range of time intervals --------------------------------------------------- mc <- MCTotalCentral(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   R = 100L # use a large value for R in actual research ) plot(mc)     # Methods ------------------------------------------------------------------- # MCTotalCentral has a number of methods including # print, summary, confint, and plot print(mc) #>  #> Total Effect Centrality #>  #> $`1` #>   interval    est     se   R    2.5%  97.5% #> x        1 0.4000 0.0394 100  0.3279 0.4814 #> m        1 0.3998 0.0334 100  0.3173 0.4534 #> y        1 0.0000 0.0378 100 -0.0646 0.0758 #>  #> $`2` #>   interval    est     se   R    2.5%  97.5% #> x        2 0.7298 0.0536 100  0.6181 0.8266 #> m        2 0.4398 0.0319 100  0.3671 0.4868 #> y        2 0.0000 0.0516 100 -0.0912 0.0938 #>  #> $`3` #>   interval    est     se   R    2.5%  97.5% #> x        3 0.8855 0.0622 100  0.7756 0.9970 #> m        3 0.3638 0.0318 100  0.2994 0.4177 #> y        3 0.0000 0.0541 100 -0.1010 0.0949 #>  #> $`4` #>   interval    est     se   R    2.5%  97.5% #> x        4 0.8970 0.0687 100  0.7762 1.0521 #> m        4 0.2683 0.0336 100  0.2003 0.3305 #> y        4 0.0000 0.0507 100 -0.0947 0.0917 #>  #> $`5` #>   interval    est     se   R    2.5%  97.5% #> x        5 0.8204 0.0735 100  0.7120 1.0093 #> m        5 0.1859 0.0347 100  0.1227 0.2550 #> y        5 0.0000 0.0444 100 -0.0835 0.0812 #>  summary(mc) #>    variable interval       est         se   R        2.5%      97.5% #> 1         x        1 0.3999957 0.03939299 100  0.32793232 0.48139051 #> 2         m        1 0.3998356 0.03335379 100  0.31725441 0.45344808 #> 3         y        1 0.0000000 0.03776644 100 -0.06459924 0.07584911 #> 4         x        2 0.7297791 0.05361468 100  0.61810182 0.82661873 #> 5         m        2 0.4398068 0.03193405 100  0.36713308 0.48684851 #> 6         y        2 0.0000000 0.05155762 100 -0.09115130 0.09378980 #> 7         x        3 0.8855303 0.06216891 100  0.77557823 0.99704825 #> 8         m        3 0.3638264 0.03179050 100  0.29936757 0.41767664 #> 9         y        3 0.0000000 0.05408646 100 -0.10095209 0.09492716 #> 10        x        4 0.8970359 0.06872467 100  0.77620081 1.05207254 #> 11        m        4 0.2682593 0.03355110 100  0.20030793 0.33054800 #> 12        y        4 0.0000000 0.05068041 100 -0.09470587 0.09169483 #> 13        x        5 0.8203630 0.07351557 100  0.71195683 1.00933616 #> 14        m        5 0.1859320 0.03474112 100  0.12268216 0.25501048 #> 15        y        5 0.0000000 0.04442033 100 -0.08351493 0.08115569 confint(mc, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1  0.32793232 0.48139051 #> 2         m        1  0.31725441 0.45344808 #> 3         y        1 -0.06459924 0.07584911 #> 4         x        2  0.61810182 0.82661873 #> 5         m        2  0.36713308 0.48684851 #> 6         y        2 -0.09115130 0.09378980 #> 7         x        3  0.77557823 0.99704825 #> 8         m        3  0.29936757 0.41767664 #> 9         y        3 -0.10095209 0.09492716 #> 10        x        4  0.77620081 1.05207254 #> 11        m        4  0.20030793 0.33054800 #> 12        y        4 -0.09470587 0.09169483 #> 13        x        5  0.71195683 1.00933616 #> 14        m        5  0.12268216 0.25501048 #> 15        y        5 -0.08351493 0.08115569 plot(mc)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":null,"dir":"Reference","previous_headings":"","what":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"function computes total, direct, indirect effects independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"","code":"Med(phi, delta_t, from, to, med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"Returns object class ctmedmed list following elements: call Function call. args Function arguments. fun Function used (\"Med\"). output matrix total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"See Total(), Direct(), Indirect() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"linear-stochastic-differential-equation-model","dir":"Reference","previous_headings":"","what":"Linear Stochastic Differential Equation Model","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\iota}\\) term unobserved constant time, \\(\\boldsymbol{\\Phi}\\) drift matrix represents rate change solution absence random fluctuations, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Med.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — Med","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Specific time interval ---------------------------------------------------- Med(   phi = phi,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) #>  #> Total, Direct, and Indirect Effects #>  #>      interval total  direct indirect #> [1,]        1  -0.1 -0.2675   0.1674  # Range of time intervals --------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1:30,   from = \"x\",   to = \"y\",   med = \"m\" ) plot(med)   # Methods ------------------------------------------------------------------- # Med has a number of methods including # print, summary, and plot med <- Med(   phi = phi,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) print(med) #>  #> Total, Direct, and Indirect Effects #>  #>      interval   total  direct indirect #> [1,]        1 -0.1000 -0.2675   0.1674 #> [2,]        2  0.0799 -0.3209   0.4008 #> [3,]        3  0.2508 -0.2914   0.5423 #> [4,]        4  0.3449 -0.2374   0.5823 #> [5,]        5  0.3693 -0.1828   0.5521 summary(med) #>      interval   total  direct indirect #> [1,]        1 -0.1000 -0.2675   0.1674 #> [2,]        2  0.0799 -0.3209   0.4008 #> [3,]        3  0.2508 -0.2914   0.5423 #> [4,]        4  0.3449 -0.2374   0.5823 #> [5,]        5  0.3693 -0.1828   0.5521 plot(med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"function generates posterior sampling distribution elements matrix lagged coefficients \\(\\boldsymbol{\\beta}\\) specific time interval \\(\\Delta t\\) range time intervals using first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"","code":"PosteriorBeta(phi, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"PosteriorBeta\"). output list length equal length delta_t. element output list following elements: est vector total, direct, indirect effects. thetahatstar matrix Monte Carlo total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"See Total().","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Sampling Distribution for the Elements of the Matrix of Lagged Coefficients Over a Specific Time Interval or a Range of Time Intervals — PosteriorBeta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  phi <- MCPhi(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   R = 1000L )$output  # Specific time interval ---------------------------------------------------- PosteriorBeta(   phi = phi,   delta_t = 1 ) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>             interval     est     se    R    2.5%   97.5% #> from x to x        1  0.6999 0.0287 1000  0.6463  0.7612 #> from x to m        1  0.4974 0.0325 1000  0.4313  0.5561 #> from x to y        1 -0.0989 0.0345 1000 -0.1712 -0.0271 #> from m to x        1  0.0012 0.0236 1000 -0.0440  0.0471 #> from m to m        1  0.5999 0.0252 1000  0.5537  0.6525 #> from m to y        1  0.3997 0.0265 1000  0.3450  0.4468 #> from y to x        1  0.0002 0.0278 1000 -0.0546  0.0540 #> from y to m        1  0.0003 0.0283 1000 -0.0581  0.0495 #> from y to y        1  0.4999 0.0296 1000  0.4450  0.5604 #>   # Range of time intervals --------------------------------------------------- posterior <- PosteriorBeta(   phi = phi,   delta_t = 1:5 ) plot(posterior)           # Methods ------------------------------------------------------------------- # PosteriorBeta has a number of methods including # print, summary, confint, and plot print(posterior) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>             interval     est     se    R    2.5%   97.5% #> from x to x        1  0.6999 0.0287 1000  0.6463  0.7612 #> from x to m        1  0.4974 0.0325 1000  0.4313  0.5561 #> from x to y        1 -0.0989 0.0345 1000 -0.1712 -0.0271 #> from m to x        1  0.0012 0.0236 1000 -0.0440  0.0471 #> from m to m        1  0.5999 0.0252 1000  0.5537  0.6525 #> from m to y        1  0.3997 0.0265 1000  0.3450  0.4468 #> from y to x        1  0.0002 0.0278 1000 -0.0546  0.0540 #> from y to m        1  0.0003 0.0283 1000 -0.0581  0.0495 #> from y to y        1  0.4999 0.0296 1000  0.4450  0.5604 #>  #> $`2` #>             interval    est     se    R    2.5%  97.5% #> from x to x        2 0.4904 0.0373 1000  0.4259 0.5713 #> from x to m        2 0.6465 0.0399 1000  0.5693 0.7237 #> from x to y        2 0.0802 0.0380 1000  0.0010 0.1503 #> from m to x        2 0.0017 0.0264 1000 -0.0495 0.0525 #> from m to m        2 0.3606 0.0276 1000  0.3095 0.4173 #> from m to y        2 0.4395 0.0264 1000  0.3859 0.4863 #> from y to x        2 0.0002 0.0336 1000 -0.0641 0.0673 #> from y to m        2 0.0004 0.0333 1000 -0.0705 0.0589 #> from y to y        2 0.2500 0.0303 1000  0.1983 0.3168 #>  #> $`3` #>             interval    est     se    R    2.5%  97.5% #> from x to x        3 0.3440 0.0386 1000  0.2777 0.4246 #> from x to m        3 0.6318 0.0440 1000  0.5519 0.7199 #> from x to y        3 0.2500 0.0372 1000  0.1714 0.3168 #> from m to x        3 0.0017 0.0256 1000 -0.0501 0.0510 #> from m to m        3 0.2173 0.0292 1000  0.1619 0.2746 #> from m to y        3 0.3637 0.0257 1000  0.3161 0.4152 #> from y to x        3 0.0002 0.0308 1000 -0.0608 0.0603 #> from y to m        3 0.0004 0.0347 1000 -0.0716 0.0643 #> from y to y        3 0.1251 0.0263 1000  0.0769 0.1816 #>  #> $`4` #>             interval    est     se    R    2.5%  97.5% #> from x to x        4 0.2416 0.0363 1000  0.1785 0.3180 #> from x to m        4 0.5502 0.0462 1000  0.4682 0.6440 #> from x to y        4 0.3435 0.0356 1000  0.2702 0.4128 #> from m to x        4 0.0015 0.0243 1000 -0.0474 0.0484 #> from m to m        4 0.1313 0.0303 1000  0.0709 0.1930 #> from m to y        4 0.2685 0.0248 1000  0.2244 0.3195 #> from y to x        4 0.0002 0.0253 1000 -0.0502 0.0474 #> from y to m        4 0.0004 0.0346 1000 -0.0685 0.0677 #> from y to y        4 0.0627 0.0230 1000  0.0195 0.1144 #>  #> $`5` #>             interval    est     se    R    2.5%  97.5% #> from x to x        5 0.1698 0.0329 1000  0.1133 0.2379 #> from x to m        5 0.4503 0.0462 1000  0.3704 0.5467 #> from x to y        5 0.3678 0.0349 1000  0.2988 0.4364 #> from m to x        5 0.0013 0.0223 1000 -0.0434 0.0434 #> from m to m        5 0.0796 0.0300 1000  0.0210 0.1369 #> from m to y        5 0.1866 0.0233 1000  0.1463 0.2356 #> from y to x        5 0.0001 0.0197 1000 -0.0389 0.0364 #> from y to m        5 0.0003 0.0326 1000 -0.0628 0.0622 #> from y to y        5 0.0315 0.0217 1000 -0.0109 0.0786 #>  summary(posterior) #>         effect interval           est         se    R          2.5%       97.5% #> 1  from x to x        1  0.6998727303 0.02874419 1000  0.6462889460  0.76120035 #> 2  from x to m        1  0.4974115603 0.03250287 1000  0.4312565668  0.55614672 #> 3  from x to y        1 -0.0988698131 0.03450811 1000 -0.1711966562 -0.02712031 #> 4  from m to x        1  0.0012194592 0.02357514 1000 -0.0439685485  0.04709454 #> 5  from m to m        1  0.5999037176 0.02516146 1000  0.5536716508  0.65252806 #> 6  from m to y        1  0.3996936920 0.02651733 1000  0.3449678697  0.44677024 #> 7  from y to x        1  0.0001777681 0.02783525 1000 -0.0546199903  0.05402969 #> 8  from y to m        1  0.0002811788 0.02826560 1000 -0.0580765381  0.04949608 #> 9  from y to y        1  0.4999499530 0.02963807 1000  0.4449697291  0.56041377 #> 10 from x to x        2  0.4904108359 0.03730749 1000  0.4258513857  0.57134451 #> 11 from x to m        2  0.6464960309 0.03993011 1000  0.5692932358  0.72368732 #> 12 from x to y        2  0.0801860185 0.03801436 1000  0.0009847785  0.15026121 #> 13 from m to x        2  0.0016560772 0.02641389 1000 -0.0494795914  0.05254539 #> 14 from m to m        2  0.3606034289 0.02760658 1000  0.3095212718  0.41727181 #> 15 from m to y        2  0.4394840066 0.02636912 1000  0.3858857393  0.48627914 #> 16 from y to x        2  0.0002136330 0.03364269 1000 -0.0640865510  0.06726803 #> 17 from y to m        2  0.0003976794 0.03332371 1000 -0.0704631323  0.05893837 #> 18 from y to y        2  0.2500447650 0.03032819 1000  0.1982570933  0.31680851 #> 19 from x to x        3  0.3440278007 0.03857360 1000  0.2776913328  0.42460456 #> 20 from x to m        3  0.6317939380 0.04401589 1000  0.5518899050  0.71986273 #> 21 from x to y        3  0.2500025539 0.03717269 1000  0.1714055609  0.31676480 #> 22 from m to x        3  0.0016769107 0.02556886 1000 -0.0500984600  0.05097407 #> 23 from m to m        3  0.2172746631 0.02923705 1000  0.1619015515  0.27464565 #> 24 from m to y        3  0.3636871882 0.02571009 1000  0.3160561040  0.41520826 #> 25 from y to x        3  0.0001944509 0.03081685 1000 -0.0607727843  0.06033263 #> 26 from y to m        3  0.0004151402 0.03470710 1000 -0.0716019012  0.06427715 #> 27 from y to y        3  0.1251476966 0.02629282 1000  0.0768693406  0.18158132 #> 28 from x to x        4  0.2415905656 0.03626102 1000  0.1785276878  0.31801393 #> 29 from x to m        4  0.5502092328 0.04616388 1000  0.4681848153  0.64403717 #> 30 from x to y        4  0.3434988524 0.03556656 1000  0.2702171591  0.41284703 #> 31 from m to x        4  0.0015032336 0.02425864 1000 -0.0473558863  0.04842462 #> 32 from m to m        4  0.1312802540 0.03025871 1000  0.0708716805  0.19304789 #> 33 from m to y        4  0.2685029091 0.02475842 1000  0.2244049972  0.31950472 #> 34 from y to x        4  0.0001588444 0.02533021 1000 -0.0501582507  0.04736844 #> 35 from y to m        4  0.0003809551 0.03460230 1000 -0.0685103150  0.06770409 #> 36 from y to y        4  0.0627142886 0.02300625 1000  0.0195400703  0.11438385 #> 37 from x to x        5  0.1698146696 0.03288567 1000  0.1132845507  0.23794510 #> 38 from x to m        5  0.4503390890 0.04622423 1000  0.3703691413  0.54666973 #> 39 from x to y        5  0.3677613807 0.03493623 1000  0.2987759563  0.43636824 #> 40 from m to x        5  0.0012598944 0.02229852 1000 -0.0433611977  0.04336630 #> 41 from m to m        5  0.0795787355 0.02995939 1000  0.0210226823  0.13691271 #> 42 from m to y        5  0.1865612818 0.02329773 1000  0.1462520699  0.23561585 #> 43 from y to x        5  0.0001227840 0.01970441 1000 -0.0388868541  0.03641953 #> 44 from y to m        5  0.0003251813 0.03255914 1000 -0.0628019926  0.06216046 #> 45 from y to y        5  0.0314905661 0.02165501 1000 -0.0109194883  0.07856056 confint(posterior, level = 0.95) #>         effect interval         2.5 %      97.5 % #> 1  from x to x        1  0.6462889460  0.76120035 #> 2  from x to m        1  0.4312565668  0.55614672 #> 3  from x to y        1 -0.1711966562 -0.02712031 #> 4  from x to x        2  0.4258513857  0.57134451 #> 5  from x to m        2  0.5692932358  0.72368732 #> 6  from x to y        2  0.0009847785  0.15026121 #> 7  from x to x        3  0.2776913328  0.42460456 #> 8  from x to m        3  0.5518899050  0.71986273 #> 9  from x to y        3  0.1714055609  0.31676480 #> 10 from x to x        4  0.1785276878  0.31801393 #> 11 from x to m        4  0.4681848153  0.64403717 #> 12 from x to y        4  0.2702171591  0.41284703 #> 13 from x to x        5  0.1132845507  0.23794510 #> 14 from x to m        5  0.3703691413  0.54666973 #> 15 from x to y        5  0.2987759563  0.43636824 plot(posterior)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"function generates posterior distribution indirect effect centrality specific time interval \\(\\Delta t\\) range time intervals using posterior distribution first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"","code":"PosteriorIndirectCentral(phi, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"phi List numeric matrices. element list sample posterior distribution drift matrix (\\(\\boldsymbol{\\Phi}\\)). matrix row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"PosteriorIndirectCentral\"). output list length equal length delta_t. element output list following elements: est Mean posterior distribution total, direct, indirect effects. thetahatstar Posterior distribution total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"See TotalCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorIndirectCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Distribution of the Indirect Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorIndirectCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  phi <- MCPhi(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   R = 1000L )$output  # Specific time interval ---------------------------------------------------- PosteriorIndirectCentral(   phi = phi,   delta_t = 1 ) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se    R    2.5%  97.5% #> x        1 0.0005 0.0124 1000 -0.0235 0.0247 #> m        1 0.1669 0.0191 1000  0.1314 0.2042 #> y        1 0.0003 0.0113 1000 -0.0214 0.0237 #>   # Range of time intervals --------------------------------------------------- posterior <- PosteriorIndirectCentral(   phi = phi,   delta_t = 1:5 )  # Methods ------------------------------------------------------------------- # PosteriorIndirectCentral has a number of methods including # print, summary, confint, and plot print(posterior) #>  #> Indirect Effect Centrality #>  #> $`1` #>   interval    est     se    R    2.5%  97.5% #> x        1 0.0005 0.0124 1000 -0.0235 0.0247 #> m        1 0.1669 0.0191 1000  0.1314 0.2042 #> y        1 0.0003 0.0113 1000 -0.0214 0.0237 #>  #> $`2` #>   interval    est     se    R    2.5%  97.5% #> x        2 0.0013 0.0247 1000 -0.0455 0.0512 #> m        2 0.3992 0.0385 1000  0.3314 0.4754 #> y        2 0.0011 0.0221 1000 -0.0410 0.0458 #>  #> $`3` #>   interval    est     se    R   2.5%  97.5% #> x        3 0.0016 0.0303 1000 -0.057 0.0610 #> m        3 0.5407 0.0493 1000  0.451 0.6393 #> y        3 0.0013 0.0286 1000 -0.054 0.0594 #>  #> $`4` #>   interval    est     se    R    2.5%  97.5% #> x        4 0.0013 0.0328 1000 -0.0626 0.0667 #> m        4 0.5820 0.0552 1000  0.4845 0.6998 #> y        4 0.0008 0.0359 1000 -0.0714 0.0720 #>  #> $`5` #>   interval    est     se    R    2.5%  97.5% #> x        5 0.0008 0.0343 1000 -0.0663 0.0671 #> m        5 0.5535 0.0574 1000  0.4480 0.6814 #> y        5 0.0001 0.0438 1000 -0.0882 0.0838 #>  summary(posterior) #>    variable interval          est         se    R        2.5%      97.5% #> 1         x        1 0.0004507951 0.01242586 1000 -0.02354728 0.02473774 #> 2         m        1 0.1668894334 0.01914795 1000  0.13143976 0.20418456 #> 3         y        1 0.0002975135 0.01132914 1000 -0.02143712 0.02370861 #> 4         x        2 0.0013125080 0.02473373 1000 -0.04554643 0.05121462 #> 5         m        2 0.3991842830 0.03854076 1000  0.33144383 0.47544387 #> 6         y        2 0.0011146854 0.02205393 1000 -0.04104532 0.04584212 #> 7         x        3 0.0016008752 0.03025976 1000 -0.05701816 0.06102206 #> 8         m        3 0.5406663358 0.04934585 1000  0.45097951 0.63928863 #> 9         y        3 0.0013422581 0.02858741 1000 -0.05403860 0.05939284 #> 10        x        4 0.0012853140 0.03275031 1000 -0.06258501 0.06674891 #> 11        m        4 0.5819681069 0.05518477 1000  0.48451244 0.69979200 #> 12        y        4 0.0008434217 0.03587100 1000 -0.07140727 0.07195422 #> 13        x        5 0.0007580058 0.03427459 1000 -0.06631474 0.06713390 #> 14        m        5 0.5534976425 0.05741480 1000  0.44804490 0.68141787 #> 15        y        5 0.0000608132 0.04382563 1000 -0.08818055 0.08383041 confint(posterior, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1 -0.02354728 0.02473774 #> 2         m        1  0.13143976 0.20418456 #> 3         y        1 -0.02143712 0.02370861 #> 4         x        2 -0.04554643 0.05121462 #> 5         m        2  0.33144383 0.47544387 #> 6         y        2 -0.04104532 0.04584212 #> 7         x        3 -0.05701816 0.06102206 #> 8         m        3  0.45097951 0.63928863 #> 9         y        3 -0.05403860 0.05939284 #> 10        x        4 -0.06258501 0.06674891 #> 11        m        4  0.48451244 0.69979200 #> 12        y        4 -0.07140727 0.07195422 #> 13        x        5 -0.06631474 0.06713390 #> 14        m        5  0.44804490 0.68141787 #> 15        y        5 -0.08818055 0.08383041 plot(posterior)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"function generates posterior distribution total, direct indirect effects independent variable \\(X\\) dependent variable \\(Y\\) mediator variables \\(\\mathbf{m}\\) specific time interval \\(\\Delta t\\) range time intervals using posterior distribution first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"","code":"PosteriorMed(phi, delta_t, from, to, med, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"phi List numeric matrices. element list sample posterior distribution drift matrix (\\(\\boldsymbol{\\Phi}\\)). matrix row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). Character string. Name independent variable \\(X\\) phi. Character string. Name dependent variable \\(Y\\) phi. med Character vector. Name/s mediator variable/s phi. ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"PosteriorMed\"). output list length equal length delta_t. element output list following elements: est Mean posterior distribution total, direct, indirect effects. thetahatstar Posterior distribution total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"See Total(), Direct(), Indirect() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorMed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Distribution of Total, Direct, and Indirect Effects of X on Y Through M Over a Specific Time Interval or a Range of Time Intervals — PosteriorMed","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  phi <- MCPhi(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   R = 1000L )$output  # Specific time interval ---------------------------------------------------- PosteriorMed(   phi = phi,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se    R    2.5%   97.5% #> total           1 -0.0987 0.0343 1000 -0.1701 -0.0300 #> direct          1 -0.2641 0.0446 1000 -0.3502 -0.1702 #> indirect        1  0.1653 0.0193 1000  0.1286  0.2053 #>   # Range of time intervals --------------------------------------------------- posterior <- PosteriorMed(   phi = phi,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" )  # Methods ------------------------------------------------------------------- # PosteriorMed has a number of methods including # print, summary, confint, and plot print(posterior) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se    R    2.5%   97.5% #> total           1 -0.0987 0.0343 1000 -0.1701 -0.0300 #> direct          1 -0.2641 0.0446 1000 -0.3502 -0.1702 #> indirect        1  0.1653 0.0193 1000  0.1286  0.2053 #>  #> $`2` #>          interval     est     se    R    2.5%   97.5% #> total           2  0.0785 0.0393 1000  0.0000  0.1517 #> direct          2 -0.3180 0.0535 1000 -0.4308 -0.2088 #> indirect        2  0.3964 0.0390 1000  0.3195  0.4767 #>  #> $`3` #>          interval     est     se    R    2.5%   97.5% #> total           3  0.2477 0.0384 1000  0.1714  0.3179 #> direct          3 -0.2903 0.0517 1000 -0.4047 -0.1909 #> indirect        3  0.5380 0.0498 1000  0.4431  0.6380 #>  #> $`4` #>          interval     est     se    R    2.5%   97.5% #> total           4  0.3418 0.0360 1000  0.2754  0.4139 #> direct          4 -0.2381 0.0468 1000 -0.3407 -0.1511 #> indirect        4  0.5799 0.0557 1000  0.4771  0.6990 #>  #> $`5` #>          interval     est     se    R    2.5%   97.5% #> total           5  0.3672 0.0345 1000  0.3061  0.4371 #> direct          5 -0.1849 0.0412 1000 -0.2781 -0.1139 #> indirect        5  0.5522 0.0585 1000  0.4486  0.6830 #>  summary(posterior) #>      effect interval         est         se    R          2.5%       97.5% #> 1     total        1 -0.09874978 0.03427846 1000 -1.700557e-01 -0.03002761 #> 2    direct        1 -0.26407276 0.04455356 1000 -3.502412e-01 -0.17021325 #> 3  indirect        1  0.16532298 0.01933558 1000  1.286486e-01  0.20525832 #> 4     total        2  0.07845305 0.03927390 1000  2.223319e-05  0.15171207 #> 5    direct        2 -0.31798223 0.05351151 1000 -4.307985e-01 -0.20877122 #> 6  indirect        2  0.39643528 0.03904472 1000  3.195414e-01  0.47673554 #> 7     total        3  0.24765137 0.03839409 1000  1.714414e-01  0.31791498 #> 8    direct        3 -0.29031802 0.05167949 1000 -4.047201e-01 -0.19085616 #> 9  indirect        3  0.53796940 0.04982119 1000  4.430896e-01  0.63799533 #> 10    total        4  0.34181243 0.03596326 1000  2.754323e-01  0.41387188 #> 11   direct        4 -0.23809561 0.04681167 1000 -3.407235e-01 -0.15107266 #> 12 indirect        4  0.57990804 0.05574685 1000  4.771289e-01  0.69903936 #> 13    total        5  0.36723237 0.03449657 1000  3.061464e-01  0.43714997 #> 14   direct        5 -0.18492755 0.04120676 1000 -2.780756e-01 -0.11385791 #> 15 indirect        5  0.55215992 0.05846350 1000  4.485900e-01  0.68301642 confint(posterior, level = 0.95) #>      effect interval         2.5 %      97.5 % #> 1     total        1 -1.700557e-01 -0.03002761 #> 2    direct        1 -3.502412e-01 -0.17021325 #> 3  indirect        1  1.286486e-01  0.20525832 #> 4     total        2  2.223319e-05  0.15171207 #> 5    direct        2 -4.307985e-01 -0.20877122 #> 6  indirect        2  3.195414e-01  0.47673554 #> 7     total        3  1.714414e-01  0.31791498 #> 8    direct        3 -4.047201e-01 -0.19085616 #> 9  indirect        3  4.430896e-01  0.63799533 #> 10    total        4  2.754323e-01  0.41387188 #> 11   direct        4 -3.407235e-01 -0.15107266 #> 12 indirect        4  4.771289e-01  0.69903936 #> 13    total        5  3.061464e-01  0.43714997 #> 14   direct        5 -2.780756e-01 -0.11385791 #> 15 indirect        5  4.485900e-01  0.68301642 plot(posterior)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorPhi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","title":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","text":"function extracts posterior samples drift matrix fitted model ctsem::ctStanFit() function.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorPhi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","text":"","code":"PosteriorPhi(object)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorPhi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","text":"object Object class ctStanFit. Output ctsem::ctStanFit() function.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorPhi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","text":"Returns object class ctmedposteriorphi list drift matrices sampled posterior distribution.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorPhi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract the Posterior Samples of the Drift Matrix — PosteriorPhi","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"function generates posterior distribution total effect centrality specific time interval \\(\\Delta t\\) range time intervals using posterior distribution first-order stochastic differential equation model drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"","code":"PosteriorTotalCentral(phi, delta_t, ncores = NULL)"},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"phi List numeric matrices. element list sample posterior distribution drift matrix (\\(\\boldsymbol{\\Phi}\\)). matrix row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)). ncores Positive integer. Number cores use. ncores = NULL, use single core. Consider using multiple cores number replications R large value.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"Returns object class ctmedmc list following elements: call Function call. args Function arguments. fun Function used (\"PosteriorTotalCentral\"). output list length equal length delta_t. element output list following elements: est Mean posterior distribution total, direct, indirect effects. thetahatstar Posterior distribution total, direct, indirect effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"See TotalCentral() details.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/PosteriorTotalCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Distribution of the Total Effect Centrality Over a Specific Time Interval or a Range of Time Intervals — PosteriorTotalCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  phi <- MCPhi(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   R = 1000L )$output  # Specific time interval ---------------------------------------------------- PosteriorTotalCentral(   phi = phi,   delta_t = 1 ) #>  #> Total Effect Centrality #>  #> $`1` #>   interval     est     se    R    2.5%  97.5% #> x        1  0.4015 0.0405 1000  0.3245 0.4792 #> m        1  0.4012 0.0344 1000  0.3337 0.4671 #> y        1 -0.0008 0.0377 1000 -0.0769 0.0709 #>   # Range of time intervals --------------------------------------------------- posterior <- PosteriorTotalCentral(   phi = phi,   delta_t = 1:5 )  # Methods ------------------------------------------------------------------- # PosteriorTotalCentral has a number of methods including # print, summary, confint, and plot print(posterior) #>  #> Total Effect Centrality #>  #> $`1` #>   interval     est     se    R    2.5%  97.5% #> x        1  0.4015 0.0405 1000  0.3245 0.4792 #> m        1  0.4012 0.0344 1000  0.3337 0.4671 #> y        1 -0.0008 0.0377 1000 -0.0769 0.0709 #>  #> $`2` #>   interval     est     se    R    2.5%  97.5% #> x        2  0.7324 0.0551 1000  0.6262 0.8409 #> m        2  0.4407 0.0354 1000  0.3704 0.5103 #> y        2 -0.0013 0.0530 1000 -0.1125 0.0991 #>  #> $`3` #>   interval     est     se    R    2.5%  97.5% #> x        3  0.8893 0.0631 1000  0.7726 1.0196 #> m        3  0.3649 0.0363 1000  0.2950 0.4353 #> y        3 -0.0013 0.0569 1000 -0.1200 0.1088 #>  #> $`4` #>   interval     est     se    R    2.5%  97.5% #> x        4  0.9022 0.0685 1000  0.7800 1.0496 #> m        4  0.2698 0.0369 1000  0.1995 0.3464 #> y        4 -0.0010 0.0541 1000 -0.1158 0.1052 #>  #> $`5` #>   interval     est     se    R    2.5%  97.5% #> x        5  0.8270 0.0717 1000  0.7048 0.9929 #> m        5  0.1877 0.0366 1000  0.1184 0.2615 #> y        5 -0.0007 0.0478 1000 -0.0988 0.0918 #>  summary(posterior) #>    variable interval           est         se    R        2.5%      97.5% #> 1         x        1  0.4014562037 0.04052495 1000  0.32445284 0.47922103 #> 2         m        1  0.4012244046 0.03443133 1000  0.33370383 0.46712540 #> 3         y        1 -0.0008203336 0.03765242 1000 -0.07688940 0.07089804 #> 4         x        2  0.7324245835 0.05505442 1000  0.62624950 0.84093970 #> 5         m        2  0.4406701830 0.03540174 1000  0.37040218 0.51033223 #> 6         y        2 -0.0013019510 0.05298059 1000 -0.11254750 0.09907918 #> 7         x        3  0.8893415961 0.06313169 1000  0.77255766 1.01961211 #> 8         m        3  0.3649210827 0.03627488 1000  0.29499602 0.43533267 #> 9         y        3 -0.0012750227 0.05685432 1000 -0.12004014 0.10877113 #> 10        x        4  0.9022245384 0.06851288 1000  0.78002861 1.04956920 #> 11        m        4  0.2697789697 0.03692757 1000  0.19946317 0.34639856 #> 12        y        4 -0.0010186825 0.05408487 1000 -0.11577926 0.10520064 #> 13        x        5  0.8269720110 0.07165792 1000  0.70477096 0.99288511 #> 14        m        5  0.1877401459 0.03657884 1000  0.11840317 0.26153242 #> 15        y        5 -0.0006808998 0.04782257 1000 -0.09879213 0.09180511 confint(posterior, level = 0.95) #>    variable interval       2.5 %     97.5 % #> 1         x        1  0.32445284 0.47922103 #> 2         m        1  0.33370383 0.46712540 #> 3         y        1 -0.07688940 0.07089804 #> 4         x        2  0.62624950 0.84093970 #> 5         m        2  0.37040218 0.51033223 #> 6         y        2 -0.11254750 0.09907918 #> 7         x        3  0.77255766 1.01961211 #> 8         m        3  0.29499602 0.43533267 #> 9         y        3 -0.12004014 0.10877113 #> 10        x        4  0.78002861 1.04956920 #> 11        m        4  0.19946317 0.34639856 #> 12        y        4 -0.11577926 0.10520064 #> 13        x        5  0.70477096 0.99288511 #> 14        m        5  0.11840317 0.26153242 #> 15        y        5 -0.09879213 0.09180511 plot(posterior)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Effect Matrix Over a Specific Time Interval — Total","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"function computes total effects matrix specific time interval \\(\\Delta t\\) using first-order stochastic differential equation model's drift matrix \\(\\boldsymbol{\\Phi}\\).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"","code":"Total(phi, delta_t)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Numeric. Time interval (\\(\\Delta t\\)).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"Returns object class ctmedeffect list following elements: call Function call. args Function arguments. fun Function used (\"Total\"). output matrix total effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"total effect matrix specific time interval \\(\\Delta t\\) given $$     \\mathrm{Total}_{\\Delta t}     =     \\exp     \\left(       \\Delta t       \\boldsymbol{\\Phi}     \\right)   $$ \\(\\boldsymbol{\\Phi}\\) denotes drift matrix, \\(\\Delta t\\) time interval.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"linear-stochastic-differential-equation-model","dir":"Reference","previous_headings":"","what":"Linear Stochastic Differential Equation Model","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\iota}\\) term unobserved constant time, \\(\\boldsymbol{\\Phi}\\) drift matrix represents rate change solution absence random fluctuations, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Total.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total Effect Matrix Over a Specific Time Interval — Total","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") delta_t <- 1 Total(   phi = phi,   delta_t = delta_t ) #>         x      m      y #> x  0.6998 0.0000 0.0000 #> m  0.5000 0.5999 0.0000 #> y -0.1000 0.3998 0.5001 phi <- matrix(   data = c(     -6, 5.5, 0, 0,     1.25, -2.5, 5.9, -7.3,     0, 0, -6, 2.5,     5, 0, 0, -6   ),   nrow = 4 ) colnames(phi) <- rownames(phi) <- paste0(\"y\", 1:4) Total(   phi = phi,   delta_t = delta_t ) #>         y1      y2      y3      y4 #> y1 -0.0200  0.0284 -0.0214 -0.0493 #> y2 -0.0625 -0.0598  0.0252 -0.0117 #> y3 -0.0138 -0.0670  0.0566  0.0595 #> y4  0.0469  0.0767 -0.0310 -0.0171"},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Effect Centrality — TotalCentral","title":"Total Effect Centrality — TotalCentral","text":"Total Effect Centrality","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Effect Centrality — TotalCentral","text":"","code":"TotalCentral(phi, delta_t)"},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total Effect Centrality — TotalCentral","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. delta_t Vector positive numbers. Time interval (\\(\\Delta t\\)).","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total Effect Centrality — TotalCentral","text":"Returns object class ctmedmed list following elements: call Function call. args Function arguments. fun Function used (\"TotalCentral\"). output matrix total effect centrality.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total Effect Centrality — TotalCentral","text":"total effect centrality variable sum total effects variable variables particular time interval.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Total Effect Centrality — TotalCentral","text":"Bollen, K. . (1987). Total, direct, indirect effects structural equation models. Sociological Methodology, 17, 37. doi:10.2307/271028 Deboeck, P. R., & Preacher, K. J. (2015). need discrete: method continuous time mediation analysis. Structural Equation Modeling: Multidisciplinary Journal, 23 (1), 61–75. doi:10.1080/10705511.2014.973960 Ryan, O., & Hamaker, E. L. (2021). Time intervene: continuous-time approach network analysis centrality. Psychometrika, 87 (1), 214–252. doi:10.1007/s11336-021-09767-0","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total Effect Centrality — TotalCentral","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/TotalCentral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total Effect Centrality — TotalCentral","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Specific time interval ---------------------------------------------------- TotalCentral(   phi = phi,   delta_t = 1 ) #>  #> Total Effect Centrality #>  #>      interval   x      m y #> [1,]        1 0.4 0.3998 0  # Range of time intervals --------------------------------------------------- total_central <- TotalCentral(   phi = phi,   delta_t = 1:30 ) plot(total_central)   # Methods ------------------------------------------------------------------- # TotalCentral has a number of methods including # print, summary, and plot total_central <- TotalCentral(   phi = phi,   delta_t = 1:5 ) print(total_central) #>  #> Total Effect Centrality #>  #>      interval      x      m y #> [1,]        1 0.4000 0.3998 0 #> [2,]        2 0.7298 0.4398 0 #> [3,]        3 0.8855 0.3638 0 #> [4,]        4 0.8970 0.2683 0 #> [5,]        5 0.8204 0.1859 0 summary(total_central) #>      interval      x      m y #> [1,]        1 0.4000 0.3998 0 #> [2,]        2 0.7298 0.4398 0 #> [3,]        3 0.8855 0.3638 0 #> [4,]        4 0.8970 0.2683 0 #> [5,]        5 0.8204 0.1859 0 plot(total_central)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Trajectories of Variables — Trajectory","title":"Simulate Trajectories of Variables — Trajectory","text":"function simulates trajectories variables without measurement error process noise. Total corresponds total effect Direct corresponds portion total effect indirect effect removed.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Trajectories of Variables — Trajectory","text":"","code":"Trajectory(mu0, time, phi, med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/Trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Trajectories of Variables — Trajectory","text":"mu0 Numeric vector. Initial values variables. time Positive integer. Number time points. phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). phi row column names pertaining variables system. med Character vector. Name/s mediator variable/s phi.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/Trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Trajectories of Variables — Trajectory","text":"Returns object class ctmedtraj list following elements: call Function call. args Function arguments. fun Function used (\"Trajectory\"). output data frame simulated data.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/Trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Trajectories of Variables — Trajectory","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  traj <- Trajectory(   mu0 = c(3, 3, -3),   time = 150,   phi = phi,   med = \"m\" ) plot(traj)     # Methods ------------------------------------------------------------------- # Trajectory has a number of methods including # print, summary, and plot  traj <- Trajectory(   mu0 = c(3, 3, -3),   time = 25,   phi = phi,   med = \"m\" ) print(traj) #>    time       y1        y2          y3   effect #> 1   0.0 3.000000 3.0000000 -3.00000000    total #> 2   0.1 2.894789 3.0720294 -2.71331237    total #> 3   0.2 2.793268 3.1327033 -2.43666332    total #> 4   0.3 2.695307 3.1828597 -2.17030792    total #> 5   0.4 2.600782 3.2232855 -1.91442143    total #> 6   0.5 2.509572 3.2547189 -1.66910840    total #> 7   0.6 2.421561 3.2778528 -1.43441085    total #> 8   0.7 2.336636 3.2933366 -1.21031580    total #> 9   0.8 2.254690 3.3017795 -0.99676204    total #> 10  0.9 2.175617 3.3037519 -0.79364635    total #> 11  1.0 2.099317 3.2997885 -0.60082904    total #> 12  1.1 2.025694 3.2903896 -0.41813908    total #> 13  1.2 1.954652 3.2760236 -0.24537862    total #> 14  1.3 1.886102 3.2571286 -0.08232717    total #> 15  1.4 1.819956 3.2341140  0.07125470    total #> 16  1.5 1.756130 3.2073626  0.21562200    total #> 17  1.6 1.694542 3.1772318  0.35104230    total #> 18  1.7 1.635114 3.1440552  0.47779306    total #> 19  1.8 1.577770 3.1081440  0.59615920    total #> 20  1.9 1.522437 3.0697883  0.70643095    total #> 21  2.0 1.469045 3.0292583  0.80890195    total #> 22  2.1 1.417525 2.9868056  0.90386756    total #> 23  2.2 1.367812 2.9426643  0.99162335    total #> 24  2.3 1.319842 2.8970518  1.07246380    total #> 25  2.4 1.273555 2.8501701  1.14668113    total #> 26  0.0 3.000000 3.0000000 -3.00000000   direct #> 27  0.1 2.894789 2.8505509 -2.92724153   direct #> 28  0.2 2.793268 2.7085469 -2.85486193   direct #> 29  0.3 2.695307 2.5736170 -2.78299339   direct #> 30  0.4 2.600782 2.4454088 -2.71175371   direct #> 31  0.5 2.509572 2.3235874 -2.64124750   direct #> 32  0.6 2.421561 2.2078348 -2.57156720   direct #> 33  0.7 2.336636 2.0978485 -2.50279409   direct #> 34  0.8 2.254690 1.9933413 -2.43499924   direct #> 35  0.9 2.175617 1.8940403 -2.36824433   direct #> 36  1.0 2.099317 1.7996862 -2.30258245   direct #> 37  1.1 2.025694 1.7100324 -2.23805882   direct #> 38  1.2 1.954652 1.6248448 -2.17471149   direct #> 39  1.3 1.886102 1.5439009 -2.11257197   direct #> 40  1.4 1.819956 1.4669894 -2.05166577   direct #> 41  1.5 1.756130 1.3939094 -1.99201297   direct #> 42  1.6 1.694542 1.3244699 -1.93362870   direct #> 43  1.7 1.635114 1.2584896 -1.87652362   direct #> 44  1.8 1.577770 1.1957963 -1.82070431   direct #> 45  1.9 1.522437 1.1362261 -1.76617367   direct #> 46  2.0 1.469045 1.0796234 -1.71293131   direct #> 47  2.1 1.417525 1.0258405 -1.66097382   direct #> 48  2.2 1.367812 0.9747369 -1.61029513   direct #> 49  2.3 1.319842 0.9261790 -1.56088678   direct #> 50  2.4 1.273555 0.8800402 -1.51273817   direct #> 51  0.0 3.000000 3.0000000 -3.00000000 indirect #> 52  0.1 2.894789 3.0720294 -2.58521101 indirect #> 53  0.2 2.793268 3.1327033 -2.19352996 indirect #> 54  0.3 2.695307 3.1828597 -1.82417931 indirect #> 55  0.4 2.600782 3.2232855 -1.47637642 indirect #> 56  0.5 2.509572 3.2547189 -1.14933736 indirect #> 57  0.6 2.421561 3.2778528 -0.84228031 indirect #> 58  0.7 2.336636 3.2933366 -0.55442860 indirect #> 59  0.8 2.254690 3.3017795 -0.28501322 indirect #> 60  0.9 2.175617 3.3037519 -0.03327518 indirect #> 61  1.0 2.099317 3.2997885  0.20153262 indirect #> 62  1.1 2.025694 3.2903896  0.42014365 indirect #> 63  1.2 1.954652 3.2760236  0.62327638 indirect #> 64  1.3 1.886102 3.2571286  0.81163307 indirect #> 65  1.4 1.819956 3.2341140  0.98589878 indirect #> 66  1.5 1.756130 3.2073626  1.14674061 indirect #> 67  1.6 1.694542 3.1772318  1.29480700 indirect #> 68  1.7 1.635114 3.1440552  1.43072731 indirect #> 69  1.8 1.577770 3.1081440  1.55511147 indirect #> 70  1.9 1.522437 3.0697883  1.66854971 indirect #> 71  2.0 1.469045 3.0292583  1.77161245 indirect #> 72  2.1 1.417525 2.9868056  1.86485031 indirect #> 73  2.2 1.367812 2.9426643  1.94879411 indirect #> 74  2.3 1.319842 2.8970518  2.02395503 indirect #> 75  2.4 1.273555 2.8501701  2.09082478 indirect summary(traj) #>    time       y1        y2          y3   effect #> 1   0.0 3.000000 3.0000000 -3.00000000    total #> 2   0.1 2.894789 3.0720294 -2.71331237    total #> 3   0.2 2.793268 3.1327033 -2.43666332    total #> 4   0.3 2.695307 3.1828597 -2.17030792    total #> 5   0.4 2.600782 3.2232855 -1.91442143    total #> 6   0.5 2.509572 3.2547189 -1.66910840    total #> 7   0.6 2.421561 3.2778528 -1.43441085    total #> 8   0.7 2.336636 3.2933366 -1.21031580    total #> 9   0.8 2.254690 3.3017795 -0.99676204    total #> 10  0.9 2.175617 3.3037519 -0.79364635    total #> 11  1.0 2.099317 3.2997885 -0.60082904    total #> 12  1.1 2.025694 3.2903896 -0.41813908    total #> 13  1.2 1.954652 3.2760236 -0.24537862    total #> 14  1.3 1.886102 3.2571286 -0.08232717    total #> 15  1.4 1.819956 3.2341140  0.07125470    total #> 16  1.5 1.756130 3.2073626  0.21562200    total #> 17  1.6 1.694542 3.1772318  0.35104230    total #> 18  1.7 1.635114 3.1440552  0.47779306    total #> 19  1.8 1.577770 3.1081440  0.59615920    total #> 20  1.9 1.522437 3.0697883  0.70643095    total #> 21  2.0 1.469045 3.0292583  0.80890195    total #> 22  2.1 1.417525 2.9868056  0.90386756    total #> 23  2.2 1.367812 2.9426643  0.99162335    total #> 24  2.3 1.319842 2.8970518  1.07246380    total #> 25  2.4 1.273555 2.8501701  1.14668113    total #> 26  0.0 3.000000 3.0000000 -3.00000000   direct #> 27  0.1 2.894789 2.8505509 -2.92724153   direct #> 28  0.2 2.793268 2.7085469 -2.85486193   direct #> 29  0.3 2.695307 2.5736170 -2.78299339   direct #> 30  0.4 2.600782 2.4454088 -2.71175371   direct #> 31  0.5 2.509572 2.3235874 -2.64124750   direct #> 32  0.6 2.421561 2.2078348 -2.57156720   direct #> 33  0.7 2.336636 2.0978485 -2.50279409   direct #> 34  0.8 2.254690 1.9933413 -2.43499924   direct #> 35  0.9 2.175617 1.8940403 -2.36824433   direct #> 36  1.0 2.099317 1.7996862 -2.30258245   direct #> 37  1.1 2.025694 1.7100324 -2.23805882   direct #> 38  1.2 1.954652 1.6248448 -2.17471149   direct #> 39  1.3 1.886102 1.5439009 -2.11257197   direct #> 40  1.4 1.819956 1.4669894 -2.05166577   direct #> 41  1.5 1.756130 1.3939094 -1.99201297   direct #> 42  1.6 1.694542 1.3244699 -1.93362870   direct #> 43  1.7 1.635114 1.2584896 -1.87652362   direct #> 44  1.8 1.577770 1.1957963 -1.82070431   direct #> 45  1.9 1.522437 1.1362261 -1.76617367   direct #> 46  2.0 1.469045 1.0796234 -1.71293131   direct #> 47  2.1 1.417525 1.0258405 -1.66097382   direct #> 48  2.2 1.367812 0.9747369 -1.61029513   direct #> 49  2.3 1.319842 0.9261790 -1.56088678   direct #> 50  2.4 1.273555 0.8800402 -1.51273817   direct #> 51  0.0 3.000000 3.0000000 -3.00000000 indirect #> 52  0.1 2.894789 3.0720294 -2.58521101 indirect #> 53  0.2 2.793268 3.1327033 -2.19352996 indirect #> 54  0.3 2.695307 3.1828597 -1.82417931 indirect #> 55  0.4 2.600782 3.2232855 -1.47637642 indirect #> 56  0.5 2.509572 3.2547189 -1.14933736 indirect #> 57  0.6 2.421561 3.2778528 -0.84228031 indirect #> 58  0.7 2.336636 3.2933366 -0.55442860 indirect #> 59  0.8 2.254690 3.3017795 -0.28501322 indirect #> 60  0.9 2.175617 3.3037519 -0.03327518 indirect #> 61  1.0 2.099317 3.2997885  0.20153262 indirect #> 62  1.1 2.025694 3.2903896  0.42014365 indirect #> 63  1.2 1.954652 3.2760236  0.62327638 indirect #> 64  1.3 1.886102 3.2571286  0.81163307 indirect #> 65  1.4 1.819956 3.2341140  0.98589878 indirect #> 66  1.5 1.756130 3.2073626  1.14674061 indirect #> 67  1.6 1.694542 3.1772318  1.29480700 indirect #> 68  1.7 1.635114 3.1440552  1.43072731 indirect #> 69  1.8 1.577770 3.1081440  1.55511147 indirect #> 70  1.9 1.522437 3.0697883  1.66854971 indirect #> 71  2.0 1.469045 3.0292583  1.77161245 indirect #> 72  2.1 1.417525 2.9868056  1.86485031 indirect #> 73  2.2 1.367812 2.9426643  1.94879411 indirect #> 74  2.3 1.319842 2.8970518  2.02395503 indirect #> 75  2.4 1.273555 2.8501701  2.09082478 indirect plot(traj)"},{"path":"https://github.com/jeksterslab/cTMed/reference/cTMed-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cTMed: Continuous Time Mediation — cTMed-package","title":"cTMed: Continuous Time Mediation — cTMed-package","text":"Calculates standard errors confidence intervals effects continuous-time mediation models. package extends work Deboeck Preacher (2015) doi:10.1080/10705511.2014.973960  Ryan Hamaker (2021) doi:10.1007/s11336-021-09767-0  providing methods generate standard errors confidence intervals total, direct, indirect effects models.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/cTMed/reference/cTMed-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cTMed: Continuous Time Mediation — cTMed-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Method Confidence Intervals — confint.ctmeddelta","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"Delta Method Confidence Intervals","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"","code":"# S3 method for class 'ctmeddelta' confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"object Object class ctmeddelta. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"Returns data frame confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmeddelta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Method Confidence Intervals — confint.ctmeddelta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) confint(delta, level = 0.95) #>     effect interval      2.5 %      97.5 % #> 1    total        1 -0.1644839 -0.03559285 #> 2   direct        1 -0.3529963 -0.18191145 #> 3 indirect        1  0.1293350  0.20549601  # Range of time intervals --------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) confint(delta, level = 0.95) #>      effect interval        2.5 %      97.5 % #> 1     total        1 -0.164483903 -0.03559285 #> 2    direct        1 -0.352996324 -0.18191145 #> 3  indirect        1  0.129335016  0.20549601 #> 4     total        2  0.007411056  0.15239055 #> 5    direct        2 -0.421309236 -0.22049777 #> 6  indirect        2  0.324556004  0.47705260 #> 7     total        3  0.179160303  0.32246735 #> 8    direct        3 -0.386558557 -0.19632665 #> 9  indirect        3  0.445644109  0.63886875 #> 10    total        4  0.276342831  0.41351299 #> 11   direct        4 -0.322251508 -0.15252853 #> 12 indirect        4  0.474898266  0.68973759 #> 13    total        5  0.302246977  0.43626060 #> 14   direct        5 -0.256561662 -0.10912777 #> 15 indirect        5  0.440278497  0.66391851"},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"Monte Carlo Method Confidence Intervals","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"","code":"# S3 method for class 'ctmedmc' confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"object Object class ctmedmc. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"Returns data frame confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/confint.ctmedmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Method Confidence Intervals — confint.ctmedmc","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) confint(mc, level = 0.95) #>     effect interval      2.5 %      97.5 % #> 1    total        1 -0.1666356 -0.04401672 #> 2   direct        1 -0.3567261 -0.18628781 #> 3 indirect        1  0.1272750  0.20061066  # Range of time intervals --------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) confint(mc, level = 0.95) #>      effect interval       2.5 %     97.5 % #> 1     total        1 -0.16476025 -0.0320114 #> 2    direct        1 -0.33969758 -0.1737522 #> 3  indirect        1  0.12388402  0.1982442 #> 4     total        2  0.01098553  0.1541882 #> 5    direct        2 -0.41779752 -0.2098965 #> 6  indirect        2  0.30898862  0.4662702 #> 7     total        3  0.18841270  0.3099660 #> 8    direct        3 -0.38632534 -0.1918376 #> 9  indirect        3  0.43511469  0.6285914 #> 10    total        4  0.28231133  0.3989232 #> 11   direct        4 -0.32719487 -0.1538166 #> 12 indirect        4  0.46682812  0.6888180 #> 13    total        5  0.30907920  0.4401860 #> 14   direct        5 -0.26357998 -0.1131929 #> 15 indirect        5  0.44035670  0.6682153"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"Plot Method Object Class ctmeddelta","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"","code":"# S3 method for class 'ctmeddelta' plot(x, alpha = 0.05, col = NULL, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"x Object class ctmeddelta. alpha Numeric. Significance level col Character vector. Optional argument. Character vector colors. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"Displays plots point estimates confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmeddelta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for an Object of Class ctmeddelta — plot.ctmeddelta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Range of time intervals --------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) plot(delta)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"Plot Method Object Class ctmedmc","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"","code":"# S3 method for class 'ctmedmc' plot(x, alpha = 0.05, col = NULL, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"x Object class ctmedmc. alpha Numeric. Significance level col Character vector. Optional argument. Character vector colors. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"Displays plots point estimates confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for an Object of Class ctmedmc — plot.ctmedmc","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Range of time intervals --------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) plot(mc)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"Plot Method Object Class ctmedmed","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"","code":"# S3 method for class 'ctmedmed' plot(x, col = NULL, legend_pos = \"topright\", ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"x Object class ctmedmed. col Character vector. Optional argument. Character vector colors. legend_pos Character vector. Optional argument. Legend position. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"Displays plots point estimates confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedmed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for an Object of Class ctmedmed — plot.ctmedmed","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Range of time intervals --------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) plot(med)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"Plot Method Object Class ctmedtraj","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"","code":"# S3 method for class 'ctmedtraj' plot(x, legend_pos = \"topright\", total = TRUE, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"x Object class ctmedtraj. legend_pos Character vector. Optional argument. Legend position. total Logical. total = TRUE, include total effect trajectory. total = FALSE, exclude total effect trajectory. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"Displays trajectory plots effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/plot.ctmedtraj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for an Object of Class ctmedtraj — plot.ctmedtraj","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  traj <- Trajectory(   mu0 = c(3, 3, -3),   time = 150,   phi = phi,   med = \"m\" )  plot(traj)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"Print Method Object Class ctmeddelta","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"","code":"# S3 method for class 'ctmeddelta' print(x, alpha = 0.05, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"x object class ctmeddelta. alpha Numeric vector. Significance level \\(\\alpha\\). digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"Prints list matrices time intervals, estimates, standard errors, test statistics, p-values, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmeddelta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmeddelta — print.ctmeddelta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) print(delta) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se       z      p    2.5%   97.5% #> total           1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> direct          1 -0.2675 0.0436 -6.1280 0.0000 -0.3530 -0.1819 #> indirect        1  0.1674 0.0194  8.6167 0.0000  0.1293  0.2055 #>   # Range of time intervals --------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) print(delta) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se       z      p    2.5%   97.5% #> total           1 -0.1000 0.0329 -3.0424 0.0023 -0.1645 -0.0356 #> direct          1 -0.2675 0.0436 -6.1280 0.0000 -0.3530 -0.1819 #> indirect        1  0.1674 0.0194  8.6167 0.0000  0.1293  0.2055 #>  #> $`2` #>          interval     est     se       z      p    2.5%   97.5% #> total           2  0.0799 0.0370  2.1603 0.0307  0.0074  0.1524 #> direct          2 -0.3209 0.0512 -6.2642 0.0000 -0.4213 -0.2205 #> indirect        2  0.4008 0.0389 10.3027 0.0000  0.3246  0.4771 #>  #> $`3` #>          interval     est     se       z p    2.5%   97.5% #> total           3  0.2508 0.0366  6.8606 0  0.1792  0.3225 #> direct          3 -0.2914 0.0485 -6.0055 0 -0.3866 -0.1963 #> indirect        3  0.5423 0.0493 11.0007 0  0.4456  0.6389 #>  #> $`4` #>          interval     est     se       z p    2.5%   97.5% #> total           4  0.3449 0.0350  9.8570 0  0.2763  0.4135 #> direct          4 -0.2374 0.0433 -5.4828 0 -0.3223 -0.1525 #> indirect        4  0.5823 0.0548 10.6249 0  0.4749  0.6897 #>  #> $`5` #>          interval     est     se       z p    2.5%   97.5% #> total           5  0.3693 0.0342 10.8008 0  0.3022  0.4363 #> direct          5 -0.1828 0.0376 -4.8614 0 -0.2566 -0.1091 #> indirect        5  0.5521 0.0571  9.6771 0  0.4403  0.6639 #>"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"Print Method Object Class ctmedeffect","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"","code":"# S3 method for class 'ctmedeffect' print(x, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"x object class ctmedeffect. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"Prints effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedeffect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmedeffect — print.ctmedeffect","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") delta_t <- 1  # Time Interval of One -----------------------------------------------------  ## Total Effect ------------------------------------------------------------ total_dt <- Total(   phi = phi,   delta_t = delta_t ) print(total_dt) #>         x      m      y #> x  0.6998 0.0000 0.0000 #> m  0.5000 0.5999 0.0000 #> y -0.1000 0.3998 0.5001  ## Direct Effect ----------------------------------------------------------- direct_dt <- Direct(   phi = phi,   delta_t = delta_t,   from = \"x\",   to = \"y\",   med = \"m\" ) print(direct_dt) #> [1] -0.2675  ## Indirect Effect --------------------------------------------------------- indirect_dt <- Indirect(   phi = phi,   delta_t = delta_t,   from = \"x\",   to = \"y\",   med = \"m\" ) print(indirect_dt) #> [1] 0.1674"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmedmc — print.ctmedmc","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"Print Method Object Class ctmedmc","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"","code":"# S3 method for class 'ctmedmc' print(x, alpha = 0.05, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"x object class ctmedmc. alpha Numeric vector. Significance level \\(\\alpha\\). digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"Prints list matrices time intervals, estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmedmc — print.ctmedmc","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) print(mc) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se   R    2.5%   97.5% #> total           1 -0.1000 0.0342 100 -0.1666 -0.0440 #> direct          1 -0.2675 0.0440 100 -0.3567 -0.1863 #> indirect        1  0.1674 0.0201 100  0.1273  0.2006 #>   # Range of time intervals --------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) print(mc) #>  #> Total, Direct, and Indirect Effects #>  #> $`1` #>          interval     est     se   R    2.5%   97.5% #> total           1 -0.1000 0.0340 100 -0.1648 -0.0320 #> direct          1 -0.2675 0.0471 100 -0.3397 -0.1738 #> indirect        1  0.1674 0.0201 100  0.1239  0.1982 #>  #> $`2` #>          interval     est     se   R    2.5%   97.5% #> total           2  0.0799 0.0352 100  0.0110  0.1542 #> direct          2 -0.3209 0.0555 100 -0.4178 -0.2099 #> indirect        2  0.4008 0.0413 100  0.3090  0.4663 #>  #> $`3` #>          interval     est     se   R    2.5%   97.5% #> total           3  0.2508 0.0337 100  0.1884  0.3100 #> direct          3 -0.2914 0.0524 100 -0.3863 -0.1918 #> indirect        3  0.5423 0.0523 100  0.4351  0.6286 #>  #> $`4` #>          interval     est     se   R    2.5%   97.5% #> total           4  0.3449 0.0324 100  0.2823  0.3989 #> direct          4 -0.2374 0.0464 100 -0.3272 -0.1538 #> indirect        4  0.5823 0.0575 100  0.4668  0.6888 #>  #> $`5` #>          interval     est     se   R    2.5%   97.5% #> total           5  0.3693 0.0325 100  0.3091  0.4402 #> direct          5 -0.1828 0.0402 100 -0.2636 -0.1132 #> indirect        5  0.5521 0.0594 100  0.4404  0.6682 #>"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"Print Method Object Class ctmedmcphi","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"","code":"# S3 method for class 'ctmedmcphi' print(x, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"x object class ctmedmcphi. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"Prints list drift matrices.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmcphi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmedmcphi — print.ctmedmcphi","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") mc <- MCPhi(   phi = phi,   vcov_phi_vec = 0.1 * diag(9),   R = 100L # use a large value for R in actual research ) print(mc) #> [[1]] #>         x       m       y #> x -0.3295  0.2220 -0.2679 #> m  0.7555 -0.8565  0.0091 #> y -0.4690  1.5626 -0.7618 #>  #> [[2]] #>         x       m       y #> x -0.3830  0.0943 -0.4144 #> m  0.9453 -0.4066 -0.3812 #> y -0.1887  0.7553 -0.8437 #>  #> [[3]] #>         x       m      y #> x -0.1077 -0.0344  0.001 #> m  0.4363 -0.7873 -0.033 #> y -0.9239  0.9293 -0.606 #>  #> [[4]] #>         x       m       y #> x -0.7750  0.1073 -0.1698 #> m  1.2028 -0.5626 -0.0798 #> y  0.0148  0.6496 -0.5988 #>  #> [[5]] #>         x       m       y #> x -1.0155  0.2169 -0.4148 #> m  0.8304 -0.3326 -0.1625 #> y -0.0059  0.3293 -0.4056 #>  #> [[6]] #>         x       m       y #> x -0.5023 -0.3002  0.2227 #> m  0.5239 -0.0857  0.3440 #> y -0.0757  0.5680 -0.9511 #>  #> [[7]] #>         x       m       y #> x -0.1279 -0.4010 -0.1586 #> m  0.7976 -0.4652 -0.6030 #> y -0.3153  0.3125 -0.7378 #>  #> [[8]] #>         x       m       y #> x -0.6284  0.2739 -0.1972 #> m  0.4140 -0.7338  0.1835 #> y -0.1817  0.6000 -0.6670 #>  #> [[9]] #>         x       m       y #> x -0.3203 -0.4097 -0.1738 #> m  1.0749 -0.4948  0.2990 #> y -0.4625  0.9025 -0.8753 #>  #> [[10]] #>         x       m       y #> x -0.4946 -0.6680  0.8914 #> m  0.4559 -0.7414 -0.3237 #> y  0.0138  0.7617 -0.7599 #>  #> [[11]] #>         x       m       y #> x -0.3574 -0.3296 -0.3109 #> m  0.9960 -1.0598  0.0318 #> y -0.6253  0.8023 -0.3250 #>  #> [[12]] #>         x       m       y #> x -0.2388  0.1046  0.1173 #> m  0.5637 -0.5110 -0.0937 #> y -0.4943  0.3738 -0.8324 #>  #> [[13]] #>         x       m       y #> x -0.4017 -0.1042 -0.1136 #> m  0.4225 -1.0385 -0.7173 #> y -0.2042  0.4482 -0.7084 #>  #> [[14]] #>         x       m       y #> x -0.5168 -0.1229  0.2009 #> m  0.4649 -0.5269  0.1268 #> y -0.4530  0.6824 -1.1855 #>  #> [[15]] #>         x       m       y #> x -0.4401  0.1808 -0.1407 #> m  0.5675 -0.7721 -0.0552 #> y  0.0013 -0.1627 -0.8033 #>  #> [[16]] #>         x      m       y #> x -0.7018 -0.287 -0.4060 #> m  0.4014 -0.926 -0.6191 #> y -0.4522  1.042 -0.9174 #>  #> [[17]] #>         x       m       y #> x -0.2428 -0.1850  0.3692 #> m  0.1528 -0.5686 -0.1734 #> y -0.1697  0.4695 -0.5461 #>  #> [[18]] #>         x       m       y #> x -0.8570 -0.0544 -0.0911 #> m  1.4080 -0.4738 -1.0594 #> y  0.0874  0.8196 -0.4478 #>  #> [[19]] #>         x       m       y #> x -0.4047 -0.2895  0.1201 #> m  0.7085 -0.7802  0.3837 #> y  0.3360  0.2906 -0.3345 #>  #> [[20]] #>         x       m       y #> x -0.1396 -0.0238 -0.1357 #> m  0.3961 -0.4810  0.0038 #> y  0.1203  0.4805 -0.1099 #>  #> [[21]] #>         x       m       y #> x -0.5919  0.0691 -0.0411 #> m  0.7065 -0.8078 -0.0403 #> y -0.7677  0.9824 -0.9226 #>  #> [[22]] #>         x       m       y #> x -0.3922 -0.0144 -0.1370 #> m  0.5602 -0.4864 -0.6544 #> y -0.7721  0.4842 -0.0734 #>  #> [[23]] #>         x       m       y #> x -0.0552 -0.2630 -0.2973 #> m  1.6914 -0.6528 -0.0127 #> y -0.4832  0.2784 -0.6221 #>  #> [[24]] #>         x       m       y #> x -0.4761 -0.1023  0.0572 #> m  1.0788 -0.6270 -0.1512 #> y -1.0433  0.8290 -1.1084 #>  #> [[25]] #>         x       m       y #> x -0.5386  0.3221  0.0621 #> m  0.4560 -0.7578  0.2615 #> y -0.5445 -0.2587 -0.8716 #>  #> [[26]] #>         x       m       y #> x -0.8226 -0.0375  0.1275 #> m  0.9053 -0.3728 -0.0042 #> y -0.1520  0.6408 -0.3339 #>  #> [[27]] #>         x       m       y #> x -0.3714 -0.2501  0.0273 #> m  0.3441 -0.5902  0.4339 #> y -0.1173  0.6587 -0.6179 #>  #> [[28]] #>         x       m       y #> x -0.2288  0.1370  0.0740 #> m  0.6924 -0.8384 -0.6592 #> y -0.6282  0.4929 -0.9160 #>  #> [[29]] #>         x       m       y #> x -0.9407  0.4237  0.1673 #> m  1.0778 -0.5615 -0.1271 #> y -0.1173  0.1810 -0.3245 #>  #> [[30]] #>         x       m       y #> x -0.4081  0.0028  0.0232 #> m  0.4974 -0.4713 -0.4130 #> y -0.4946  0.2607 -0.5754 #>  #> [[31]] #>         x       m       y #> x -0.1392 -0.4151  0.1329 #> m  0.4121 -0.3814 -0.0712 #> y -0.8051  0.4695 -0.5703 #>  #> [[32]] #>         x       m       y #> x -1.0668 -0.3412 -0.0488 #> m  1.5288 -0.5792 -0.6432 #> y -0.0236  0.6782 -0.9510 #>  #> [[33]] #>         x       m       y #> x -0.6313  0.1458  0.5649 #> m  1.0035 -1.0179 -0.0652 #> y -0.7079  0.5710 -0.9275 #>  #> [[34]] #>         x       m       y #> x -0.5981  0.5447  0.2370 #> m  0.5518 -0.8220  0.1444 #> y -0.2837  0.7441 -0.8026 #>  #> [[35]] #>         x       m       y #> x -0.3760 -0.6159 -0.1619 #> m  0.7455 -0.4486  0.3184 #> y -0.5399  0.8208 -0.9259 #>  #> [[36]] #>         x       m       y #> x -0.8211  0.3333  0.5403 #> m  0.4818 -0.6742  0.1147 #> y -0.4575  1.0438 -0.6069 #>  #> [[37]] #>         x       m       y #> x -0.0438 -0.1913 -0.2189 #> m  1.0121 -1.0879  0.4560 #> y -0.7420  0.9661 -0.4182 #>  #> [[38]] #>         x       m       y #> x -0.6305  0.0519 -0.3075 #> m  0.2891 -0.8919 -0.1079 #> y -0.5822  0.8868 -0.8725 #>  #> [[39]] #>         x       m       y #> x -0.9969  0.6508 -0.2677 #> m  0.4777 -0.5442 -0.0148 #> y -0.8395  0.8875 -1.0651 #>  #> [[40]] #>         x       m       y #> x -0.4153 -0.3777  0.0552 #> m  0.6768 -0.7006 -0.3646 #> y -0.5796  0.6035 -0.3262 #>  #> [[41]] #>         x       m       y #> x -0.4109 -0.2373 -0.0544 #> m  0.5736 -0.9596 -0.2123 #> y -0.3284  1.0132 -0.3790 #>  #> [[42]] #>         x       m       y #> x -0.1467 -0.3364 -0.4359 #> m  0.2769 -0.4348  0.0457 #> y -0.5458  0.6445 -0.6675 #>  #> [[43]] #>         x       m       y #> x -0.3225  0.0097  0.4471 #> m  0.2850 -0.5174  0.2141 #> y -1.0253  1.4949 -0.8394 #>  #> [[44]] #>         x       m       y #> x -0.7559 -0.1536  0.4511 #> m  0.9942 -0.9598  0.5648 #> y -0.4914  0.5642 -1.0631 #>  #> [[45]] #>         x       m       y #> x -0.1769  0.0374 -0.4160 #> m  0.9637 -0.4728 -0.2756 #> y -0.6885  0.3754 -0.5568 #>  #> [[46]] #>         x       m       y #> x -0.3169 -0.1641  0.0323 #> m  1.2726 -0.4854  0.2306 #> y -0.9982  0.6590 -0.7262 #>  #> [[47]] #>         x       m       y #> x -0.5678  0.2690  0.0708 #> m  0.4662 -0.5777  0.0837 #> y -0.5875  0.0619 -0.9957 #>  #> [[48]] #>         x       m       y #> x -0.9053 -0.4573 -0.0542 #> m  0.6444 -0.5776 -0.2122 #> y -0.0040  0.9637 -0.3440 #>  #> [[49]] #>         x       m       y #> x -0.3641  0.2027  0.0351 #> m  0.7360 -0.7475 -0.3221 #> y -0.4191  0.3433 -1.0359 #>  #> [[50]] #>         x       m       y #> x -0.1074 -0.1336 -0.3040 #> m  1.0164 -0.4057 -0.1125 #> y -0.5545  1.0478 -1.0712 #>  #> [[51]] #>         x       m       y #> x -0.3634 -0.0708 -0.3003 #> m  0.9753 -0.7200  1.1534 #> y -0.4025  0.9655 -0.8761 #>  #> [[52]] #>         x       m       y #> x -0.4116  0.1819  0.0896 #> m  0.2703 -0.4336  0.1018 #> y -0.5597  0.6048 -0.6692 #>  #> [[53]] #>         x       m       y #> x -0.9718 -0.1154 -0.1710 #> m  1.2792 -0.6169 -0.1020 #> y -0.5817  0.8355 -0.3922 #>  #> [[54]] #>         x       m       y #> x -0.3671 -0.0507  0.2011 #> m  0.4971 -0.9741 -0.2671 #> y -0.3027  1.1691 -0.6000 #>  #> [[55]] #>         x       m       y #> x -0.9081 -0.2732 -0.1377 #> m  0.7826 -0.2509  0.0539 #> y -0.4285  0.7691 -0.6318 #>  #> [[56]] #>         x       m       y #> x -0.6330 -0.1352  0.4032 #> m  1.3981 -0.4071 -0.4848 #> y -0.0628  0.8709 -0.6484 #>  #> [[57]] #>         x       m       y #> x -0.5716 -0.2904 -0.9815 #> m  0.6002 -0.5104  0.3351 #> y -0.5145  0.9666 -0.5926 #>  #> [[58]] #>         x       m       y #> x -0.0853 -0.1908  0.5859 #> m -0.0739 -0.7610 -0.2784 #> y -1.0674  0.6428 -0.8445 #>  #> [[59]] #>         x       m       y #> x -0.3777  0.0656  0.1128 #> m  0.8989 -0.5156 -0.4871 #> y -0.4501  0.3930 -0.4726 #>  #> [[60]] #>         x       m       y #> x -1.1444  0.2666 -0.0877 #> m  0.2862 -0.3202 -0.2117 #> y -0.5150  1.3012 -0.5467 #>  #> [[61]] #>         x       m       y #> x -0.5269  0.0676 -0.0710 #> m  0.7264 -1.0256  0.0231 #> y -0.0178  0.4719 -0.4232 #>  #> [[62]] #>         x       m       y #> x -0.2998 -0.1015  0.1827 #> m  0.4915 -0.6801  0.3549 #> y -0.0945  0.9665 -0.9195 #>  #> [[63]] #>         x       m       y #> x -0.0936 -0.1392  0.3097 #> m  1.0521 -0.4798 -0.4324 #> y -0.5027  0.6471 -0.7498 #>  #> [[64]] #>         x       m       y #> x -0.6689 -0.0929 -0.2490 #> m  1.0424 -0.1300  0.1806 #> y -0.9117  1.0659 -1.1202 #>  #> [[65]] #>         x       m       y #> x -0.4898 -0.1196  0.4541 #> m  0.6970 -0.1351 -0.3419 #> y -0.3528  0.1951 -0.7034 #>  #> [[66]] #>         x       m       y #> x -0.2360 -0.0164 -0.3757 #> m  0.9830 -0.6066 -0.2857 #> y -0.1591  0.7775 -1.0288 #>  #> [[67]] #>         x       m       y #> x -0.6339  0.0342  0.0401 #> m  0.8270 -1.0489  0.4998 #> y  0.0652  0.5969 -0.5418 #>  #> [[68]] #>         x       m       y #> x -0.5422 -0.0616  0.0014 #> m  0.6718 -0.3817  0.4155 #> y -0.7427  0.3234 -0.9757 #>  #> [[69]] #>         x       m       y #> x -0.0403 -0.0506 -0.5266 #> m  0.7176 -0.8780 -0.1823 #> y -0.4755  1.0920 -0.7177 #>  #> [[70]] #>         x       m       y #> x -0.4184  0.0873  0.2936 #> m  0.5819 -0.5672 -0.2931 #> y -0.5228  0.6846 -1.1257 #>  #> [[71]] #>         x       m       y #> x -0.6265  0.2090 -0.1042 #> m  0.7528 -0.9778  0.0057 #> y -0.5539  0.7630 -0.0298 #>  #> [[72]] #>         x       m       y #> x -0.3142 -0.4175 -0.3436 #> m  0.6047 -0.6731  0.4674 #> y -0.0897  0.5923 -1.0471 #>  #> [[73]] #>         x       m       y #> x -0.7625 -0.1079 -0.1096 #> m  0.5141 -0.8554  0.3487 #> y -0.6520  0.6899 -1.4064 #>  #> [[74]] #>         x       m       y #> x -0.3623 -0.2808 -0.0804 #> m  0.8808 -0.4030  0.1781 #> y -0.6301  0.8759 -1.0519 #>  #> [[75]] #>         x       m       y #> x -0.5995 -0.4198 -0.5094 #> m  0.6576 -0.2874  0.3968 #> y -0.2405  0.7774 -0.6126 #>  #> [[76]] #>         x       m       y #> x -0.2502  0.0400 -0.2393 #> m  1.0703 -0.0552 -0.2317 #> y -0.2040  0.5293 -0.4795 #>  #> [[77]] #>         x       m       y #> x -0.3583  0.4105 -0.3260 #> m  0.4468 -0.7572 -0.4285 #> y  0.0135  0.4630 -0.4630 #>  #> [[78]] #>         x       m       y #> x -0.6778  0.0109 -0.5704 #> m  0.8244 -0.3219 -0.1490 #> y -0.5195  0.4863 -1.0459 #>  #> [[79]] #>         x       m       y #> x -0.1261 -0.2689  0.1719 #> m  1.2347 -0.8141 -0.5353 #> y -0.5857  1.1799 -0.7561 #>  #> [[80]] #>         x       m       y #> x -0.2520 -0.4989  0.4904 #> m  0.5242 -0.4786 -0.2059 #> y -0.3187  0.9093 -0.7219 #>  #> [[81]] #>         x       m       y #> x -0.4483  0.5324 -0.0998 #> m  0.1837 -0.3331  0.2339 #> y -0.3454  0.9350 -1.0312 #>  #> [[82]] #>         x       m       y #> x -0.4740  0.4396 -0.0832 #> m  0.6544 -0.7612  0.3754 #> y -0.2096  0.5643 -0.9836 #>  #> [[83]] #>         x       m       y #> x -0.8703 -0.2334  0.4392 #> m  1.4877 -0.6639 -0.1450 #> y -0.2625  0.8243 -0.8017 #>  #> [[84]] #>         x       m       y #> x -0.1962 -0.3202  0.0654 #> m  1.3910 -0.3775 -0.3593 #> y -0.5640  0.3310 -0.3806 #>  #> [[85]] #>         x       m       y #> x -0.3905 -0.2777 -0.3170 #> m  0.3367 -0.6976  0.0301 #> y  0.6498  0.8609 -0.6813 #>  #> [[86]] #>         x       m       y #> x -0.6248 -0.4520  0.2134 #> m  0.8028 -0.2845  0.0879 #> y -0.9383  0.9861 -0.6502 #>  #> [[87]] #>         x       m       y #> x -0.1593 -0.5304 -0.0042 #> m  0.9188 -0.6926 -0.0764 #> y -0.2094  0.5743 -0.4895 #>  #> [[88]] #>         x       m       y #> x -0.4309 -0.1042 -0.0629 #> m  0.7116 -0.6306  0.1055 #> y -0.4704  0.3523 -0.9833 #>  #> [[89]] #>         x       m       y #> x -0.1073  0.0902  0.3519 #> m  0.0455 -0.5125  0.2619 #> y -0.4501  0.8671 -0.6955 #>  #> [[90]] #>         x       m       y #> x -0.1855 -0.1612 -0.1172 #> m  0.9788 -0.8409 -0.3104 #> y -0.5546  0.6565 -0.6502 #>  #> [[91]] #>         x       m       y #> x -0.2742 -0.0278 -0.0435 #> m  0.3944 -0.2534 -0.2422 #> y  0.6082  0.6999 -0.5411 #>  #> [[92]] #>         x       m       y #> x -0.8169  0.2507  0.1256 #> m  0.2168 -0.8083  0.4825 #> y  0.0757  0.5949 -0.5242 #>  #> [[93]] #>         x       m       y #> x -0.3167  0.0613 -0.1022 #> m  0.6812 -0.6474 -0.5121 #> y -0.3802  0.8593 -0.4606 #>  #> [[94]] #>         x       m       y #> x -0.4927  0.0970  0.1964 #> m  0.6259 -0.5075  0.2843 #> y -0.2871  0.1613 -1.0010 #>  #> [[95]] #>         x       m       y #> x -0.2908 -0.0831 -0.3284 #> m  0.7124 -0.3808  0.0491 #> y -0.4735  0.7616 -0.4224 #>  #> [[96]] #>         x       m       y #> x -0.2382 -0.0210  0.2435 #> m  0.8107 -0.9013  0.0443 #> y -0.5787  0.8863 -1.0013 #>  #> [[97]] #>         x       m       y #> x -0.3714 -0.2303 -0.3200 #> m  1.2856 -0.9282  0.2868 #> y -0.1415  1.1378 -0.8186 #>  #> [[98]] #>         x       m       y #> x -0.2475 -0.4155  0.3497 #> m  0.6953 -0.4973  0.1498 #> y -0.3532  0.7291 -0.4281 #>  #> [[99]] #>         x       m       y #> x -0.2293 -0.2961  0.2112 #> m  0.6084 -0.7606  0.1396 #> y -0.7304  0.3160 -0.4800 #>  #> [[100]] #>         x       m       y #> x -0.5496 -0.0348  0.0700 #> m  0.9226 -0.5533 -0.0088 #> y -0.5031  0.8429 -0.5873 #>"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmedmed — print.ctmedmed","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"Print Method Object Class ctmedmed","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"","code":"# S3 method for class 'ctmedmed' print(x, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"x object class ctmedmed. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"Prints matrix effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedmed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmedmed — print.ctmedmed","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Specific time interval ---------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) print(med) #>  #> Total, Direct, and Indirect Effects #>  #>      interval total  direct indirect #> [1,]        1  -0.1 -0.2675   0.1674  # Range of time intervals --------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) print(med) #>  #> Total, Direct, and Indirect Effects #>  #>      interval   total  direct indirect #> [1,]        1 -0.1000 -0.2675   0.1674 #> [2,]        2  0.0799 -0.3209   0.4008 #> [3,]        3  0.2508 -0.2914   0.5423 #> [4,]        4  0.3449 -0.2374   0.5823 #> [5,]        5  0.3693 -0.1828   0.5521"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"Print Method Object Class ctmedtraj","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"","code":"# S3 method for class 'ctmedtraj' print(x, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"x object class ctmedtraj. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"Prints data frame simulated data.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/print.ctmedtraj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class ctmedtraj — print.ctmedtraj","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  traj <- Trajectory(   mu0 = c(3, 3, -3),   time = 150,   phi = phi,   med = \"m\" )  print(traj) #>     time         y1          y2          y3   effect #> 1    0.0 3.00000000 3.000000000 -3.00000000    total #> 2    0.1 2.89478919 3.072029427 -2.71331237    total #> 3    0.2 2.79326815 3.132703300 -2.43666332    total #> 4    0.3 2.69530747 3.182859714 -2.17030792    total #> 5    0.4 2.60078231 3.223285457 -1.91442143    total #> 6    0.5 2.50957217 3.254718908 -1.66910840    total #> 7    0.6 2.42156079 3.277852764 -1.43441085    total #> 8    0.7 2.33663600 3.293336633 -1.21031580    total #> 9    0.8 2.25468954 3.301779481 -0.99676204    total #> 10   0.9 2.17561697 3.303751945 -0.79364635    total #> 11   1.0 2.09931749 3.299788524 -0.60082904    total #> 12   1.1 2.02569386 3.290389648 -0.41813908    total #> 13   1.2 1.95465223 3.276023639 -0.24537862    total #> 14   1.3 1.88610204 3.257128562 -0.08232717    total #> 15   1.4 1.81995593 3.234113971  0.07125470    total #> 16   1.5 1.75612959 3.207362570  0.21562200    total #> 17   1.6 1.69454165 3.177231772  0.35104230    total #> 18   1.7 1.63511361 3.144055179  0.47779306    total #> 19   1.8 1.57776973 3.108143980  0.59615920    total #> 20   1.9 1.52243692 3.069788267  0.70643095    total #> 21   2.0 1.46904465 3.029258286  0.80890195    total #> 22   2.1 1.41752485 2.986805615  0.90386756    total #> 23   2.2 1.36781187 2.942664272  0.99162335    total #> 24   2.3 1.31984234 2.897051771  1.07246380    total #> 25   2.4 1.27355511 2.850170113  1.14668113    total #> 26   2.5 1.22889119 2.802206719  1.21456433    total #> 27   2.6 1.18579364 2.753335320  1.27639824    total #> 28   2.7 1.14420754 2.703716790  1.33246284    total #> 29   2.8 1.10407987 2.653499931  1.38303264    total #> 30   2.9 1.06535949 2.602822222  1.42837605    total #> 31   3.0 1.02799704 2.551810514  1.46875504    total #> 32   3.1 0.99194491 2.500581698  1.50442470    total #> 33   3.2 0.95715713 2.449243323  1.53563298    total #> 34   3.3 0.92358937 2.397894191  1.56262044    total #> 35   3.4 0.89119884 2.346624907  1.58562011    total #> 36   3.5 0.85994426 2.295518402  1.60485734    total #> 37   3.6 0.82978578 2.244650432  1.62054973    total #> 38   3.7 0.80068497 2.194090033  1.63290711    total #> 39   3.8 0.77260473 2.143899968  1.64213154    total #> 40   3.9 0.74550927 2.094137133  1.64841736    total #> 41   4.0 0.71936406 2.044852947  1.65195120    total #> 42   4.1 0.69413576 1.996093719  1.65291215    total #> 43   4.2 0.66979224 1.947900989  1.65147179    total #> 44   4.3 0.64630244 1.900311857  1.64779436    total #> 45   4.4 0.62363644 1.853359280  1.64203690    total #> 46   4.5 0.60176534 1.807072365  1.63434938    total #> 47   4.6 0.58066127 1.761476636  1.62487491    total #> 48   4.7 0.56029732 1.716594287  1.61374986    total #> 49   4.8 0.54064754 1.672444421  1.60110408    total #> 50   4.9 0.52168688 1.629043273  1.58706108    total #> 51   5.0 0.50339118 1.586404419  1.57173822    total #> 52   5.1 0.48573712 1.544538976  1.55524688    total #> 53   5.2 0.46870219 1.503455785  1.53769271    total #> 54   5.3 0.45226467 1.463161585  1.51917578    total #> 55   5.4 0.43640363 1.423661176  1.49979078    total #> 56   5.5 0.42109883 1.384957574  1.47962725    total #> 57   5.6 0.40633078 1.347052150  1.45876974    total #> 58   5.7 0.39208065 1.309944767  1.43729801    total #> 59   5.8 0.37833028 1.273633906  1.41528723    total #> 60   5.9 0.36506213 1.238116783  1.39280817    total #> 61   6.0 0.35225931 1.203389457  1.36992734    total #> 62   6.1 0.33990548 1.169446936  1.34670725    total #> 63   6.2 0.32798490 1.136283271  1.32320650    total #> 64   6.3 0.31648238 1.103891649  1.29947999    total #> 65   6.4 0.30538326 1.072264473  1.27557911    total #> 66   6.5 0.29467338 1.041393442  1.25155185    total #> 67   6.6 0.28433911 1.011269624  1.22744299    total #> 68   6.7 0.27436726 0.981883524  1.20329425    total #> 69   6.8 0.26474512 0.953225150  1.17914443    total #> 70   6.9 0.25546044 0.925284066  1.15502956    total #> 71   7.0 0.24650137 0.898049453  1.13098302    total #> 72   7.1 0.23785650 0.871510155  1.10703569    total #> 73   7.2 0.22951481 0.845654730  1.08321608    total #> 74   7.3 0.22146567 0.820471494  1.05955045    total #> 75   7.4 0.21369880 0.795948557  1.03606292    total #> 76   7.5 0.20620433 0.772073865  1.01277558    total #> 77   7.6 0.19897269 0.748835235  0.98970863    total #> 78   7.7 0.19199466 0.726220385  0.96688044    total #> 79   7.8 0.18526136 0.704216963  0.94430770    total #> 80   7.9 0.17876419 0.682812578  0.92200547    total #> 81   8.0 0.17249488 0.661994820  0.89998731    total #> 82   8.1 0.16644544 0.641751287  0.87826534    total #> 83   8.2 0.16060815 0.622069607  0.85685036    total #> 84   8.3 0.15497558 0.602937451  0.83575187    total #> 85   8.4 0.14954055 0.584342559  0.81497822    total #> 86   8.5 0.14429612 0.566272749  0.79453662    total #> 87   8.6 0.13923561 0.548715934  0.77443325    total #> 88   8.7 0.13435258 0.531660139  0.75467332    total #> 89   8.8 0.12964080 0.515093506  0.73526113    total #> 90   8.9 0.12509426 0.499004309  0.71620010    total #> 91   9.0 0.12070717 0.483380963  0.69749289    total #> 92   9.1 0.11647394 0.468212034  0.67914140    total #> 93   9.2 0.11238917 0.453486243  0.66114685    total #> 94   9.3 0.10844765 0.439192473  0.64350981    total #> 95   9.4 0.10464436 0.425319780  0.62623026    total #> 96   9.5 0.10097446 0.411857391  0.60930765    total #> 97   9.6 0.09743325 0.398794714  0.59274089    total #> 98   9.7 0.09401624 0.386121340  0.57652845    total #> 99   9.8 0.09071907 0.373827041  0.56066835    total #> 100  9.9 0.08753753 0.361901782  0.54515823    total #> 101 10.0 0.08446756 0.350335715  0.52999536    total #> 102 10.1 0.08150526 0.339119183  0.51517667    total #> 103 10.2 0.07864685 0.328242723  0.50069881    total #> 104 10.3 0.07588868 0.317697063  0.48655813    total #> 105 10.4 0.07322725 0.307473124  0.47275077    total #> 106 10.5 0.07065915 0.297562021  0.45927260    total #> 107 10.6 0.06818111 0.287955060  0.44611934    total #> 108 10.7 0.06578998 0.278643739  0.43328649    total #> 109 10.8 0.06348271 0.269619746  0.42076942    total #> 110 10.9 0.06125635 0.260874958  0.40856335    total #> 111 11.0 0.05910808 0.252401441  0.39666339    total #> 112 11.1 0.05703514 0.244191444  0.38506453    total #> 113 11.2 0.05503490 0.236237402  0.37376168    total #> 114 11.3 0.05310481 0.228531932  0.36274970    total #> 115 11.4 0.05124241 0.221067829  0.35202335    total #> 116 11.5 0.04944533 0.213838067  0.34157737    total #> 117 11.6 0.04771127 0.206835793  0.33140646    total #> 118 11.7 0.04603802 0.200054328  0.32150530    total #> 119 11.8 0.04442345 0.193487162  0.31186855    total #> 120 11.9 0.04286551 0.187127950  0.30249086    total #> 121 12.0 0.04136221 0.180970514  0.29336690    total #> 122 12.1 0.03991162 0.175008836  0.28449134    total #> 123 12.2 0.03851191 0.169237056  0.27585888    total #> 124 12.3 0.03716129 0.163649470  0.26746423    total #> 125 12.4 0.03585803 0.158240525  0.25930217    total #> 126 12.5 0.03460048 0.153004820  0.25136747    total #> 127 12.6 0.03338703 0.147937099  0.24365498    total #> 128 12.7 0.03221614 0.143032249  0.23615959    total #> 129 12.8 0.03108631 0.138285298  0.22887624    total #> 130 12.9 0.02999611 0.133691412  0.22179992    total #> 131 13.0 0.02894413 0.129245891  0.21492569    total #> 132 13.1 0.02792906 0.124944166  0.20824868    total #> 133 13.2 0.02694958 0.120781798  0.20176407    total #> 134 13.3 0.02600445 0.116754473  0.19546713    total #> 135 13.4 0.02509246 0.112858000  0.18935319    total #> 136 13.5 0.02421246 0.109088306  0.18341764    total #> 137 13.6 0.02336333 0.105441438  0.17765596    total #> 138 13.7 0.02254397 0.101913555  0.17206371    total #> 139 13.8 0.02175335 0.098500928  0.16663653    total #> 140 13.9 0.02099045 0.095199937  0.16137011    total #> 141 14.0 0.02025431 0.092007068  0.15626025    total #> 142 14.1 0.01954399 0.088918909  0.15130282    total #> 143 14.2 0.01885857 0.085932151  0.14649376    total #> 144 14.3 0.01819720 0.083043581  0.14182911    total #> 145 14.4 0.01755902 0.080250081  0.13730497    total #> 146 14.5 0.01694322 0.077548630  0.13291753    total #> 147 14.6 0.01634901 0.074936293  0.12866307    total #> 148 14.7 0.01577565 0.072410225  0.12453793    total #> 149 14.8 0.01522239 0.069967667  0.12053854    total #> 150 14.9 0.01468854 0.067605944  0.11666141    total #> 151  0.0 3.00000000 3.000000000 -3.00000000   direct #> 152  0.1 2.89478919 2.850550942 -2.92724153   direct #> 153  0.2 2.79326815 2.708546891 -2.85486193   direct #> 154  0.3 2.69530747 2.573616965 -2.78299339   direct #> 155  0.4 2.60078231 2.445408754 -2.71175371   direct #> 156  0.5 2.50957217 2.323587410 -2.64124750   direct #> 157  0.6 2.42156079 2.207834760 -2.57156720   direct #> 158  0.7 2.33663600 2.097848485 -2.50279409   direct #> 159  0.8 2.25468954 1.993341325 -2.43499924   direct #> 160  0.9 2.17561697 1.894040331 -2.36824433   direct #> 161  1.0 2.09931749 1.799686150 -2.30258245   direct #> 162  1.1 2.02569386 1.710032350 -2.23805882   direct #> 163  1.2 1.95465223 1.624844776 -2.17471149   direct #> 164  1.3 1.88610204 1.543900936 -2.11257197   direct #> 165  1.4 1.81995593 1.466989422 -2.05166577   direct #> 166  1.5 1.75612959 1.393909360 -1.99201297   direct #> 167  1.6 1.69454165 1.324469880 -1.93362870   direct #> 168  1.7 1.63511361 1.258489621 -1.87652362   direct #> 169  1.8 1.57776973 1.195796259 -1.82070431   direct #> 170  1.9 1.52243692 1.136226051 -1.76617367   direct #> 171  2.0 1.46904465 1.079623413 -1.71293131   direct #> 172  2.1 1.41752485 1.025840512 -1.66097382   direct #> 173  2.2 1.36781187 0.974736880 -1.61029513   direct #> 174  2.3 1.31984234 0.926179044 -1.56088678   direct #> 175  2.4 1.27355511 0.880040182 -1.51273817   direct #> 176  2.5 1.22889119 0.836199790 -1.46583677   direct #> 177  2.6 1.18579364 0.794543366 -1.42016841   direct #> 178  2.7 1.14420754 0.754962114 -1.37571741   direct #> 179  2.8 1.10407987 0.717352655 -1.33246680   direct #> 180  2.9 1.06535949 0.681616762 -1.29039849   direct #> 181  3.0 1.02799704 0.647661101 -1.24949342   direct #> 182  3.1 0.99194491 0.615396987 -1.20973168   direct #> 183  3.2 0.95715713 0.584740154 -1.17109268   direct #> 184  3.3 0.92358937 0.555610532 -1.13355523   direct #> 185  3.4 0.89119884 0.527932042 -1.09709768   direct #> 186  3.5 0.85994426 0.501632394 -1.06169799   direct #> 187  3.6 0.82978578 0.476642897 -1.02733384   direct #> 188  3.7 0.80068497 0.452898287 -0.99398270   direct #> 189  3.8 0.77260473 0.430336546 -0.96162191   direct #> 190  3.9 0.74550927 0.408898749 -0.93022875   direct #> 191  4.0 0.71936406 0.388528905 -0.89978047   direct #> 192  4.1 0.69413576 0.369173812 -0.87025439   direct #> 193  4.2 0.66979224 0.350782919 -0.84162792   direct #> 194  4.3 0.64630244 0.333308193 -0.81387861   direct #> 195  4.4 0.62363644 0.316703995 -0.78698417   direct #> 196  4.5 0.60176534 0.300926957 -0.76092256   direct #> 197  4.6 0.58066127 0.285935874 -0.73567196   direct #> 198  4.7 0.56029732 0.271691591 -0.71121081   direct #> 199  4.8 0.54064754 0.258156907 -0.68751787   direct #> 200  4.9 0.52168688 0.245296472 -0.66457219   direct #> 201  5.0 0.50339118 0.233076696 -0.64235317   direct #> 202  5.1 0.48573712 0.221465665 -0.62084055   direct #> 203  5.2 0.46870219 0.210433054 -0.60001444   direct #> 204  5.3 0.45226467 0.199950046 -0.57985530   direct #> 205  5.4 0.43640363 0.189989264 -0.56034400   direct #> 206  5.5 0.42109883 0.180524692 -0.54146176   direct #> 207  5.6 0.40633078 0.171531611 -0.52319023   direct #> 208  5.7 0.39208065 0.162986531 -0.50551144   direct #> 209  5.8 0.37833028 0.154867137 -0.48840782   direct #> 210  5.9 0.36506213 0.147152221 -0.47186219   direct #> 211  6.0 0.35225931 0.139821634 -0.45585779   direct #> 212  6.1 0.33990548 0.132856230 -0.44037825   direct #> 213  6.2 0.32798490 0.126237817 -0.42540760   direct #> 214  6.3 0.31648238 0.119949110 -0.41093027   direct #> 215  6.4 0.30538326 0.113973683 -0.39693108   direct #> 216  6.5 0.29467338 0.108295929 -0.38339525   direct #> 217  6.6 0.28433911 0.102901021 -0.37030837   direct #> 218  6.7 0.27436726 0.097774868 -0.35765642   direct #> 219  6.8 0.26474512 0.092904080 -0.34542576   direct #> 220  6.9 0.25546044 0.088275938 -0.33360311   direct #> 221  7.0 0.24650137 0.083878353 -0.32217556   direct #> 222  7.1 0.23785650 0.079699839 -0.31113057   direct #> 223  7.2 0.22951481 0.075729484 -0.30045594   direct #> 224  7.3 0.22146567 0.071956917 -0.29013982   direct #> 225  7.4 0.21369880 0.068372286 -0.28017069   direct #> 226  7.5 0.20620433 0.064966228 -0.27053738   direct #> 227  7.6 0.19897269 0.061729848 -0.26122904   direct #> 228  7.7 0.19199466 0.058654692 -0.25223512   direct #> 229  7.8 0.18526136 0.055732729 -0.24354541   direct #> 230  7.9 0.17876419 0.052956328 -0.23514999   direct #> 231  8.0 0.17249488 0.050318237 -0.22703924   direct #> 232  8.1 0.16644544 0.047811566 -0.21920383   direct #> 233  8.2 0.16060815 0.045429768 -0.21163471   direct #> 234  8.3 0.15497558 0.043166622 -0.20432312   direct #> 235  8.4 0.14954055 0.041016219 -0.19726054   direct #> 236  8.5 0.14429612 0.038972940 -0.19043875   direct #> 237  8.6 0.13923561 0.037031451 -0.18384976   direct #> 238  8.7 0.13435258 0.035186679 -0.17748584   direct #> 239  8.8 0.12964080 0.033433807 -0.17133950   direct #> 240  8.9 0.12509426 0.031768256 -0.16540348   direct #> 241  9.0 0.12070717 0.030185678 -0.15967076   direct #> 242  9.1 0.11647394 0.028681937 -0.15413453   direct #> 243  9.2 0.11238917 0.027253108 -0.14878821   direct #> 244  9.3 0.10844765 0.025895458 -0.14362542   direct #> 245  9.4 0.10464436 0.024605440 -0.13863999   direct #> 246  9.5 0.10097446 0.023379687 -0.13382595   direct #> 247  9.6 0.09743325 0.022214996 -0.12917752   direct #> 248  9.7 0.09401624 0.021108326 -0.12468910   direct #> 249  9.8 0.09071907 0.020056786 -0.12035530   direct #> 250  9.9 0.08753753 0.019057630 -0.11617086   direct #> 251 10.0 0.08446756 0.018108249 -0.11213073   direct #> 252 10.1 0.08150526 0.017206162 -0.10823002   direct #> 253 10.2 0.07864685 0.016349014 -0.10446397   direct #> 254 10.3 0.07588868 0.015534565 -0.10082802   direct #> 255 10.4 0.07322725 0.014760690 -0.09731774   direct #> 256 10.5 0.07065915 0.014025366 -0.09392883   direct #> 257 10.6 0.06818111 0.013326674 -0.09065717   direct #> 258 10.7 0.06578998 0.012662787 -0.08749874   direct #> 259 10.8 0.06348271 0.012031974 -0.08444967   direct #> 260 10.9 0.06125635 0.011432584 -0.08150623   direct #> 261 11.0 0.05910808 0.010863055 -0.07866480   direct #> 262 11.1 0.05703514 0.010321897 -0.07592187   direct #> 263 11.2 0.05503490 0.009807698 -0.07327408   direct #> 264 11.3 0.05310481 0.009319114 -0.07071816   direct #> 265 11.4 0.05124241 0.008854870 -0.06825094   direct #> 266 11.5 0.04944533 0.008413752 -0.06586939   direct #> 267 11.6 0.04771127 0.007994610 -0.06357056   direct #> 268 11.7 0.04603802 0.007596348 -0.06135159   direct #> 269 11.8 0.04442345 0.007217925 -0.05920975   direct #> 270 11.9 0.04286551 0.006858355 -0.05714236   direct #> 271 12.0 0.04136221 0.006516696 -0.05514687   direct #> 272 12.1 0.03991162 0.006192058 -0.05322079   direct #> 273 12.2 0.03851191 0.005883593 -0.05136173   direct #> 274 12.3 0.03716129 0.005590494 -0.04956737   direct #> 275 12.4 0.03585803 0.005311996 -0.04783548   direct #> 276 12.5 0.03460048 0.005047371 -0.04616389   direct #> 277 12.6 0.03338703 0.004795930 -0.04455052   direct #> 278 12.7 0.03221614 0.004557014 -0.04299336   direct #> 279 12.8 0.03108631 0.004330000 -0.04149046   direct #> 280 12.9 0.02999611 0.004114295 -0.04003993   direct #> 281 13.0 0.02894413 0.003909336 -0.03863998   direct #> 282 13.1 0.02792906 0.003714587 -0.03728883   direct #> 283 13.2 0.02694958 0.003529540 -0.03598481   direct #> 284 13.3 0.02600445 0.003353711 -0.03472626   direct #> 285 13.4 0.02509246 0.003186642 -0.03351163   direct #> 286 13.5 0.02421246 0.003027895 -0.03233938   direct #> 287 13.6 0.02336333 0.002877056 -0.03120803   direct #> 288 13.7 0.02254397 0.002733732 -0.03011618   direct #> 289 13.8 0.02175335 0.002597547 -0.02906244   direct #> 290 13.9 0.02099045 0.002468147 -0.02804549   direct #> 291 14.0 0.02025431 0.002345193 -0.02706405   direct #> 292 14.1 0.01954399 0.002228364 -0.02611689   direct #> 293 14.2 0.01885857 0.002117355 -0.02520282   direct #> 294 14.3 0.01819720 0.002011876 -0.02432068   direct #> 295 14.4 0.01755902 0.001911652 -0.02346936   direct #> 296 14.5 0.01694322 0.001816420 -0.02264779   direct #> 297 14.6 0.01634901 0.001725933 -0.02185492   direct #> 298 14.7 0.01577565 0.001639953 -0.02108978   direct #> 299 14.8 0.01522239 0.001558256 -0.02035137   direct #> 300 14.9 0.01468854 0.001480630 -0.01963879   direct #> 301  0.0 3.00000000 3.000000000 -3.00000000 indirect #> 302  0.1 2.89478919 3.072029427 -2.58521101 indirect #> 303  0.2 2.79326815 3.132703300 -2.19352996 indirect #> 304  0.3 2.69530747 3.182859714 -1.82417931 indirect #> 305  0.4 2.60078231 3.223285457 -1.47637642 indirect #> 306  0.5 2.50957217 3.254718908 -1.14933736 indirect #> 307  0.6 2.42156079 3.277852764 -0.84228031 indirect #> 308  0.7 2.33663600 3.293336633 -0.55442860 indirect #> 309  0.8 2.25468954 3.301779481 -0.28501322 indirect #> 310  0.9 2.17561697 3.303751945 -0.03327518 indirect #> 311  1.0 2.09931749 3.299788524  0.20153262 indirect #> 312  1.1 2.02569386 3.290389648  0.42014365 indirect #> 313  1.2 1.95465223 3.276023639  0.62327638 indirect #> 314  1.3 1.88610204 3.257128562  0.81163307 indirect #> 315  1.4 1.81995593 3.234113971  0.98589878 indirect #> 316  1.5 1.75612959 3.207362570  1.14674061 indirect #> 317  1.6 1.69454165 3.177231772  1.29480700 indirect #> 318  1.7 1.63511361 3.144055179  1.43072731 indirect #> 319  1.8 1.57776973 3.108143980  1.55511147 indirect #> 320  1.9 1.52243692 3.069788267  1.66854971 indirect #> 321  2.0 1.46904465 3.029258286  1.77161245 indirect #> 322  2.1 1.41752485 2.986805615  1.86485031 indirect #> 323  2.2 1.36781187 2.942664272  1.94879411 indirect #> 324  2.3 1.31984234 2.897051771  2.02395503 indirect #> 325  2.4 1.27355511 2.850170113  2.09082478 indirect #> 326  2.5 1.22889119 2.802206719  2.14987584 indirect #> 327  2.6 1.18579364 2.753335320  2.20156179 indirect #> 328  2.7 1.14420754 2.703716790  2.24631759 indirect #> 329  2.8 1.10407987 2.653499931  2.28455999 indirect #> 330  2.9 1.06535949 2.602822222  2.31668791 indirect #> 331  3.0 1.02799704 2.551810514  2.34308284 indirect #> 332  3.1 0.99194491 2.500581698  2.36410933 indirect #> 333  3.2 0.95715713 2.449243323  2.38011540 indirect #> 334  3.3 0.92358937 2.397894191  2.39143305 indirect #> 335  3.4 0.89119884 2.346624907  2.39837868 indirect #> 336  3.5 0.85994426 2.295518402  2.40125366 indirect #> 337  3.6 0.82978578 2.244650432  2.40034471 indirect #> 338  3.7 0.80068497 2.194090033  2.39592449 indirect #> 339  3.8 0.77260473 2.143899968  2.38825202 indirect #> 340  3.9 0.74550927 2.094137133  2.37757320 indirect #> 341  4.0 0.71936406 2.044852947  2.36412126 indirect #> 342  4.1 0.69413576 1.996093719  2.34811726 indirect #> 343  4.2 0.66979224 1.947900989  2.32977055 indirect #> 344  4.3 0.64630244 1.900311857  2.30927923 indirect #> 345  4.4 0.62363644 1.853359280  2.28683059 indirect #> 346  4.5 0.60176534 1.807072365  2.26260159 indirect #> 347  4.6 0.58066127 1.761476636  2.23675922 indirect #> 348  4.7 0.56029732 1.716594287  2.20946101 indirect #> 349  4.8 0.54064754 1.672444421  2.18085537 indirect #> 350  4.9 0.52168688 1.629043273  2.15108202 indirect #> 351  5.0 0.50339118 1.586404419  2.12027237 indirect #> 352  5.1 0.48573712 1.544538976  2.08854991 indirect #> 353  5.2 0.46870219 1.503455785  2.05603055 indirect #> 354  5.3 0.45226467 1.463161585  2.02282299 indirect #> 355  5.4 0.43640363 1.423661176  1.98902907 indirect #> 356  5.5 0.42109883 1.384957574  1.95474407 indirect #> 357  5.6 0.40633078 1.347052150  1.92005704 indirect #> 358  5.7 0.39208065 1.309944767  1.88505112 indirect #> 359  5.8 0.37833028 1.273633906  1.84980383 indirect #> 360  5.9 0.36506213 1.238116783  1.81438733 indirect #> 361  6.0 0.35225931 1.203389457  1.77886872 indirect #> 362  6.1 0.33990548 1.169446936  1.74331029 indirect #> 363  6.2 0.32798490 1.136283271  1.70776978 indirect #> 364  6.3 0.31648238 1.103891649  1.67230061 indirect #> 365  6.4 0.30538326 1.072264473  1.63695211 indirect #> 366  6.5 0.29467338 1.041393442  1.60176974 indirect #> 367  6.6 0.28433911 1.011269624  1.56679534 indirect #> 368  6.7 0.27436726 0.981883524  1.53206726 indirect #> 369  6.8 0.26474512 0.953225150  1.49762061 indirect #> 370  6.9 0.25546044 0.925284066  1.46348745 indirect #> 371  7.0 0.24650137 0.898049453  1.42969692 indirect #> 372  7.1 0.23785650 0.871510155  1.39627544 indirect #> 373  7.2 0.22951481 0.845654730  1.36324687 indirect #> 374  7.3 0.22146567 0.820471494  1.33063264 indirect #> 375  7.4 0.21369880 0.795948557  1.29845195 indirect #> 376  7.5 0.20620433 0.772073865  1.26672185 indirect #> 377  7.6 0.19897269 0.748835235  1.23545737 indirect #> 378  7.7 0.19199466 0.726220385  1.20467173 indirect #> 379  7.8 0.18526136 0.704216963  1.17437634 indirect #> 380  7.9 0.17876419 0.682812578  1.14458100 indirect #> 381  8.0 0.17249488 0.661994820  1.11529400 indirect #> 382  8.1 0.16644544 0.641751287  1.08652215 indirect #> 383  8.2 0.16060815 0.622069607  1.05827099 indirect #> 384  8.3 0.15497558 0.602937451  1.03054477 indirect #> 385  8.4 0.14954055 0.584342559  1.00334662 indirect #> 386  8.5 0.14429612 0.566272749  0.97667859 indirect #> 387  8.6 0.13923561 0.548715934  0.95054173 indirect #> 388  8.7 0.13435258 0.531660139  0.92493619 indirect #> 389  8.8 0.12964080 0.515093506  0.89986125 indirect #> 390  8.9 0.12509426 0.499004309  0.87531543 indirect #> 391  9.0 0.12070717 0.483380963  0.85129651 indirect #> 392  9.1 0.11647394 0.468212034  0.82780161 indirect #> 393  9.2 0.11238917 0.453486243  0.80482726 indirect #> 394  9.3 0.10844765 0.439192473  0.78236942 indirect #> 395  9.4 0.10464436 0.425319780  0.76042353 indirect #> 396  9.5 0.10097446 0.411857391  0.73898460 indirect #> 397  9.6 0.09743325 0.398794714  0.71804720 indirect #> 398  9.7 0.09401624 0.386121340  0.69760553 indirect #> 399  9.8 0.09071907 0.373827041  0.67765346 indirect #> 400  9.9 0.08753753 0.361901782  0.65818455 indirect #> 401 10.0 0.08446756 0.350335715  0.63919209 indirect #> 402 10.1 0.08150526 0.339119183  0.62066912 indirect #> 403 10.2 0.07864685 0.328242723  0.60260851 indirect #> 404 10.3 0.07588868 0.317697063  0.58500290 indirect #> 405 10.4 0.07322725 0.307473124  0.56784482 indirect #> 406 10.5 0.07065915 0.297562021  0.55112663 indirect #> 407 10.6 0.06818111 0.287955060  0.53484062 indirect #> 408 10.7 0.06578998 0.278643739  0.51897895 indirect #> 409 10.8 0.06348271 0.269619746  0.50353375 indirect #> 410 10.9 0.06125635 0.260874958  0.48849708 indirect #> 411 11.0 0.05910808 0.252401441  0.47386096 indirect #> 412 11.1 0.05703514 0.244191444  0.45961742 indirect #> 413 11.2 0.05503490 0.236237402  0.44575844 indirect #> 414 11.3 0.05310481 0.228531932  0.43227605 indirect #> 415 11.4 0.05124241 0.221067829  0.41916228 indirect #> 416 11.5 0.04944533 0.213838067  0.40640921 indirect #> 417 11.6 0.04771127 0.206835793  0.39400894 indirect #> 418 11.7 0.04603802 0.200054328  0.38195363 indirect #> 419 11.8 0.04442345 0.193487162  0.37023550 indirect #> 420 11.9 0.04286551 0.187127950  0.35884686 indirect #> 421 12.0 0.04136221 0.180970514  0.34778005 indirect #> 422 12.1 0.03991162 0.175008836  0.33702754 indirect #> 423 12.2 0.03851191 0.169237056  0.32658185 indirect #> 424 12.3 0.03716129 0.163649470  0.31643562 indirect #> 425 12.4 0.03585803 0.158240525  0.30658156 indirect #> 426 12.5 0.03460048 0.153004820  0.29701251 indirect #> 427 12.6 0.03338703 0.147937099  0.28772139 indirect #> 428 12.7 0.03221614 0.143032249  0.27870125 indirect #> 429 12.8 0.03108631 0.138285298  0.26994523 indirect #> 430 12.9 0.02999611 0.133691412  0.26144661 indirect #> 431 13.0 0.02894413 0.129245891  0.25319875 indirect #> 432 13.1 0.02792906 0.124944166  0.24519516 indirect #> 433 13.2 0.02694958 0.120781798  0.23742946 indirect #> 434 13.3 0.02600445 0.116754473  0.22989536 indirect #> 435 13.4 0.02509246 0.112858000  0.22258673 indirect #> 436 13.5 0.02421246 0.109088306  0.21549755 indirect #> 437 13.6 0.02336333 0.105441438  0.20862190 indirect #> 438 13.7 0.02254397 0.101913555  0.20195401 indirect #> 439 13.8 0.02175335 0.098500928  0.19548820 indirect #> 440 13.9 0.02099045 0.095199937  0.18921895 indirect #> 441 14.0 0.02025431 0.092007068  0.18314082 indirect #> 442 14.1 0.01954399 0.088918909  0.17724851 indirect #> 443 14.2 0.01885857 0.085932151  0.17153684 indirect #> 444 14.3 0.01819720 0.083043581  0.16600074 indirect #> 445 14.4 0.01755902 0.080250081  0.16063526 indirect #> 446 14.5 0.01694322 0.077548630  0.15543557 indirect #> 447 14.6 0.01634901 0.074936293  0.15039693 indirect #> 448 14.7 0.01577565 0.072410225  0.14551475 indirect #> 449 14.8 0.01522239 0.069967667  0.14078452 indirect #> 450 14.9 0.01468854 0.067605944  0.13620185 indirect"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"Summary Method Object Class ctmeddelta","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"","code":"# S3 method for class 'ctmeddelta' summary(object, alpha = 0.05, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"object Object class ctmeddelta. alpha Numeric vector. Significance level \\(\\alpha\\). ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"Returns data frame effects, time intervals, estimates, standard errors, test statistics, p-values, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmeddelta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class ctmeddelta — summary.ctmeddelta","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) summary(delta) #>     effect interval        est         se         z            p       2.5% #> 1    total        1 -0.1000384 0.03288098 -3.042439 2.346691e-03 -0.1644839 #> 2   direct        1 -0.2674539 0.04364490 -6.127952 8.901719e-10 -0.3529963 #> 3 indirect        1  0.1674155 0.01942918  8.616704 6.890881e-18  0.1293350 #>         97.5% #> 1 -0.03559285 #> 2 -0.18191145 #> 3  0.20549601  # Range of time intervals --------------------------------------------------- delta <- DeltaMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) summary(delta) #>      effect interval        est         se         z            p         2.5% #> 1     total        1 -0.1000384 0.03288098 -3.042439 2.346691e-03 -0.164483903 #> 2    direct        1 -0.2674539 0.04364490 -6.127952 8.901719e-10 -0.352996324 #> 3  indirect        1  0.1674155 0.01942918  8.616704 6.890881e-18  0.129335016 #> 4     total        2  0.0799008 0.03698524  2.160343 3.074615e-02  0.007411056 #> 5    direct        2 -0.3209035 0.05122836 -6.264177 3.747993e-10 -0.421309236 #> 6  indirect        2  0.4008043 0.03890291 10.302682 6.852356e-25  0.324556004 #> 7     total        3  0.2508138 0.03655859  6.860599 6.857257e-12  0.179160303 #> 8    direct        3 -0.2914426 0.04852944 -6.005480 1.907663e-09 -0.386558557 #> 9  indirect        3  0.5422564 0.04929290 11.000699 3.791795e-28  0.445644109 #> 10    total        4  0.3449279 0.03499303  9.857046 6.390162e-23  0.276342831 #> 11   direct        4 -0.2373900 0.04329747 -5.482768 4.187214e-08 -0.322251508 #> 12 indirect        4  0.5823179 0.05480696 10.624891 2.282791e-26  0.474898266 #> 13    total        5  0.3692538 0.03418778 10.800755 3.413856e-27  0.302246977 #> 14   direct        5 -0.1828447 0.03761138 -4.861420 1.165464e-06 -0.256561662 #> 15 indirect        5  0.5520985 0.05705207  9.677098 3.772724e-22  0.440278497 #>          97.5% #> 1  -0.03559285 #> 2  -0.18191145 #> 3   0.20549601 #> 4   0.15239055 #> 5  -0.22049777 #> 6   0.47705260 #> 7   0.32246735 #> 8  -0.19632665 #> 9   0.63886875 #> 10  0.41351299 #> 11 -0.15252853 #> 12  0.68973759 #> 13  0.43626060 #> 14 -0.10912777 #> 15  0.66391851"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"Summary Method Object Class ctmedmc","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"","code":"# S3 method for class 'ctmedmc' summary(object, alpha = 0.05, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"object Object class ctmedmc. alpha Numeric vector. Significance level \\(\\alpha\\). ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"Returns data frame effects, time intervals, estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class ctmedmc — summary.ctmedmc","text":"","code":"set.seed(42) phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\") vcov_phi_vec <- matrix(   data = c(     0.002704274, -0.001475275, 0.000949122,     -0.001619422, 0.000885122, -0.000569404,     0.00085493, -0.000465824, 0.000297815,     -0.001475275, 0.004428442, -0.002642303,     0.000980573, -0.00271817, 0.001618805,     -0.000586921, 0.001478421, -0.000871547,     0.000949122, -0.002642303, 0.006402668,     -0.000697798, 0.001813471, -0.004043138,     0.000463086, -0.001120949, 0.002271711,     -0.001619422, 0.000980573, -0.000697798,     0.002079286, -0.001152501, 0.000753,     -0.001528701, 0.000820587, -0.000517524,     0.000885122, -0.00271817, 0.001813471,     -0.001152501, 0.00342605, -0.002075005,     0.000899165, -0.002532849, 0.001475579,     -0.000569404, 0.001618805, -0.004043138,     0.000753, -0.002075005, 0.004984032,     -0.000622255, 0.001634917, -0.003705661,     0.00085493, -0.000586921, 0.000463086,     -0.001528701, 0.000899165, -0.000622255,     0.002060076, -0.001096684, 0.000686386,     -0.000465824, 0.001478421, -0.001120949,     0.000820587, -0.002532849, 0.001634917,     -0.001096684, 0.003328692, -0.001926088,     0.000297815, -0.000871547, 0.002271711,     -0.000517524, 0.001475579, -0.003705661,     0.000686386, -0.001926088, 0.004726235   ),   nrow = 9 )  # Specific time interval ---------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) summary(mc) #>     effect interval        est         se   R       2.5%       97.5% #> 1    total        1 -0.1000384 0.03423846 100 -0.1666356 -0.04401672 #> 2   direct        1 -0.2674539 0.04395758 100 -0.3567261 -0.18628781 #> 3 indirect        1  0.1674155 0.02013482 100  0.1272750  0.20061066  # Range of time intervals --------------------------------------------------- mc <- MCMed(   phi = phi,   vcov_phi_vec = vcov_phi_vec,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\",   R = 100L # use a large value for R in actual research ) summary(mc) #>      effect interval        est         se   R        2.5%      97.5% #> 1     total        1 -0.1000384 0.03395899 100 -0.16476025 -0.0320114 #> 2    direct        1 -0.2674539 0.04709743 100 -0.33969758 -0.1737522 #> 3  indirect        1  0.1674155 0.02007626 100  0.12388402  0.1982442 #> 4     total        2  0.0799008 0.03520320 100  0.01098553  0.1541882 #> 5    direct        2 -0.3209035 0.05552653 100 -0.41779752 -0.2098965 #> 6  indirect        2  0.4008043 0.04125368 100  0.30898862  0.4662702 #> 7     total        3  0.2508138 0.03368900 100  0.18841270  0.3099660 #> 8    direct        3 -0.2914426 0.05239901 100 -0.38632534 -0.1918376 #> 9  indirect        3  0.5422564 0.05233930 100  0.43511469  0.6285914 #> 10    total        4  0.3449279 0.03244313 100  0.28231133  0.3989232 #> 11   direct        4 -0.2373900 0.04644744 100 -0.32719487 -0.1538166 #> 12 indirect        4  0.5823179 0.05746986 100  0.46682812  0.6888180 #> 13    total        5  0.3692538 0.03254938 100  0.30907920  0.4401860 #> 14   direct        5 -0.1828447 0.04019984 100 -0.26357998 -0.1131929 #> 15 indirect        5  0.5520985 0.05939646 100  0.44035670  0.6682153"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"Summary Method Object Class ctmedmed","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"","code":"# S3 method for class 'ctmedmed' summary(object, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"object object class ctmedmed. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"Returns matrix effects.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedmed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class ctmedmed — summary.ctmedmed","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  # Specific time interval ---------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1,   from = \"x\",   to = \"y\",   med = \"m\" ) summary(med) #>      interval total  direct indirect #> [1,]        1  -0.1 -0.2675   0.1674  # Range of time intervals --------------------------------------------------- med <- Med(   phi = phi,   delta_t = 1:5,   from = \"x\",   to = \"y\",   med = \"m\" ) summary(med) #>      interval   total  direct indirect #> [1,]        1 -0.1000 -0.2675   0.1674 #> [2,]        2  0.0799 -0.3209   0.4008 #> [3,]        3  0.2508 -0.2914   0.5423 #> [4,]        4  0.3449 -0.2374   0.5823 #> [5,]        5  0.3693 -0.1828   0.5521"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedposteriorphi.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","title":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","text":"Summary Method Object Class ctmedposteriorphi","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedposteriorphi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","text":"","code":"# S3 method for class 'ctmedposteriorphi' summary(object, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedposteriorphi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","text":"object object class ctmedposteriorphi. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedposteriorphi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","text":"Returns list posterior means (matrix form) covariance matrix.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedposteriorphi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for Object of Class ctmedposteriorphi — summary.ctmedposteriorphi","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"Summary Method Object Class ctmedtraj","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"","code":"# S3 method for class 'ctmedtraj' summary(object, ...)"},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"object object class ctmedtraj. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"Returns data frame simulated data.","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/cTMed/reference/summary.ctmedtraj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class ctmedtraj — summary.ctmedtraj","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) colnames(phi) <- rownames(phi) <- c(\"x\", \"m\", \"y\")  traj <- Trajectory(   mu0 = c(3, 3, -3),   time = 150,   phi = phi,   med = \"m\" )  summary(traj) #>     time         y1          y2          y3   effect #> 1    0.0 3.00000000 3.000000000 -3.00000000    total #> 2    0.1 2.89478919 3.072029427 -2.71331237    total #> 3    0.2 2.79326815 3.132703300 -2.43666332    total #> 4    0.3 2.69530747 3.182859714 -2.17030792    total #> 5    0.4 2.60078231 3.223285457 -1.91442143    total #> 6    0.5 2.50957217 3.254718908 -1.66910840    total #> 7    0.6 2.42156079 3.277852764 -1.43441085    total #> 8    0.7 2.33663600 3.293336633 -1.21031580    total #> 9    0.8 2.25468954 3.301779481 -0.99676204    total #> 10   0.9 2.17561697 3.303751945 -0.79364635    total #> 11   1.0 2.09931749 3.299788524 -0.60082904    total #> 12   1.1 2.02569386 3.290389648 -0.41813908    total #> 13   1.2 1.95465223 3.276023639 -0.24537862    total #> 14   1.3 1.88610204 3.257128562 -0.08232717    total #> 15   1.4 1.81995593 3.234113971  0.07125470    total #> 16   1.5 1.75612959 3.207362570  0.21562200    total #> 17   1.6 1.69454165 3.177231772  0.35104230    total #> 18   1.7 1.63511361 3.144055179  0.47779306    total #> 19   1.8 1.57776973 3.108143980  0.59615920    total #> 20   1.9 1.52243692 3.069788267  0.70643095    total #> 21   2.0 1.46904465 3.029258286  0.80890195    total #> 22   2.1 1.41752485 2.986805615  0.90386756    total #> 23   2.2 1.36781187 2.942664272  0.99162335    total #> 24   2.3 1.31984234 2.897051771  1.07246380    total #> 25   2.4 1.27355511 2.850170113  1.14668113    total #> 26   2.5 1.22889119 2.802206719  1.21456433    total #> 27   2.6 1.18579364 2.753335320  1.27639824    total #> 28   2.7 1.14420754 2.703716790  1.33246284    total #> 29   2.8 1.10407987 2.653499931  1.38303264    total #> 30   2.9 1.06535949 2.602822222  1.42837605    total #> 31   3.0 1.02799704 2.551810514  1.46875504    total #> 32   3.1 0.99194491 2.500581698  1.50442470    total #> 33   3.2 0.95715713 2.449243323  1.53563298    total #> 34   3.3 0.92358937 2.397894191  1.56262044    total #> 35   3.4 0.89119884 2.346624907  1.58562011    total #> 36   3.5 0.85994426 2.295518402  1.60485734    total #> 37   3.6 0.82978578 2.244650432  1.62054973    total #> 38   3.7 0.80068497 2.194090033  1.63290711    total #> 39   3.8 0.77260473 2.143899968  1.64213154    total #> 40   3.9 0.74550927 2.094137133  1.64841736    total #> 41   4.0 0.71936406 2.044852947  1.65195120    total #> 42   4.1 0.69413576 1.996093719  1.65291215    total #> 43   4.2 0.66979224 1.947900989  1.65147179    total #> 44   4.3 0.64630244 1.900311857  1.64779436    total #> 45   4.4 0.62363644 1.853359280  1.64203690    total #> 46   4.5 0.60176534 1.807072365  1.63434938    total #> 47   4.6 0.58066127 1.761476636  1.62487491    total #> 48   4.7 0.56029732 1.716594287  1.61374986    total #> 49   4.8 0.54064754 1.672444421  1.60110408    total #> 50   4.9 0.52168688 1.629043273  1.58706108    total #> 51   5.0 0.50339118 1.586404419  1.57173822    total #> 52   5.1 0.48573712 1.544538976  1.55524688    total #> 53   5.2 0.46870219 1.503455785  1.53769271    total #> 54   5.3 0.45226467 1.463161585  1.51917578    total #> 55   5.4 0.43640363 1.423661176  1.49979078    total #> 56   5.5 0.42109883 1.384957574  1.47962725    total #> 57   5.6 0.40633078 1.347052150  1.45876974    total #> 58   5.7 0.39208065 1.309944767  1.43729801    total #> 59   5.8 0.37833028 1.273633906  1.41528723    total #> 60   5.9 0.36506213 1.238116783  1.39280817    total #> 61   6.0 0.35225931 1.203389457  1.36992734    total #> 62   6.1 0.33990548 1.169446936  1.34670725    total #> 63   6.2 0.32798490 1.136283271  1.32320650    total #> 64   6.3 0.31648238 1.103891649  1.29947999    total #> 65   6.4 0.30538326 1.072264473  1.27557911    total #> 66   6.5 0.29467338 1.041393442  1.25155185    total #> 67   6.6 0.28433911 1.011269624  1.22744299    total #> 68   6.7 0.27436726 0.981883524  1.20329425    total #> 69   6.8 0.26474512 0.953225150  1.17914443    total #> 70   6.9 0.25546044 0.925284066  1.15502956    total #> 71   7.0 0.24650137 0.898049453  1.13098302    total #> 72   7.1 0.23785650 0.871510155  1.10703569    total #> 73   7.2 0.22951481 0.845654730  1.08321608    total #> 74   7.3 0.22146567 0.820471494  1.05955045    total #> 75   7.4 0.21369880 0.795948557  1.03606292    total #> 76   7.5 0.20620433 0.772073865  1.01277558    total #> 77   7.6 0.19897269 0.748835235  0.98970863    total #> 78   7.7 0.19199466 0.726220385  0.96688044    total #> 79   7.8 0.18526136 0.704216963  0.94430770    total #> 80   7.9 0.17876419 0.682812578  0.92200547    total #> 81   8.0 0.17249488 0.661994820  0.89998731    total #> 82   8.1 0.16644544 0.641751287  0.87826534    total #> 83   8.2 0.16060815 0.622069607  0.85685036    total #> 84   8.3 0.15497558 0.602937451  0.83575187    total #> 85   8.4 0.14954055 0.584342559  0.81497822    total #> 86   8.5 0.14429612 0.566272749  0.79453662    total #> 87   8.6 0.13923561 0.548715934  0.77443325    total #> 88   8.7 0.13435258 0.531660139  0.75467332    total #> 89   8.8 0.12964080 0.515093506  0.73526113    total #> 90   8.9 0.12509426 0.499004309  0.71620010    total #> 91   9.0 0.12070717 0.483380963  0.69749289    total #> 92   9.1 0.11647394 0.468212034  0.67914140    total #> 93   9.2 0.11238917 0.453486243  0.66114685    total #> 94   9.3 0.10844765 0.439192473  0.64350981    total #> 95   9.4 0.10464436 0.425319780  0.62623026    total #> 96   9.5 0.10097446 0.411857391  0.60930765    total #> 97   9.6 0.09743325 0.398794714  0.59274089    total #> 98   9.7 0.09401624 0.386121340  0.57652845    total #> 99   9.8 0.09071907 0.373827041  0.56066835    total #> 100  9.9 0.08753753 0.361901782  0.54515823    total #> 101 10.0 0.08446756 0.350335715  0.52999536    total #> 102 10.1 0.08150526 0.339119183  0.51517667    total #> 103 10.2 0.07864685 0.328242723  0.50069881    total #> 104 10.3 0.07588868 0.317697063  0.48655813    total #> 105 10.4 0.07322725 0.307473124  0.47275077    total #> 106 10.5 0.07065915 0.297562021  0.45927260    total #> 107 10.6 0.06818111 0.287955060  0.44611934    total #> 108 10.7 0.06578998 0.278643739  0.43328649    total #> 109 10.8 0.06348271 0.269619746  0.42076942    total #> 110 10.9 0.06125635 0.260874958  0.40856335    total #> 111 11.0 0.05910808 0.252401441  0.39666339    total #> 112 11.1 0.05703514 0.244191444  0.38506453    total #> 113 11.2 0.05503490 0.236237402  0.37376168    total #> 114 11.3 0.05310481 0.228531932  0.36274970    total #> 115 11.4 0.05124241 0.221067829  0.35202335    total #> 116 11.5 0.04944533 0.213838067  0.34157737    total #> 117 11.6 0.04771127 0.206835793  0.33140646    total #> 118 11.7 0.04603802 0.200054328  0.32150530    total #> 119 11.8 0.04442345 0.193487162  0.31186855    total #> 120 11.9 0.04286551 0.187127950  0.30249086    total #> 121 12.0 0.04136221 0.180970514  0.29336690    total #> 122 12.1 0.03991162 0.175008836  0.28449134    total #> 123 12.2 0.03851191 0.169237056  0.27585888    total #> 124 12.3 0.03716129 0.163649470  0.26746423    total #> 125 12.4 0.03585803 0.158240525  0.25930217    total #> 126 12.5 0.03460048 0.153004820  0.25136747    total #> 127 12.6 0.03338703 0.147937099  0.24365498    total #> 128 12.7 0.03221614 0.143032249  0.23615959    total #> 129 12.8 0.03108631 0.138285298  0.22887624    total #> 130 12.9 0.02999611 0.133691412  0.22179992    total #> 131 13.0 0.02894413 0.129245891  0.21492569    total #> 132 13.1 0.02792906 0.124944166  0.20824868    total #> 133 13.2 0.02694958 0.120781798  0.20176407    total #> 134 13.3 0.02600445 0.116754473  0.19546713    total #> 135 13.4 0.02509246 0.112858000  0.18935319    total #> 136 13.5 0.02421246 0.109088306  0.18341764    total #> 137 13.6 0.02336333 0.105441438  0.17765596    total #> 138 13.7 0.02254397 0.101913555  0.17206371    total #> 139 13.8 0.02175335 0.098500928  0.16663653    total #> 140 13.9 0.02099045 0.095199937  0.16137011    total #> 141 14.0 0.02025431 0.092007068  0.15626025    total #> 142 14.1 0.01954399 0.088918909  0.15130282    total #> 143 14.2 0.01885857 0.085932151  0.14649376    total #> 144 14.3 0.01819720 0.083043581  0.14182911    total #> 145 14.4 0.01755902 0.080250081  0.13730497    total #> 146 14.5 0.01694322 0.077548630  0.13291753    total #> 147 14.6 0.01634901 0.074936293  0.12866307    total #> 148 14.7 0.01577565 0.072410225  0.12453793    total #> 149 14.8 0.01522239 0.069967667  0.12053854    total #> 150 14.9 0.01468854 0.067605944  0.11666141    total #> 151  0.0 3.00000000 3.000000000 -3.00000000   direct #> 152  0.1 2.89478919 2.850550942 -2.92724153   direct #> 153  0.2 2.79326815 2.708546891 -2.85486193   direct #> 154  0.3 2.69530747 2.573616965 -2.78299339   direct #> 155  0.4 2.60078231 2.445408754 -2.71175371   direct #> 156  0.5 2.50957217 2.323587410 -2.64124750   direct #> 157  0.6 2.42156079 2.207834760 -2.57156720   direct #> 158  0.7 2.33663600 2.097848485 -2.50279409   direct #> 159  0.8 2.25468954 1.993341325 -2.43499924   direct #> 160  0.9 2.17561697 1.894040331 -2.36824433   direct #> 161  1.0 2.09931749 1.799686150 -2.30258245   direct #> 162  1.1 2.02569386 1.710032350 -2.23805882   direct #> 163  1.2 1.95465223 1.624844776 -2.17471149   direct #> 164  1.3 1.88610204 1.543900936 -2.11257197   direct #> 165  1.4 1.81995593 1.466989422 -2.05166577   direct #> 166  1.5 1.75612959 1.393909360 -1.99201297   direct #> 167  1.6 1.69454165 1.324469880 -1.93362870   direct #> 168  1.7 1.63511361 1.258489621 -1.87652362   direct #> 169  1.8 1.57776973 1.195796259 -1.82070431   direct #> 170  1.9 1.52243692 1.136226051 -1.76617367   direct #> 171  2.0 1.46904465 1.079623413 -1.71293131   direct #> 172  2.1 1.41752485 1.025840512 -1.66097382   direct #> 173  2.2 1.36781187 0.974736880 -1.61029513   direct #> 174  2.3 1.31984234 0.926179044 -1.56088678   direct #> 175  2.4 1.27355511 0.880040182 -1.51273817   direct #> 176  2.5 1.22889119 0.836199790 -1.46583677   direct #> 177  2.6 1.18579364 0.794543366 -1.42016841   direct #> 178  2.7 1.14420754 0.754962114 -1.37571741   direct #> 179  2.8 1.10407987 0.717352655 -1.33246680   direct #> 180  2.9 1.06535949 0.681616762 -1.29039849   direct #> 181  3.0 1.02799704 0.647661101 -1.24949342   direct #> 182  3.1 0.99194491 0.615396987 -1.20973168   direct #> 183  3.2 0.95715713 0.584740154 -1.17109268   direct #> 184  3.3 0.92358937 0.555610532 -1.13355523   direct #> 185  3.4 0.89119884 0.527932042 -1.09709768   direct #> 186  3.5 0.85994426 0.501632394 -1.06169799   direct #> 187  3.6 0.82978578 0.476642897 -1.02733384   direct #> 188  3.7 0.80068497 0.452898287 -0.99398270   direct #> 189  3.8 0.77260473 0.430336546 -0.96162191   direct #> 190  3.9 0.74550927 0.408898749 -0.93022875   direct #> 191  4.0 0.71936406 0.388528905 -0.89978047   direct #> 192  4.1 0.69413576 0.369173812 -0.87025439   direct #> 193  4.2 0.66979224 0.350782919 -0.84162792   direct #> 194  4.3 0.64630244 0.333308193 -0.81387861   direct #> 195  4.4 0.62363644 0.316703995 -0.78698417   direct #> 196  4.5 0.60176534 0.300926957 -0.76092256   direct #> 197  4.6 0.58066127 0.285935874 -0.73567196   direct #> 198  4.7 0.56029732 0.271691591 -0.71121081   direct #> 199  4.8 0.54064754 0.258156907 -0.68751787   direct #> 200  4.9 0.52168688 0.245296472 -0.66457219   direct #> 201  5.0 0.50339118 0.233076696 -0.64235317   direct #> 202  5.1 0.48573712 0.221465665 -0.62084055   direct #> 203  5.2 0.46870219 0.210433054 -0.60001444   direct #> 204  5.3 0.45226467 0.199950046 -0.57985530   direct #> 205  5.4 0.43640363 0.189989264 -0.56034400   direct #> 206  5.5 0.42109883 0.180524692 -0.54146176   direct #> 207  5.6 0.40633078 0.171531611 -0.52319023   direct #> 208  5.7 0.39208065 0.162986531 -0.50551144   direct #> 209  5.8 0.37833028 0.154867137 -0.48840782   direct #> 210  5.9 0.36506213 0.147152221 -0.47186219   direct #> 211  6.0 0.35225931 0.139821634 -0.45585779   direct #> 212  6.1 0.33990548 0.132856230 -0.44037825   direct #> 213  6.2 0.32798490 0.126237817 -0.42540760   direct #> 214  6.3 0.31648238 0.119949110 -0.41093027   direct #> 215  6.4 0.30538326 0.113973683 -0.39693108   direct #> 216  6.5 0.29467338 0.108295929 -0.38339525   direct #> 217  6.6 0.28433911 0.102901021 -0.37030837   direct #> 218  6.7 0.27436726 0.097774868 -0.35765642   direct #> 219  6.8 0.26474512 0.092904080 -0.34542576   direct #> 220  6.9 0.25546044 0.088275938 -0.33360311   direct #> 221  7.0 0.24650137 0.083878353 -0.32217556   direct #> 222  7.1 0.23785650 0.079699839 -0.31113057   direct #> 223  7.2 0.22951481 0.075729484 -0.30045594   direct #> 224  7.3 0.22146567 0.071956917 -0.29013982   direct #> 225  7.4 0.21369880 0.068372286 -0.28017069   direct #> 226  7.5 0.20620433 0.064966228 -0.27053738   direct #> 227  7.6 0.19897269 0.061729848 -0.26122904   direct #> 228  7.7 0.19199466 0.058654692 -0.25223512   direct #> 229  7.8 0.18526136 0.055732729 -0.24354541   direct #> 230  7.9 0.17876419 0.052956328 -0.23514999   direct #> 231  8.0 0.17249488 0.050318237 -0.22703924   direct #> 232  8.1 0.16644544 0.047811566 -0.21920383   direct #> 233  8.2 0.16060815 0.045429768 -0.21163471   direct #> 234  8.3 0.15497558 0.043166622 -0.20432312   direct #> 235  8.4 0.14954055 0.041016219 -0.19726054   direct #> 236  8.5 0.14429612 0.038972940 -0.19043875   direct #> 237  8.6 0.13923561 0.037031451 -0.18384976   direct #> 238  8.7 0.13435258 0.035186679 -0.17748584   direct #> 239  8.8 0.12964080 0.033433807 -0.17133950   direct #> 240  8.9 0.12509426 0.031768256 -0.16540348   direct #> 241  9.0 0.12070717 0.030185678 -0.15967076   direct #> 242  9.1 0.11647394 0.028681937 -0.15413453   direct #> 243  9.2 0.11238917 0.027253108 -0.14878821   direct #> 244  9.3 0.10844765 0.025895458 -0.14362542   direct #> 245  9.4 0.10464436 0.024605440 -0.13863999   direct #> 246  9.5 0.10097446 0.023379687 -0.13382595   direct #> 247  9.6 0.09743325 0.022214996 -0.12917752   direct #> 248  9.7 0.09401624 0.021108326 -0.12468910   direct #> 249  9.8 0.09071907 0.020056786 -0.12035530   direct #> 250  9.9 0.08753753 0.019057630 -0.11617086   direct #> 251 10.0 0.08446756 0.018108249 -0.11213073   direct #> 252 10.1 0.08150526 0.017206162 -0.10823002   direct #> 253 10.2 0.07864685 0.016349014 -0.10446397   direct #> 254 10.3 0.07588868 0.015534565 -0.10082802   direct #> 255 10.4 0.07322725 0.014760690 -0.09731774   direct #> 256 10.5 0.07065915 0.014025366 -0.09392883   direct #> 257 10.6 0.06818111 0.013326674 -0.09065717   direct #> 258 10.7 0.06578998 0.012662787 -0.08749874   direct #> 259 10.8 0.06348271 0.012031974 -0.08444967   direct #> 260 10.9 0.06125635 0.011432584 -0.08150623   direct #> 261 11.0 0.05910808 0.010863055 -0.07866480   direct #> 262 11.1 0.05703514 0.010321897 -0.07592187   direct #> 263 11.2 0.05503490 0.009807698 -0.07327408   direct #> 264 11.3 0.05310481 0.009319114 -0.07071816   direct #> 265 11.4 0.05124241 0.008854870 -0.06825094   direct #> 266 11.5 0.04944533 0.008413752 -0.06586939   direct #> 267 11.6 0.04771127 0.007994610 -0.06357056   direct #> 268 11.7 0.04603802 0.007596348 -0.06135159   direct #> 269 11.8 0.04442345 0.007217925 -0.05920975   direct #> 270 11.9 0.04286551 0.006858355 -0.05714236   direct #> 271 12.0 0.04136221 0.006516696 -0.05514687   direct #> 272 12.1 0.03991162 0.006192058 -0.05322079   direct #> 273 12.2 0.03851191 0.005883593 -0.05136173   direct #> 274 12.3 0.03716129 0.005590494 -0.04956737   direct #> 275 12.4 0.03585803 0.005311996 -0.04783548   direct #> 276 12.5 0.03460048 0.005047371 -0.04616389   direct #> 277 12.6 0.03338703 0.004795930 -0.04455052   direct #> 278 12.7 0.03221614 0.004557014 -0.04299336   direct #> 279 12.8 0.03108631 0.004330000 -0.04149046   direct #> 280 12.9 0.02999611 0.004114295 -0.04003993   direct #> 281 13.0 0.02894413 0.003909336 -0.03863998   direct #> 282 13.1 0.02792906 0.003714587 -0.03728883   direct #> 283 13.2 0.02694958 0.003529540 -0.03598481   direct #> 284 13.3 0.02600445 0.003353711 -0.03472626   direct #> 285 13.4 0.02509246 0.003186642 -0.03351163   direct #> 286 13.5 0.02421246 0.003027895 -0.03233938   direct #> 287 13.6 0.02336333 0.002877056 -0.03120803   direct #> 288 13.7 0.02254397 0.002733732 -0.03011618   direct #> 289 13.8 0.02175335 0.002597547 -0.02906244   direct #> 290 13.9 0.02099045 0.002468147 -0.02804549   direct #> 291 14.0 0.02025431 0.002345193 -0.02706405   direct #> 292 14.1 0.01954399 0.002228364 -0.02611689   direct #> 293 14.2 0.01885857 0.002117355 -0.02520282   direct #> 294 14.3 0.01819720 0.002011876 -0.02432068   direct #> 295 14.4 0.01755902 0.001911652 -0.02346936   direct #> 296 14.5 0.01694322 0.001816420 -0.02264779   direct #> 297 14.6 0.01634901 0.001725933 -0.02185492   direct #> 298 14.7 0.01577565 0.001639953 -0.02108978   direct #> 299 14.8 0.01522239 0.001558256 -0.02035137   direct #> 300 14.9 0.01468854 0.001480630 -0.01963879   direct #> 301  0.0 3.00000000 3.000000000 -3.00000000 indirect #> 302  0.1 2.89478919 3.072029427 -2.58521101 indirect #> 303  0.2 2.79326815 3.132703300 -2.19352996 indirect #> 304  0.3 2.69530747 3.182859714 -1.82417931 indirect #> 305  0.4 2.60078231 3.223285457 -1.47637642 indirect #> 306  0.5 2.50957217 3.254718908 -1.14933736 indirect #> 307  0.6 2.42156079 3.277852764 -0.84228031 indirect #> 308  0.7 2.33663600 3.293336633 -0.55442860 indirect #> 309  0.8 2.25468954 3.301779481 -0.28501322 indirect #> 310  0.9 2.17561697 3.303751945 -0.03327518 indirect #> 311  1.0 2.09931749 3.299788524  0.20153262 indirect #> 312  1.1 2.02569386 3.290389648  0.42014365 indirect #> 313  1.2 1.95465223 3.276023639  0.62327638 indirect #> 314  1.3 1.88610204 3.257128562  0.81163307 indirect #> 315  1.4 1.81995593 3.234113971  0.98589878 indirect #> 316  1.5 1.75612959 3.207362570  1.14674061 indirect #> 317  1.6 1.69454165 3.177231772  1.29480700 indirect #> 318  1.7 1.63511361 3.144055179  1.43072731 indirect #> 319  1.8 1.57776973 3.108143980  1.55511147 indirect #> 320  1.9 1.52243692 3.069788267  1.66854971 indirect #> 321  2.0 1.46904465 3.029258286  1.77161245 indirect #> 322  2.1 1.41752485 2.986805615  1.86485031 indirect #> 323  2.2 1.36781187 2.942664272  1.94879411 indirect #> 324  2.3 1.31984234 2.897051771  2.02395503 indirect #> 325  2.4 1.27355511 2.850170113  2.09082478 indirect #> 326  2.5 1.22889119 2.802206719  2.14987584 indirect #> 327  2.6 1.18579364 2.753335320  2.20156179 indirect #> 328  2.7 1.14420754 2.703716790  2.24631759 indirect #> 329  2.8 1.10407987 2.653499931  2.28455999 indirect #> 330  2.9 1.06535949 2.602822222  2.31668791 indirect #> 331  3.0 1.02799704 2.551810514  2.34308284 indirect #> 332  3.1 0.99194491 2.500581698  2.36410933 indirect #> 333  3.2 0.95715713 2.449243323  2.38011540 indirect #> 334  3.3 0.92358937 2.397894191  2.39143305 indirect #> 335  3.4 0.89119884 2.346624907  2.39837868 indirect #> 336  3.5 0.85994426 2.295518402  2.40125366 indirect #> 337  3.6 0.82978578 2.244650432  2.40034471 indirect #> 338  3.7 0.80068497 2.194090033  2.39592449 indirect #> 339  3.8 0.77260473 2.143899968  2.38825202 indirect #> 340  3.9 0.74550927 2.094137133  2.37757320 indirect #> 341  4.0 0.71936406 2.044852947  2.36412126 indirect #> 342  4.1 0.69413576 1.996093719  2.34811726 indirect #> 343  4.2 0.66979224 1.947900989  2.32977055 indirect #> 344  4.3 0.64630244 1.900311857  2.30927923 indirect #> 345  4.4 0.62363644 1.853359280  2.28683059 indirect #> 346  4.5 0.60176534 1.807072365  2.26260159 indirect #> 347  4.6 0.58066127 1.761476636  2.23675922 indirect #> 348  4.7 0.56029732 1.716594287  2.20946101 indirect #> 349  4.8 0.54064754 1.672444421  2.18085537 indirect #> 350  4.9 0.52168688 1.629043273  2.15108202 indirect #> 351  5.0 0.50339118 1.586404419  2.12027237 indirect #> 352  5.1 0.48573712 1.544538976  2.08854991 indirect #> 353  5.2 0.46870219 1.503455785  2.05603055 indirect #> 354  5.3 0.45226467 1.463161585  2.02282299 indirect #> 355  5.4 0.43640363 1.423661176  1.98902907 indirect #> 356  5.5 0.42109883 1.384957574  1.95474407 indirect #> 357  5.6 0.40633078 1.347052150  1.92005704 indirect #> 358  5.7 0.39208065 1.309944767  1.88505112 indirect #> 359  5.8 0.37833028 1.273633906  1.84980383 indirect #> 360  5.9 0.36506213 1.238116783  1.81438733 indirect #> 361  6.0 0.35225931 1.203389457  1.77886872 indirect #> 362  6.1 0.33990548 1.169446936  1.74331029 indirect #> 363  6.2 0.32798490 1.136283271  1.70776978 indirect #> 364  6.3 0.31648238 1.103891649  1.67230061 indirect #> 365  6.4 0.30538326 1.072264473  1.63695211 indirect #> 366  6.5 0.29467338 1.041393442  1.60176974 indirect #> 367  6.6 0.28433911 1.011269624  1.56679534 indirect #> 368  6.7 0.27436726 0.981883524  1.53206726 indirect #> 369  6.8 0.26474512 0.953225150  1.49762061 indirect #> 370  6.9 0.25546044 0.925284066  1.46348745 indirect #> 371  7.0 0.24650137 0.898049453  1.42969692 indirect #> 372  7.1 0.23785650 0.871510155  1.39627544 indirect #> 373  7.2 0.22951481 0.845654730  1.36324687 indirect #> 374  7.3 0.22146567 0.820471494  1.33063264 indirect #> 375  7.4 0.21369880 0.795948557  1.29845195 indirect #> 376  7.5 0.20620433 0.772073865  1.26672185 indirect #> 377  7.6 0.19897269 0.748835235  1.23545737 indirect #> 378  7.7 0.19199466 0.726220385  1.20467173 indirect #> 379  7.8 0.18526136 0.704216963  1.17437634 indirect #> 380  7.9 0.17876419 0.682812578  1.14458100 indirect #> 381  8.0 0.17249488 0.661994820  1.11529400 indirect #> 382  8.1 0.16644544 0.641751287  1.08652215 indirect #> 383  8.2 0.16060815 0.622069607  1.05827099 indirect #> 384  8.3 0.15497558 0.602937451  1.03054477 indirect #> 385  8.4 0.14954055 0.584342559  1.00334662 indirect #> 386  8.5 0.14429612 0.566272749  0.97667859 indirect #> 387  8.6 0.13923561 0.548715934  0.95054173 indirect #> 388  8.7 0.13435258 0.531660139  0.92493619 indirect #> 389  8.8 0.12964080 0.515093506  0.89986125 indirect #> 390  8.9 0.12509426 0.499004309  0.87531543 indirect #> 391  9.0 0.12070717 0.483380963  0.85129651 indirect #> 392  9.1 0.11647394 0.468212034  0.82780161 indirect #> 393  9.2 0.11238917 0.453486243  0.80482726 indirect #> 394  9.3 0.10844765 0.439192473  0.78236942 indirect #> 395  9.4 0.10464436 0.425319780  0.76042353 indirect #> 396  9.5 0.10097446 0.411857391  0.73898460 indirect #> 397  9.6 0.09743325 0.398794714  0.71804720 indirect #> 398  9.7 0.09401624 0.386121340  0.69760553 indirect #> 399  9.8 0.09071907 0.373827041  0.67765346 indirect #> 400  9.9 0.08753753 0.361901782  0.65818455 indirect #> 401 10.0 0.08446756 0.350335715  0.63919209 indirect #> 402 10.1 0.08150526 0.339119183  0.62066912 indirect #> 403 10.2 0.07864685 0.328242723  0.60260851 indirect #> 404 10.3 0.07588868 0.317697063  0.58500290 indirect #> 405 10.4 0.07322725 0.307473124  0.56784482 indirect #> 406 10.5 0.07065915 0.297562021  0.55112663 indirect #> 407 10.6 0.06818111 0.287955060  0.53484062 indirect #> 408 10.7 0.06578998 0.278643739  0.51897895 indirect #> 409 10.8 0.06348271 0.269619746  0.50353375 indirect #> 410 10.9 0.06125635 0.260874958  0.48849708 indirect #> 411 11.0 0.05910808 0.252401441  0.47386096 indirect #> 412 11.1 0.05703514 0.244191444  0.45961742 indirect #> 413 11.2 0.05503490 0.236237402  0.44575844 indirect #> 414 11.3 0.05310481 0.228531932  0.43227605 indirect #> 415 11.4 0.05124241 0.221067829  0.41916228 indirect #> 416 11.5 0.04944533 0.213838067  0.40640921 indirect #> 417 11.6 0.04771127 0.206835793  0.39400894 indirect #> 418 11.7 0.04603802 0.200054328  0.38195363 indirect #> 419 11.8 0.04442345 0.193487162  0.37023550 indirect #> 420 11.9 0.04286551 0.187127950  0.35884686 indirect #> 421 12.0 0.04136221 0.180970514  0.34778005 indirect #> 422 12.1 0.03991162 0.175008836  0.33702754 indirect #> 423 12.2 0.03851191 0.169237056  0.32658185 indirect #> 424 12.3 0.03716129 0.163649470  0.31643562 indirect #> 425 12.4 0.03585803 0.158240525  0.30658156 indirect #> 426 12.5 0.03460048 0.153004820  0.29701251 indirect #> 427 12.6 0.03338703 0.147937099  0.28772139 indirect #> 428 12.7 0.03221614 0.143032249  0.27870125 indirect #> 429 12.8 0.03108631 0.138285298  0.26994523 indirect #> 430 12.9 0.02999611 0.133691412  0.26144661 indirect #> 431 13.0 0.02894413 0.129245891  0.25319875 indirect #> 432 13.1 0.02792906 0.124944166  0.24519516 indirect #> 433 13.2 0.02694958 0.120781798  0.23742946 indirect #> 434 13.3 0.02600445 0.116754473  0.22989536 indirect #> 435 13.4 0.02509246 0.112858000  0.22258673 indirect #> 436 13.5 0.02421246 0.109088306  0.21549755 indirect #> 437 13.6 0.02336333 0.105441438  0.20862190 indirect #> 438 13.7 0.02254397 0.101913555  0.20195401 indirect #> 439 13.8 0.02175335 0.098500928  0.19548820 indirect #> 440 13.9 0.02099045 0.095199937  0.18921895 indirect #> 441 14.0 0.02025431 0.092007068  0.18314082 indirect #> 442 14.1 0.01954399 0.088918909  0.17724851 indirect #> 443 14.2 0.01885857 0.085932151  0.17153684 indirect #> 444 14.3 0.01819720 0.083043581  0.16600074 indirect #> 445 14.4 0.01755902 0.080250081  0.16063526 indirect #> 446 14.5 0.01694322 0.077548630  0.15543557 indirect #> 447 14.6 0.01634901 0.074936293  0.15039693 indirect #> 448 14.7 0.01577565 0.072410225  0.14551475 indirect #> 449 14.8 0.01522239 0.069967667  0.14078452 indirect #> 450 14.9 0.01468854 0.067605944  0.13620185 indirect"},{"path":"https://github.com/jeksterslab/cTMed/news/index.html","id":"ctmed-101","dir":"Changelog","previous_headings":"","what":"cTMed 1.0.1","title":"cTMed 1.0.1","text":"Minor edits documentation.","code":""},{"path":"https://github.com/jeksterslab/cTMed/news/index.html","id":"ctmed-100","dir":"Changelog","previous_headings":"","what":"cTMed 1.0.0","title":"cTMed 1.0.0","text":"Initial CRAN submission.","code":""}]
